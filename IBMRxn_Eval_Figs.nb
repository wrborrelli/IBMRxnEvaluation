(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    368172,       8261]
NotebookOptionsPosition[    357098,       8064]
NotebookOutlinePosition[    357536,       8081]
CellTagsIndexPosition[    357493,       8078]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["IBM Rxn Evaluation Write-up Figures", "Title",
 CellChangeTimes->{{3.8099092122608423`*^9, 
  3.8099092172926736`*^9}},ExpressionUUID->"a80f126e-2e9f-4e88-a004-\
16ac514463dc"],

Cell[CellGroupData[{

Cell["Import Data", "Section",
 CellChangeTimes->{{3.809909243254603*^9, 
  3.809909244471092*^9}},ExpressionUUID->"e7a40034-5309-42e1-9c68-\
45725d119c78"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{
   "SemanticImport", "[", 
    "\"\<C:\\\\Users\\\\willr\\\\Desktop\\\\SchrierRsrch\\\\IBMRxn\\\\retro\\\
\\allDatAnaly98.csv\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8099091792490635`*^9, 3.8099092059401636`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"d83c8e00-4229-4928-9af3-3203f7aa20cf"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
IBM Rxn API Wrapper Code - (https://github.com/wrborrelli/IBMRxnAPI)\
\>", "Section",
 CellChangeTimes->{{3.8052960288527985`*^9, 
  3.8052960475574856`*^9}},ExpressionUUID->"00cc5b15-c659-4af7-a722-\
78a5925aa4e9"],

Cell[CellGroupData[{

Cell["Necessary Variable Assignments ", "Subsection",
 CellChangeTimes->{{3.7975374211029177`*^9, 3.7975374250376205`*^9}, 
   3.7975374588896036`*^9},ExpressionUUID->"5bca2357-55ec-4004-85f5-\
fc86f9dcb7a6"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Initial", " ", "run", " ", "of", " ", "this", " ", "notebook", " ", "will",
    " ", "prompt", " ", "you", " ", "to", " ", "enter", " ", "your", " ", 
   "authorization", " ", 
   RowBox[{"key", ".", " ", "Once"}], " ", 
   RowBox[{"you", "'"}], "ve", " ", "done", " ", "that", " ", "feel", " ", 
   "free", " ", "to", " ", "delete", " ", "the", " ", "following", " ", 
   RowBox[{"cell", "."}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7972036543275347`*^9, 3.7972036807675376`*^9}, {
  3.797203753432905*^9, 3.797203756375533*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"21555b03-a397-4fae-9204-b7ca24cbc6f1"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"SystemCredential", "[", "\"\<authKey\>\"", "]"}], "=", 
    RowBox[{"InputString", "[", "\"\<Authorization Key\>\"", "]"}]}], ";"}], 
  "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7972035346836586`*^9, 3.797203613748534*^9}, {
  3.7972037239796085`*^9, 3.7972037260662007`*^9}, {3.7972037603341584`*^9, 
  3.7972037625017996`*^9}, {3.8052959916057563`*^9, 3.8052959939223623`*^9}, {
  3.8065098216983023`*^9, 3.8065098221593018`*^9}, {3.80650999416652*^9, 
  3.806509996123562*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"ac30f7c2-ef96-4db3-b649-ab8d5a876d54"],

Cell[BoxData[
 RowBox[{
  RowBox[{"authKey", "=", 
   RowBox[{"SystemCredential", "[", "\"\<authKey\>\"", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7942602183491096`*^9, 3.794260226146757*^9}, {
  3.7971813681910315`*^9, 3.7971813942920704`*^9}, {3.7975314093140497`*^9, 
  3.797531411842142*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"c4504123-0251-4e58-8480-0a786f710fbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wrapper Code", "Subsection",
 CellChangeTimes->{{3.7975374294978924`*^9, 
  3.7975374354095993`*^9}},ExpressionUUID->"85cdf90f-a97a-4f3d-8fd1-\
eace89c017aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"baseURL", "=", "\"\<rxn.res.ibm.com\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[182]:=",ExpressionUUID->"b41dd2b9-6947-430e-8b6a-88c0eb7bc88b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IBMRxn", "[", 
   RowBox[{"req_String", ",", "molecs_List", ",", "projID_String"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"reactantList", "=", 
       RowBox[{"{", "}"}]}], ",", "createProj", ",", "projectID", ",", 
      "createPred", ",", "getPred", ",", "rxnImg", ",", "rxnConf", ",", 
      "predID", ",", "projName", ",", "reactants"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", "]"}], " ", "you", " ", "want", " ", "to", " ", 
        "make", " ", "a", " ", "\"\<new prediction\>\""}], ",", " ", 
       RowBox[{"this", " ", "code", " ", "block", " ", "runs"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"req", "\[Equal]", "\"\<new prediction\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Which", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ImageQ", "[", 
            RowBox[{"molecs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"reactantList", ",", 
             RowBox[{
              RowBox[{"MoleculeRecognize", "[", 
               RowBox[{"molecs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", "\"\<SMILES\>\"", 
              "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"StringQ", "[", 
            RowBox[{"molecs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"reactantList", ",", 
             RowBox[{"molecs", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "molecs", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"reactants", "=", 
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"#", ",", "\"\<.\>\""}], "]"}], "&"}], "@", 
          "reactantList"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"createPred", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", 
             "\"\</rxn/api/api/v1/predictions/pr?projectId=\>\"", "<>", 
             "projID"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<POST\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<Body\>\"", "\[Rule]", 
              RowBox[{"ExportString", "[", 
               RowBox[{
                RowBox[{"<|", 
                 RowBox[{"\"\<reactants\>\"", "\[Rule]", "reactants"}], 
                 "|>"}], ",", "\"\<JSON\>\""}], "]"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"predID", "=", 
        RowBox[{"createPred", "[", 
         RowBox[{"\"\<payload\>\"", ",", "\"\<id\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Pause", "[", "10", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"getPred", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", "\"\</rxn/api/api/v1/predictions/\>\"", "<>", 
             "predID"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"projName", "=", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"getPred", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<name\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"\"\<_\>\"", "~~", "___"}], "\[Rule]", "\"\<\>\""}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"projectID", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"getPred", "[", 
           RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<projectId\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"rxnImg", "=", 
        RowBox[{
         RowBox[{"ResourceFunction", "[", "\"\<SVGImport\>\"", "]"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"getPred", "[", 
            RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<reactionImage\>\"", 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rxnConf", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"getPred", "[", 
           RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"rxnImg", "\[IndentingNewLine]", 
        RowBox[{"TableForm", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
            "projName", ",", "projectID", ",", "predID", ",", "rxnConf"}], 
            "}"}], "}"}], ",", 
          RowBox[{"TableHeadings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Project Name\>\"", ",", "\"\<Project ID\>\"", ",", 
               "\"\<Prediction ID\>\"", ",", 
               "\"\<Prediction Confidence\>\""}], "}"}]}], "}"}]}]}], 
         "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.795986144860876*^9, 3.79598644431726*^9}, {
   3.79598650308416*^9, 3.7959865122207365`*^9}, {3.7959870643585467`*^9, 
   3.795987064543061*^9}, {3.795987110027493*^9, 3.795987118002179*^9}, {
   3.7960003491960073`*^9, 3.7960003586048136`*^9}, {3.796000405363846*^9, 
   3.796000458009483*^9}, {3.796000601260132*^9, 3.796000605546856*^9}, {
   3.796000667805503*^9, 3.7960007406904755`*^9}, {3.796000908441061*^9, 
   3.796000925498427*^9}, {3.796001044702774*^9, 3.7960010685370584`*^9}, {
   3.796001103927483*^9, 3.7960011046216264`*^9}, {3.796001152463696*^9, 
   3.796001153905843*^9}, {3.7960014814810705`*^9, 3.7960015000069103`*^9}, {
   3.7960015684647694`*^9, 3.7960015885640697`*^9}, {3.796001630569461*^9, 
   3.796001681962406*^9}, {3.796002794435841*^9, 3.796002798467066*^9}, {
   3.7960029863210444`*^9, 3.796003017010869*^9}, {3.7960031036576867`*^9, 
   3.7960031060443068`*^9}, {3.796003238982705*^9, 3.7960032733378625`*^9}, {
   3.796003362499507*^9, 3.7960033839048443`*^9}, {3.7962723203052273`*^9, 
   3.7962723330720696`*^9}, {3.7962724127467775`*^9, 3.796272426073122*^9}, {
   3.796272469744663*^9, 3.7962725189177885`*^9}, {3.796431329606385*^9, 
   3.796431356065595*^9}, {3.7964327946145573`*^9, 3.796432873456643*^9}, 
   3.796432947511507*^9, {3.7964331780861363`*^9, 3.796433188837371*^9}, {
   3.7964332205814056`*^9, 3.7964332235654573`*^9}, 3.796433290698106*^9, {
   3.7964334399388046`*^9, 3.7964334727210965`*^9}, {3.7964335292787724`*^9, 
   3.7964335455681915`*^9}, {3.7964336256050477`*^9, 3.796433626883628*^9}, {
   3.79644254285199*^9, 3.796442569519638*^9}, {3.796442643955738*^9, 
   3.7964426479437532`*^9}, {3.7964431581749563`*^9, 
   3.7964431735527787`*^9}, {3.796499909569053*^9, 3.7964999712433357`*^9}, 
   3.796500285848811*^9, {3.7965004601641636`*^9, 3.796500464311371*^9}, {
   3.7965007487052436`*^9, 3.796500754728756*^9}, {3.7965007942296085`*^9, 
   3.7965008144360437`*^9}, {3.7966066854531636`*^9, 
   3.7966066885949774`*^9}, {3.796606725229041*^9, 3.7966067276968837`*^9}, 
   3.7966081101819167`*^9, {3.796946324730117*^9, 3.7969463262305746`*^9}, {
   3.7971071197141275`*^9, 3.797107209043025*^9}, {3.7971072979660845`*^9, 
   3.797107301353022*^9}, {3.797108164715864*^9, 3.7971082039812574`*^9}, {
   3.7971082411969695`*^9, 3.7971082793879004`*^9}, {3.7971085532187147`*^9, 
   3.797108578602683*^9}, {3.8065018943836527`*^9, 3.806501895412402*^9}},
 CellLabel->"In[183]:=",
 CellID->82462656,ExpressionUUID->"caaaff2a-a235-44af-8a07-685698a83de2"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"duplicate", " ", "of", " ", "above"}], " ", "-", " ", 
   RowBox[{
   "for", " ", "adding", " ", "a", " ", "output", " ", "format", " ", 
    "parameter"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8064629794376698`*^9, 3.806462991132574*^9}},
 CellLabel->"In[184]:=",
 CellID->710133259,ExpressionUUID->"95a8071c-4ad8-4042-9cea-ffd4dda94d90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IBMRxn", "[", 
   RowBox[{
   "req_String", ",", "molecs_List", ",", "projID_String", ",", 
    "outType_String"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"reactantList", "=", 
       RowBox[{"{", "}"}]}], ",", "createProj", ",", "projectID", ",", 
      "createPred", ",", "getPred", ",", "rxnImg", ",", "rxnConf", ",", 
      "predID", ",", "projName", ",", "reactants", ",", "rsmiles"}], "}"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", "]"}], " ", "you", " ", "want", " ", "to", " ", 
        "make", " ", "a", " ", "\"\<new prediction\>\""}], ",", " ", 
       RowBox[{"this", " ", "code", " ", "block", " ", "runs"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"req", "\[Equal]", "\"\<new prediction\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Which", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ImageQ", "[", 
            RowBox[{"molecs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"reactantList", ",", 
             RowBox[{
              RowBox[{"MoleculeRecognize", "[", 
               RowBox[{"molecs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", "\"\<SMILES\>\"", 
              "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"StringQ", "[", 
            RowBox[{"molecs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"reactantList", ",", 
             RowBox[{"molecs", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "molecs", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"reactants", "=", 
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"#", ",", "\"\<.\>\""}], "]"}], "&"}], "@", 
          "reactantList"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"createPred", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", 
             "\"\</rxn/api/api/v1/predictions/pr?projectId=\>\"", "<>", 
             "projID"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<POST\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<Body\>\"", "\[Rule]", 
              RowBox[{"ExportString", "[", 
               RowBox[{
                RowBox[{"<|", 
                 RowBox[{"\"\<reactants\>\"", "\[Rule]", "reactants"}], 
                 "|>"}], ",", "\"\<JSON\>\""}], "]"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"predID", "=", 
        RowBox[{"createPred", "[", 
         RowBox[{"\"\<payload\>\"", ",", "\"\<id\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Pause", "[", "10", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"getPred", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", "\"\</rxn/api/api/v1/predictions/\>\"", "<>", 
             "predID"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"outType", "\[Equal]", "\"\<\>\""}], "||", 
          RowBox[{"StringMatchQ", "[", 
           RowBox[{
            RowBox[{"ToString", "@", "outType"}], ",", "\"\<default\>\"", ",", 
            RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"projName", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"getPred", "[", 
                RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
               "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<name\>\"", "]"}], 
             ",", 
             RowBox[{
              RowBox[{"\"\<_\>\"", "~~", "___"}], "\[Rule]", "\"\<\>\""}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"projectID", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"getPred", "[", 
              RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<projectId\>\"", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rxnImg", "=", 
           RowBox[{
            RowBox[{"ResourceFunction", "[", "\"\<SVGImport\>\"", "]"}], "[", 
            RowBox[{
             RowBox[{
              RowBox[{"getPred", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
              "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<reactionImage\>\"", 
             "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rxnConf", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"getPred", "[", 
              RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"rxnImg", "\[IndentingNewLine]", 
           RowBox[{"TableForm", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{
               "projName", ",", "projectID", ",", "predID", ",", "rxnConf"}], 
               "}"}], "}"}], ",", 
             RowBox[{"TableHeadings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Project Name\>\"", ",", "\"\<Project ID\>\"", ",", 
                  "\"\<Prediction ID\>\"", ",", 
                  "\"\<Prediction Confidence\>\""}], "}"}]}], "}"}]}]}], 
            "]"}]}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"StringMatchQ", "[", 
          RowBox[{
           RowBox[{"ToString", "@", "outType"}], ",", "\"\<dataset\>\"", ",", 
           RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"projName", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"getPred", "[", 
                RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
               "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<name\>\"", "]"}], 
             ",", 
             RowBox[{
              RowBox[{"\"\<_\>\"", "~~", "___"}], "\[Rule]", "\"\<\>\""}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"projectID", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"getPred", "[", 
              RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<projectId\>\"", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rxnImg", "=", 
           RowBox[{
            RowBox[{"ResourceFunction", "[", "\"\<SVGImport\>\"", "]"}], "[", 
            RowBox[{
             RowBox[{
              RowBox[{"getPred", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
              "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<reactionImage\>\"", 
             "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rxnConf", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"getPred", "[", 
              RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rsmiles", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"getPred", "[", 
              RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<smiles\>\"", "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<project name\>\"", "\[Rule]", "projName"}], ",", 
             RowBox[{"\"\<projID\>\"", "\[Rule]", "projectID"}], ",", 
             RowBox[{"\"\<predID\>\"", "\[Rule]", "predID"}], ",", 
             RowBox[{"\"\<rreac\>\"", "\[Rule]", 
              RowBox[{
               RowBox[{"reacSplit", "[", "rsmiles", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<rprod\>\"", "\[Rule]", 
              RowBox[{
               RowBox[{"reacSplit", "[", "rsmiles", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<conf\>\"", "\[Rule]", "rxnConf"}], ",", 
             RowBox[{"\"\<reaction image\>\"", "\[Rule]", "rxnImg"}]}], 
            "|>"}], "//", "Dataset"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.795986144860876*^9, 3.79598644431726*^9}, {
   3.79598650308416*^9, 3.7959865122207365`*^9}, {3.7959870643585467`*^9, 
   3.795987064543061*^9}, {3.795987110027493*^9, 3.795987118002179*^9}, {
   3.7960003491960073`*^9, 3.7960003586048136`*^9}, {3.796000405363846*^9, 
   3.796000458009483*^9}, {3.796000601260132*^9, 3.796000605546856*^9}, {
   3.796000667805503*^9, 3.7960007406904755`*^9}, {3.796000908441061*^9, 
   3.796000925498427*^9}, {3.796001044702774*^9, 3.7960010685370584`*^9}, {
   3.796001103927483*^9, 3.7960011046216264`*^9}, {3.796001152463696*^9, 
   3.796001153905843*^9}, {3.7960014814810705`*^9, 3.7960015000069103`*^9}, {
   3.7960015684647694`*^9, 3.7960015885640697`*^9}, {3.796001630569461*^9, 
   3.796001681962406*^9}, {3.796002794435841*^9, 3.796002798467066*^9}, {
   3.7960029863210444`*^9, 3.796003017010869*^9}, {3.7960031036576867`*^9, 
   3.7960031060443068`*^9}, {3.796003238982705*^9, 3.7960032733378625`*^9}, {
   3.796003362499507*^9, 3.7960033839048443`*^9}, {3.7962723203052273`*^9, 
   3.7962723330720696`*^9}, {3.7962724127467775`*^9, 3.796272426073122*^9}, {
   3.796272469744663*^9, 3.7962725189177885`*^9}, {3.796431329606385*^9, 
   3.796431356065595*^9}, {3.7964327946145573`*^9, 3.796432873456643*^9}, 
   3.796432947511507*^9, {3.7964331780861363`*^9, 3.796433188837371*^9}, {
   3.7964332205814056`*^9, 3.7964332235654573`*^9}, 3.796433290698106*^9, {
   3.7964334399388046`*^9, 3.7964334727210965`*^9}, {3.7964335292787724`*^9, 
   3.7964335455681915`*^9}, {3.7964336256050477`*^9, 3.796433626883628*^9}, {
   3.79644254285199*^9, 3.796442569519638*^9}, {3.796442643955738*^9, 
   3.7964426479437532`*^9}, {3.7964431581749563`*^9, 
   3.7964431735527787`*^9}, {3.796499909569053*^9, 3.7964999712433357`*^9}, 
   3.796500285848811*^9, {3.7965004601641636`*^9, 3.796500464311371*^9}, {
   3.7965007487052436`*^9, 3.796500754728756*^9}, {3.7965007942296085`*^9, 
   3.7965008144360437`*^9}, {3.7966066854531636`*^9, 
   3.7966066885949774`*^9}, {3.796606725229041*^9, 3.7966067276968837`*^9}, 
   3.7966081101819167`*^9, {3.796946324730117*^9, 3.7969463262305746`*^9}, {
   3.7971071197141275`*^9, 3.797107209043025*^9}, {3.7971072979660845`*^9, 
   3.797107301353022*^9}, {3.797108164715864*^9, 3.7971082039812574`*^9}, {
   3.7971082411969695`*^9, 3.7971082793879004`*^9}, {3.7971085532187147`*^9, 
   3.797108578602683*^9}, {3.8064630182359743`*^9, 3.806463074924348*^9}, {
   3.8064631382448907`*^9, 3.8064631653617144`*^9}, {3.8064633394708424`*^9, 
   3.806463340386791*^9}, {3.806463681449692*^9, 3.8064636924163957`*^9}, {
   3.806464969422653*^9, 3.8064649711096334`*^9}, 3.806774614705201*^9},
 CellLabel->"In[185]:=",
 CellID->456565911,ExpressionUUID->"6ee6498a-9ff8-486d-b595-abe405d7187b"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "for", " ", "getting", " ", "more", " ", "outcomes", " ", "from", " ", "a", 
   " ", "prediction", " ", "that", " ", 
   RowBox[{"you", "'"}], "ve", " ", "already", " ", "made"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7966048169138365`*^9, 3.796604824743116*^9}, {
  3.7966069579699907`*^9, 3.796606962726446*^9}, {3.796608234070084*^9, 
  3.7966082376607156`*^9}, {3.7966653476400566`*^9, 3.7966653494043646`*^9}},
 CellLabel->"In[186]:=",
 CellID->302969558,ExpressionUUID->"abff4f5c-591c-4a5d-aebe-126778f4cc16"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IBMRxn", "[", 
   RowBox[{"req_String", ",", "projID_String", ",", "predID_String"}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "getPred", ",", "reactants", ",", "morePreds", ",", "projName", ",", 
      RowBox[{"rxnImgList", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"rxnConfList", "=", 
       RowBox[{"{", "}"}]}], ",", "rxnImages", ",", "rxnTables", ",", 
      "preds"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"req", "\[Equal]", "\"\<more predictions\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"getPred", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", "\"\</rxn/api/api/v1/predictions/\>\"", "<>", 
             "predID"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "\[IndentingNewLine]", "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"reactants", "=", 
        RowBox[{"getPred", "[", 
         RowBox[{
         "\"\<payload\>\"", ",", "\"\<request\>\"", ",", 
          "\"\<reactants\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Pause", "[", "10", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"morePreds", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", 
             "\"\</rxn/api/api/v1/predictions/prb?predictionId=\>\"", "<>", 
             "predID", "<>", "\"\<&projectId=\>\"", "<>", "projID"}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<POST\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<Body\>\"", "\[Rule]", 
              RowBox[{"ExportString", "[", 
               RowBox[{
                RowBox[{"<|", 
                 RowBox[{"\"\<reactants\>\"", "\[Rule]", "reactants"}], 
                 "|>"}], ",", "\"\<JSON\>\""}], "]"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Pause", "[", "10", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"getPred", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", "\"\</rxn/api/api/v1/predictions/\>\"", "<>", 
             "predID"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", "\n",
        "\[IndentingNewLine]", 
       RowBox[{"projName", "=", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"getPred", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<name\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"\"\<_\>\"", "~~", "___"}], "\[Rule]", "\"\<\>\""}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\n", 
       RowBox[{"Do", "[", 
        RowBox[{"(*", " ", 
         RowBox[{
         "add", " ", "each", " ", "rxn", " ", "img", " ", "to", " ", "the", 
          " ", "list"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"rxnImgList", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"getPred", "[", 
              RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<reactionImage\>\"", 
            "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"getPred", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
            "]"}]}], "}"}]}], "]"}], ";", "\n", 
       RowBox[{"Do", "[", 
        RowBox[{"(*", " ", 
         RowBox[{
         "add", " ", "each", " ", "confidence", " ", "to", " ", "the", " ", 
          "list"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"rxnConfList", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"getPred", "[", 
              RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<confidence\>\"", 
            "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"getPred", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
            "]"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\n", 
       RowBox[{"rxnImages", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ResourceFunction", "[", "\"\<SVGImport\>\"", "]"}], "[", 
           "#", "]"}], "&"}], "/@", "rxnImgList"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rxnTables", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"TableForm", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"projName", ",", "projID", ",", "predID", ",", "#"}], 
              "}"}], "}"}], ",", 
            RowBox[{"TableHeadings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"None", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Project Name\>\"", ",", "\"\<Project ID\>\"", ",", 
                 "\"\<Prediction ID\>\"", ",", 
                 "\"\<Prediction Confidence\>\""}], "}"}]}], "}"}]}]}], "]"}],
           "&"}], "/@", "rxnConfList"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"preds", "=", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Riffle", "[", 
           RowBox[{"rxnImages", ",", "rxnTables"}], "]"}], ",", "2"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "preds"}]}], 
     "\[IndentingNewLine]", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7966048273575273`*^9, 3.796604858716375*^9}, {
   3.7966056020915155`*^9, 3.7966056709887476`*^9}, {3.7966060217115064`*^9, 
   3.7966061234995856`*^9}, {3.796606161962845*^9, 3.796606195687956*^9}, {
   3.796606265747727*^9, 3.796606277792094*^9}, {3.7966069778376865`*^9, 
   3.796606986757205*^9}, {3.7966070212949324`*^9, 3.7966071335851355`*^9}, {
   3.7966072008858385`*^9, 3.7966072026884594`*^9}, {3.7966073107003326`*^9, 
   3.796607312581195*^9}, 3.7966074243015375`*^9, {3.796664227152815*^9, 
   3.7966642999232216`*^9}, {3.7966643394691095`*^9, 
   3.7966643746347904`*^9}, {3.7966646424516697`*^9, 
   3.7966646615983305`*^9}, {3.7966647277832966`*^9, 3.796664734626317*^9}, {
   3.7966648219309006`*^9, 3.7966649213362985`*^9}, {3.796665148463957*^9, 
   3.796665180509827*^9}, {3.7966652476754694`*^9, 3.7966652478630915`*^9}, 
   3.7966742404776964`*^9, {3.7967464247039127`*^9, 3.7967464374365673`*^9}, {
   3.796835848604594*^9, 3.7968358563149652`*^9}, {3.796946328686369*^9, 
   3.796946329578334*^9}, {3.7969471229514885`*^9, 3.7969471239833384`*^9}, {
   3.797111247008312*^9, 3.797111247730384*^9}, 3.8065019008987184`*^9},
 CellLabel->"In[187]:=",
 CellID->546080698,ExpressionUUID->"a27db0f2-af40-4ba8-9885-df8da16ed5b0"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"duplicate", " ", "of", " ", "above"}], " ", "-", " ", 
   RowBox[{"for", " ", "adding", " ", "an", " ", "output", " ", "type"}]}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7966048169138365`*^9, 3.796604824743116*^9}, {
  3.7966069579699907`*^9, 3.796606962726446*^9}, {3.796608234070084*^9, 
  3.7966082376607156`*^9}, {3.7966653476400566`*^9, 3.7966653494043646`*^9}, {
  3.8064635623042665`*^9, 3.8064635730740023`*^9}},
 CellLabel->"In[188]:=",
 CellID->835366906,ExpressionUUID->"c3f600ea-d486-4b97-b506-3b57a3ffe244"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IBMRxn", "[", 
   RowBox[{
   "req_String", ",", "projID_String", ",", "predID_String", ",", 
    "outType_String"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "getPred", ",", "reactants", ",", "morePreds", ",", "projName", ",", 
      RowBox[{"rxnImgList", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"rxnConfList", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"rsmilesList", "=", 
       RowBox[{"{", "}"}]}], ",", "rxnImages", ",", "rxnTables", ",", 
      "preds"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"req", "\[Equal]", "\"\<more predictions\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"getPred", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", "\"\</rxn/api/api/v1/predictions/\>\"", "<>", 
             "predID"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "\[IndentingNewLine]", "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"reactants", "=", 
        RowBox[{"getPred", "[", 
         RowBox[{
         "\"\<payload\>\"", ",", "\"\<request\>\"", ",", 
          "\"\<reactants\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Pause", "[", "10", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"morePreds", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", 
             "\"\</rxn/api/api/v1/predictions/prb?predictionId=\>\"", "<>", 
             "predID", "<>", "\"\<&projectId=\>\"", "<>", "projID"}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<POST\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<Body\>\"", "\[Rule]", 
              RowBox[{"ExportString", "[", 
               RowBox[{
                RowBox[{"<|", 
                 RowBox[{"\"\<reactants\>\"", "\[Rule]", "reactants"}], 
                 "|>"}], ",", "\"\<JSON\>\""}], "]"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Pause", "[", "10", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"getPred", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", "\"\</rxn/api/api/v1/predictions/\>\"", "<>", 
             "predID"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", "\n",
        "\[IndentingNewLine]", 
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"outType", "\[Equal]", "\"\<\>\""}], "||", 
          RowBox[{"StringMatchQ", "[", 
           RowBox[{
            RowBox[{"ToString", "@", "outType"}], ",", "\"\<default\>\"", ",", 
            RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"projName", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"getPred", "[", 
                RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
               "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<name\>\"", "]"}], 
             ",", 
             RowBox[{
              RowBox[{"\"\<_\>\"", "~~", "___"}], "\[Rule]", "\"\<\>\""}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\n", 
          RowBox[{"Do", "[", 
           RowBox[{"(*", " ", 
            RowBox[{
            "add", " ", "each", " ", "rxn", " ", "img", " ", "to", " ", "the",
              " ", "list"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"rxnImgList", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"getPred", "[", 
                 RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
                "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<reactionImage\>\"", 
               "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"getPred", "[", 
                RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
               "]"}]}], "}"}]}], "]"}], ";", "\n", 
          RowBox[{"Do", "[", 
           RowBox[{"(*", " ", 
            RowBox[{
            "add", " ", "each", " ", "confidence", " ", "to", " ", "the", " ",
              "list"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"rxnConfList", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"getPred", "[", 
                 RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
                "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<confidence\>\"", 
               "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"getPred", "[", 
                RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
               "]"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\n", 
          RowBox[{"rxnImages", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"ResourceFunction", "[", "\"\<SVGImport\>\"", "]"}], 
              "[", "#", "]"}], "&"}], "/@", "rxnImgList"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rxnTables", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"TableForm", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{"projName", ",", "projID", ",", "predID", ",", "#"}],
                  "}"}], "}"}], ",", 
               RowBox[{"TableHeadings", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"None", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<Project Name\>\"", ",", "\"\<Project ID\>\"", ",", 
                    "\"\<Prediction ID\>\"", ",", 
                    "\"\<Prediction Confidence\>\""}], "}"}]}], "}"}]}]}], 
              "]"}], "&"}], "/@", "rxnConfList"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"preds", "=", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"Riffle", "[", 
              RowBox[{"rxnImages", ",", "rxnTables"}], "]"}], ",", "2"}], 
            "]"}]}], ";", "\[IndentingNewLine]", "preds"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"StringMatchQ", "[", 
          RowBox[{
           RowBox[{"ToString", "@", "outType"}], ",", "\"\<dataset\>\"", ",", 
           RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"projName", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"getPred", "[", 
                RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
               "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<name\>\"", "]"}], 
             ",", 
             RowBox[{
              RowBox[{"\"\<_\>\"", "~~", "___"}], "\[Rule]", "\"\<\>\""}]}], 
            "]"}]}], ";", "\n", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{"(*", " ", 
            RowBox[{
            "add", " ", "each", " ", "rxn", " ", "img", " ", "to", " ", "the",
              " ", "list"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"rxnImgList", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"getPred", "[", 
                 RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
                "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<reactionImage\>\"", 
               "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"getPred", "[", 
                RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
               "]"}]}], "}"}]}], "]"}], ";", "\n", "\t", 
          RowBox[{"Do", "[", 
           RowBox[{"(*", " ", 
            RowBox[{
            "add", " ", "each", " ", "confidence", " ", "to", " ", "the", " ",
              "list"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"rxnConfList", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"getPred", "[", 
                 RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
                "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<confidence\>\"", 
               "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"getPred", "[", 
                RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
               "]"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{"(*", " ", 
            RowBox[{
            "add", " ", "each", " ", "rsmiles", " ", "to", " ", "the", " ", 
             "list"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"rsmilesList", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"getPred", "[", 
                 RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
                "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<smiles\>\"", 
               "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"getPred", "[", 
                RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
               "]"}]}], "}"}]}], "]"}], ";", "\n", "\[IndentingNewLine]", 
          RowBox[{"rxnImages", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"ResourceFunction", "[", "\"\<SVGImport\>\"", "]"}], 
              "[", "#", "]"}], "&"}], "/@", "rxnImgList"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Dataset", "@", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<project name\>\"", "\[Rule]", "projName"}], ",", 
                RowBox[{"\"\<projID\>\"", "\[Rule]", "projID"}], ",", 
                RowBox[{"\"\<predID\>\"", "\[Rule]", "predID"}], ",", 
                RowBox[{"\"\<rreac\>\"", "\[Rule]", 
                 RowBox[{
                  RowBox[{"reacSplit", "[", "#1", "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                RowBox[{"\"\<rprod\>\"", "\[Rule]", 
                 RowBox[{
                  RowBox[{"reacSplit", "[", "#1", "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                RowBox[{"\"\<conf\>\"", "\[Rule]", "#2"}], ",", 
                RowBox[{"\"\<reaction image\>\"", "\[Rule]", "#3"}]}], "|>"}],
               "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"rsmilesList", ",", "rxnConfList", ",", "rxnImages"}], 
              "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7966048273575273`*^9, 3.796604858716375*^9}, {
   3.7966056020915155`*^9, 3.7966056709887476`*^9}, {3.7966060217115064`*^9, 
   3.7966061234995856`*^9}, {3.796606161962845*^9, 3.796606195687956*^9}, {
   3.796606265747727*^9, 3.796606277792094*^9}, {3.7966069778376865`*^9, 
   3.796606986757205*^9}, {3.7966070212949324`*^9, 3.7966071335851355`*^9}, {
   3.7966072008858385`*^9, 3.7966072026884594`*^9}, {3.7966073107003326`*^9, 
   3.796607312581195*^9}, 3.7966074243015375`*^9, {3.796664227152815*^9, 
   3.7966642999232216`*^9}, {3.7966643394691095`*^9, 
   3.7966643746347904`*^9}, {3.7966646424516697`*^9, 
   3.7966646615983305`*^9}, {3.7966647277832966`*^9, 3.796664734626317*^9}, {
   3.7966648219309006`*^9, 3.7966649213362985`*^9}, {3.796665148463957*^9, 
   3.796665180509827*^9}, {3.7966652476754694`*^9, 3.7966652478630915`*^9}, 
   3.7966742404776964`*^9, {3.7967464247039127`*^9, 3.7967464374365673`*^9}, {
   3.796835848604594*^9, 3.7968358563149652`*^9}, {3.796946328686369*^9, 
   3.796946329578334*^9}, {3.7969471229514885`*^9, 3.7969471239833384`*^9}, {
   3.797111247008312*^9, 3.797111247730384*^9}, {3.806463576361001*^9, 
   3.8064635799192424`*^9}, {3.806464940957382*^9, 3.8064649477213373`*^9}, {
   3.8064649809439735`*^9, 3.80646503205556*^9}, {3.8064652776294775`*^9, 
   3.8064652790753975`*^9}, {3.806465542202347*^9, 3.8064655504646916`*^9}, 
   3.8065019041851044`*^9},
 CellLabel->"In[189]:=",
 CellID->198058059,ExpressionUUID->"dc385188-4371-4380-b4d1-7887e8acb49d"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"for", " ", "making", " ", "a", " ", "new", " ", "retrosynthesis"}],
   " ", "*)"}]], "Input",
 CellChangeTimes->{{3.796835804137599*^9, 3.79683580943839*^9}},
 CellLabel->"In[190]:=",
 CellID->214503912,ExpressionUUID->"be6fd3f3-327a-4ccd-b01b-5e3e56588c59"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IBMRxn", "[", 
   RowBox[{"req_String", ",", "projID_String", ",", "prod_List"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "prodSMILE", ",", "createRet", ",", "retID", ",", "getRet", ",", 
      "seqMolecList", ",", "seqSMILES", ",", "molecPlots", ",", "stepsImgs", 
      ",", "stepDescs", ",", "retTable", ",", "retConf", ",", "retOptScore", 
      ",", "retImg", ",", "rClass", ",", "seqConf", ",", 
      RowBox[{"arrow", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"Text", "@", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\[DoubleRightArrow]\>\"", ",", "60"}], "]"}]}], ",", 
         RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{"(*", " ", 
      RowBox[{
      "this", " ", "code", " ", "block", " ", "runs", " ", "to", " ", "make", 
       " ", "and", " ", "get", " ", "a", " ", "new", " ", "retrosynthesis"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"req", "\[Equal]", "\"\<new retrosynthesis\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ImageQ", "[", 
          RowBox[{"prod", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"prodSMILE", "=", 
          RowBox[{
           RowBox[{"MoleculeRecognize", "[", 
            RowBox[{"prod", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", "\"\<SMILES\>\"", 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"StringQ", "[", 
          RowBox[{"prod", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"prodSMILE", "=", 
          RowBox[{"prod", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"createRet", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", 
             "\"\</rxn/api/api/v1/retrosynthesis/rs?projectId=\>\"", "<>", 
             "projID"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<POST\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<Body\>\"", "\[Rule]", 
              RowBox[{"ExportString", "[", 
               RowBox[{
                RowBox[{"<|", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                  "\"\<isInteractive\>\"", "\[Rule]", "\"\<false\>\""}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"\"\<parameters\>\"", "\[Rule]", 
                   RowBox[{"<|", 
                    RowBox[{
                    RowBox[{
                    "\"\<availability_pricing_threshold\>\"", "\[Rule]", 
                    "0"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "\"\<available_smiles\>\"", "\[Rule]", "\"\<\>\""}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<exclude_smiles\>\"", "\[Rule]", "\"\<\>\""}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "\"\<exclude_substructures\>\"", "\[Rule]", "\"\<\>\""}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "\"\<exclude_target_molecule\>\"", "\[Rule]", 
                    "\"\<true\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<fap\>\"", "\[Rule]", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<max_steps\>\"", "\[Rule]", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<nbeams\>\"", "\[Rule]", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<pruning_steps\>\"", "\[Rule]", "0"}]}], 
                    "|>"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"\"\<product\>\"", "\[Rule]", "prodSMILE"}]}], 
                 "\[IndentingNewLine]", "|>"}], ",", "\"\<JSON\>\""}], 
               "]"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"retID", "=", 
        RowBox[{"createRet", "[", 
         RowBox[{"\"\<payload\>\"", ",", "\"\<id\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Pause", "[", "10", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"getRet", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", "\"\</rxn/api/api/v1/retrosynthesis/\>\"", "<>", 
             "retID"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Loops", " ", "until", " ", "the", " ", "get", " ", "request", " ", 
          "says", " ", "the", " ", "task", " ", "status", " ", "is", " ", 
          "\"\<DONE\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"getRet", "[", 
           RowBox[{
           "\"\<payload\>\"", ",", "\"\<task\>\"", ",", "\"\<status\>\""}], 
           "]"}], "\[NotEqual]", "\"\<DONE\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Pause", "[", "10", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"getRet", "=", 
           RowBox[{
            RowBox[{"HTTPRequest", "[", 
             RowBox[{
              RowBox[{"URL", "[", 
               RowBox[{
               "baseURL", "<>", "\"\</rxn/api/api/v1/retrosynthesis/\>\"", "<>",
                 "retID"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"\"\<Headers\>\"", "\[Rule]", 
                 RowBox[{"<|", 
                  RowBox[{
                   RowBox[{
                   "\"\<Content-Type\>\"", "\[Rule]", 
                    "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                   RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
                  "|>"}]}]}], "|>"}]}], "]"}], "//", 
            RowBox[{
             RowBox[{"URLExecute", "[", 
              RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], 
          ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"retConf", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"getRet", "[", 
           RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"seqConf", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"getRet", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "[", "\"\<reactions\>\"", 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"retOptScore", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"getRet", "[", 
           RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<optimizationScore\>\"", 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"molecPlots", "=", 
        RowBox[{"MoleculePlot", "[", 
         RowBox[{
          RowBox[{"Molecule", "[", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], "]"}],
                  "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], "[", "\"\<reactions\>\"", 
                "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<smiles\>\"", "]"}], 
             ",", 
             RowBox[{"\"\<~\>\"", "\[Rule]", "\"\<.\>\""}]}], "]"}], "]"}], 
          ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"retImg", "=", 
        RowBox[{"GraphicsRow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"MoleculePlot", "[", 
            RowBox[{"Molecule", "[", "prodSMILE", "]"}], "]"}], ",", "arrow", 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], 
                    "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                  "\"\<reactions\>\"", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<smiles\>\"", "]"}],
                ",", 
               RowBox[{"\"\<~\>\"", "\[Rule]", "\"\<.\>\""}]}], "]"}], "//", 
             "Molecule"}], "//", "MoleculePlot"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rClass", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"getRet", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "[", "\"\<reactions\>\"", 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<rclass\>\"", "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"retTable", "=", 
        RowBox[{"TableForm", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
            "projID", ",", "retID", ",", "retConf", ",", "retOptScore", ",", 
             "rClass", ",", "seqConf"}], "}"}], "}"}], ",", 
          RowBox[{"TableHeadings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Project ID\>\"", ",", "\"\<Retrosynthesis ID\>\"", ",", 
               "\"\<Retrosynthesis Confidence\>\"", ",", 
               "\"\<Retrosynthesis Optimization Score\>\"", ",", 
               "\"\<Reaction Class\>\"", ",", "\"\<Sequence Confidence\>\""}],
               "}"}]}], "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"retImg", "\[IndentingNewLine]", "retTable"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7968358170879173`*^9, 3.796835832594433*^9}, {
   3.7968358708819685`*^9, 3.7968359333312864`*^9}, {3.796835981705023*^9, 
   3.7968359899559493`*^9}, {3.7968360907562523`*^9, 3.796836330750431*^9}, {
   3.7969463321985445`*^9, 3.7969463325917516`*^9}, {3.796946774505316*^9, 
   3.796946798875902*^9}, {3.7969468621359167`*^9, 3.796946918320947*^9}, {
   3.796946967680171*^9, 3.7969469735056067`*^9}, 3.7969481634850407`*^9, {
   3.796948676364235*^9, 3.7969487596128445`*^9}, {3.7969487914512095`*^9, 
   3.796948817690533*^9}, {3.7969490458071623`*^9, 3.7969490502357745`*^9}, {
   3.7969492493509307`*^9, 3.7969492496864824`*^9}, {3.7969494290927463`*^9, 
   3.796949433755413*^9}, {3.796949492663494*^9, 3.796949495289606*^9}, 
   3.7969608163776503`*^9, {3.7969608470639677`*^9, 3.79696086071033*^9}, 
   3.796960968674287*^9, {3.7969610243767815`*^9, 3.796961057049614*^9}, {
   3.7969611618098745`*^9, 3.796961163675684*^9}, {3.797037269805193*^9, 
   3.7970372700082693`*^9}, {3.797037311016004*^9, 3.7970373166552944`*^9}, {
   3.797037365329776*^9, 3.797037381757304*^9}, {3.7970374542248287`*^9, 
   3.7970374904676356`*^9}, {3.7970891003406334`*^9, 3.797089101668478*^9}, {
   3.797089138714279*^9, 3.7970891769808683`*^9}, {3.797089261737235*^9, 
   3.797089265095817*^9}, {3.797089501087719*^9, 3.797089517913377*^9}, {
   3.7970896705811777`*^9, 3.7970896882456274`*^9}, {3.7970898761181417`*^9, 
   3.7970898976997557`*^9}, {3.7971062033152676`*^9, 
   3.7971062471140313`*^9}, {3.797108458728712*^9, 3.797108530180871*^9}, {
   3.797108593559558*^9, 3.7971086067378592`*^9}, 3.7971087073158603`*^9, {
   3.797108950095908*^9, 3.7971090337805576`*^9}, 3.7971093026067343`*^9, {
   3.7971096967377987`*^9, 3.7971097345961294`*^9}, {3.797109807797903*^9, 
   3.797109835355569*^9}, 3.7971099112833257`*^9, {3.797110114152934*^9, 
   3.79711013922266*^9}, {3.7971101886148252`*^9, 3.797110226729886*^9}, {
   3.7975313153611364`*^9, 3.7975313263488636`*^9}, 3.7975314018620143`*^9, 
   3.797531586168334*^9, {3.7975316400481744`*^9, 3.797531640420173*^9}, 
   3.8065019085261645`*^9},
 CellLabel->"In[191]:=",
 CellID->764205725,ExpressionUUID->"3a06d4d7-6bfd-4184-8d97-1a619c124e90"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"duplicate", " ", "of", " ", "above"}], " ", "-", " ", 
   RowBox[{"added", " ", "to", " ", "specify", " ", "a", " ", "precursor"}]}],
   " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8053764649873624`*^9, 3.8053764768646374`*^9}, {
  3.8061474509973307`*^9, 3.806147454316783*^9}},
 CellLabel->"In[192]:=",
 CellID->410988145,ExpressionUUID->"08799579-0974-49d0-88ee-cd64b73805a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IBMRxn", "[", 
   RowBox[{
   "req_String", ",", "projID_String", ",", "prod_List", ",", "prec_String"}],
    "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "prodSMILE", ",", "createRet", ",", "retID", ",", "getRet", ",", 
      "seqMolecList", ",", "seqSMILES", ",", "molecPlots", ",", "stepsImgs", 
      ",", "stepDescs", ",", "retTable", ",", "retConf", ",", "retOptScore", 
      ",", "retImg", ",", "rClass", ",", "seqConf", ",", 
      RowBox[{"arrow", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"Text", "@", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\[DoubleRightArrow]\>\"", ",", "60"}], "]"}]}], ",", 
         RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}]}], ",", "out", ",", 
      "seqs", ",", "childsNumb", ",", "cImgs", ",", "childs", ",", 
      "product"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{"(*", " ", 
      RowBox[{
      "this", " ", "code", " ", "block", " ", "runs", " ", "to", " ", "make", 
       " ", "and", " ", "get", " ", "a", " ", "new", " ", "retrosynthesis"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"req", "\[Equal]", "\"\<new retrosynthesis\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ImageQ", "[", 
          RowBox[{"prod", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"prodSMILE", "=", 
          RowBox[{
           RowBox[{"MoleculeRecognize", "[", 
            RowBox[{"prod", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", "\"\<SMILES\>\"", 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"StringQ", "[", 
          RowBox[{"prod", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"prodSMILE", "=", 
          RowBox[{"prod", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"createRet", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", 
             "\"\</rxn/api/api/v1/retrosynthesis/rs?projectId=\>\"", "<>", 
             "projID"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<POST\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<Body\>\"", "\[Rule]", 
              RowBox[{"ExportString", "[", 
               RowBox[{
                RowBox[{"<|", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                  "\"\<isInteractive\>\"", "\[Rule]", "\"\<false\>\""}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"\"\<parameters\>\"", "\[Rule]", 
                   RowBox[{"<|", 
                    RowBox[{
                    RowBox[{
                    "\"\<availability_pricing_threshold\>\"", "\[Rule]", 
                    "0"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<available_smiles\>\"", "\[Rule]", "prec"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<exclude_smiles\>\"", "\[Rule]", "\"\<\>\""}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "\"\<exclude_substructures\>\"", "\[Rule]", "\"\<\>\""}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "\"\<exclude_target_molecule\>\"", "\[Rule]", 
                    "\"\<true\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<fap\>\"", "\[Rule]", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<max_steps\>\"", "\[Rule]", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<nbeams\>\"", "\[Rule]", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<pruning_steps\>\"", "\[Rule]", "0"}]}], 
                    "|>"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"\"\<product\>\"", "\[Rule]", "prodSMILE"}]}], 
                 "\[IndentingNewLine]", "|>"}], ",", "\"\<JSON\>\""}], 
               "]"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"retID", "=", 
        RowBox[{"createRet", "[", 
         RowBox[{"\"\<payload\>\"", ",", "\"\<id\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Pause", "[", "10", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"getRet", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", "\"\</rxn/api/api/v1/retrosynthesis/\>\"", "<>", 
             "retID"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Loops", " ", "until", " ", "the", " ", "get", " ", "request", " ", 
          "says", " ", "the", " ", "task", " ", "status", " ", "is", " ", 
          "\"\<DONE\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"getRet", "[", 
           RowBox[{
           "\"\<payload\>\"", ",", "\"\<task\>\"", ",", "\"\<status\>\""}], 
           "]"}], "\[NotEqual]", "\"\<DONE\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Pause", "[", "10", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"getRet", "=", 
           RowBox[{
            RowBox[{"HTTPRequest", "[", 
             RowBox[{
              RowBox[{"URL", "[", 
               RowBox[{
               "baseURL", "<>", "\"\</rxn/api/api/v1/retrosynthesis/\>\"", "<>",
                 "retID"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"\"\<Headers\>\"", "\[Rule]", 
                 RowBox[{"<|", 
                  RowBox[{
                   RowBox[{
                   "\"\<Content-Type\>\"", "\[Rule]", 
                    "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                   RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
                  "|>"}]}]}], "|>"}]}], "]"}], "//", 
            RowBox[{
             RowBox[{"URLExecute", "[", 
              RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], 
          ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"retConf", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"getRet", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
            "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"seqConf", "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"getRet", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "[", "\"\<reactions\>\"", 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"retOptScore", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"getRet", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
            "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<optimizationScore\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"molecPlots", "=", 
          RowBox[{"MoleculePlot", "[", 
           RowBox[{
            RowBox[{"Molecule", "[", 
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], 
                    "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                  "\"\<reactions\>\"", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<smiles\>\"", "]"}],
                ",", 
               RowBox[{"\"\<~\>\"", "\[Rule]", "\"\<.\>\""}]}], "]"}], "]"}], 
            ",", 
            RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"retImg", "=", 
          RowBox[{"GraphicsRow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"MoleculePlot", "[", 
              RowBox[{"Molecule", "[", "prodSMILE", "]"}], "]"}], ",", 
             "arrow", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"StringReplace", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                    "\"\<reactions\>\"", "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<smiles\>\"", 
                  "]"}], ",", 
                 RowBox[{"\"\<~\>\"", "\[Rule]", "\"\<.\>\""}]}], "]"}], "//",
                "Molecule"}], "//", "MoleculePlot"}]}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rClass", "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"getRet", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "[", "\"\<reactions\>\"", 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<rclass\>\"", "]"}]}], 
         ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"seqs", "=", 
        RowBox[{"Length", "@", 
         RowBox[{"getRet", "[", 
          RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"retImg", "=", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"product", "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"getRet", "[", 
                 RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}],
                 "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"\"\<tree\>\"", ",", "\"\<smiles\>\""}], "]"}], "//", 
              "Molecule"}], "//", "MoleculePlot"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"rClass", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"getRet", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
              "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"\"\<tree\>\"", ",", "\"\<rclass\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"retOptScore", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"getRet", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
              "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             "\"\<optimizationScore\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"retConf", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"getRet", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
              "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<confidence\>\"", 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"childsNumb", "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"getRet", "[", 
                RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
               "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"\"\<tree\>\"", ",", "\"\<children\>\""}], "]"}], "//", 
             "Length"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"out", "=", 
            RowBox[{"Reap", "[", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"childs", "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"\"\<tree\>\"", ",", "\"\<children\>\""}], "]"}], 
                   "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<smiles\>\"", 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"Sow", "[", "childs", "]"}], ";"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", "childsNumb"}], "}"}]}], "]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"cImgs", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MoleculePlot", "[", "#", "]"}], "&"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Molecule", "[", "#", "]"}], "&"}], "/@", 
               RowBox[{"Flatten", "@", 
                RowBox[{"Rest", "@", "out"}]}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"retImg", "=", 
            RowBox[{"GraphicsRow", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"product", ",", "arrow", ",", "cImgs"}], "}"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"retTable", "=", 
            RowBox[{"TableForm", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                "projID", ",", "retID", ",", "retConf", ",", "retOptScore", 
                 ",", "rClass"}], "}"}], "}"}], ",", 
              RowBox[{"TableHeadings", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"None", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<Project ID\>\"", ",", "\"\<Retrosynthesis ID\>\"", 
                   ",", "\"\<Retrosynthesis Confidence\>\"", ",", 
                   "\"\<Retrosynthesis Optimization Score\>\"", ",", 
                   "\"\<Reaction Class\>\""}], "}"}]}], "}"}]}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{"retImg", ",", "retTable"}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "seqs"}], "}"}]}], "]"}]}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"retTable", "=", 
        RowBox[{"TableForm", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
            "projID", ",", "retID", ",", "retConf", ",", "retOptScore", ",", 
             "rClass", ",", "seqConf"}], "}"}], "}"}], ",", 
          RowBox[{"TableHeadings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Project ID\>\"", ",", "\"\<Retrosynthesis ID\>\"", ",", 
               "\"\<Retrosynthesis Confidence\>\"", ",", 
               "\"\<Retrosynthesis Optimization Score\>\"", ",", 
               "\"\<Reaction Class\>\"", ",", "\"\<Sequence Confidence\>\""}],
               "}"}]}], "}"}]}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7968358170879173`*^9, 3.796835832594433*^9}, {
   3.7968358708819685`*^9, 3.7968359333312864`*^9}, {3.796835981705023*^9, 
   3.7968359899559493`*^9}, {3.7968360907562523`*^9, 3.796836330750431*^9}, {
   3.7969463321985445`*^9, 3.7969463325917516`*^9}, {3.796946774505316*^9, 
   3.796946798875902*^9}, {3.7969468621359167`*^9, 3.796946918320947*^9}, {
   3.796946967680171*^9, 3.7969469735056067`*^9}, 3.7969481634850407`*^9, {
   3.796948676364235*^9, 3.7969487596128445`*^9}, {3.7969487914512095`*^9, 
   3.796948817690533*^9}, {3.7969490458071623`*^9, 3.7969490502357745`*^9}, {
   3.7969492493509307`*^9, 3.7969492496864824`*^9}, {3.7969494290927463`*^9, 
   3.796949433755413*^9}, {3.796949492663494*^9, 3.796949495289606*^9}, 
   3.7969608163776503`*^9, {3.7969608470639677`*^9, 3.79696086071033*^9}, 
   3.796960968674287*^9, {3.7969610243767815`*^9, 3.796961057049614*^9}, {
   3.7969611618098745`*^9, 3.796961163675684*^9}, {3.797037269805193*^9, 
   3.7970372700082693`*^9}, {3.797037311016004*^9, 3.7970373166552944`*^9}, {
   3.797037365329776*^9, 3.797037381757304*^9}, {3.7970374542248287`*^9, 
   3.7970374904676356`*^9}, {3.7970891003406334`*^9, 3.797089101668478*^9}, {
   3.797089138714279*^9, 3.7970891769808683`*^9}, {3.797089261737235*^9, 
   3.797089265095817*^9}, {3.797089501087719*^9, 3.797089517913377*^9}, {
   3.7970896705811777`*^9, 3.7970896882456274`*^9}, {3.7970898761181417`*^9, 
   3.7970898976997557`*^9}, {3.7971062033152676`*^9, 
   3.7971062471140313`*^9}, {3.797108458728712*^9, 3.797108530180871*^9}, {
   3.797108593559558*^9, 3.7971086067378592`*^9}, 3.7971087073158603`*^9, {
   3.797108950095908*^9, 3.7971090337805576`*^9}, 3.7971093026067343`*^9, {
   3.7971096967377987`*^9, 3.7971097345961294`*^9}, {3.797109807797903*^9, 
   3.797109835355569*^9}, 3.7971099112833257`*^9, {3.797110114152934*^9, 
   3.79711013922266*^9}, {3.7971101886148252`*^9, 3.797110226729886*^9}, {
   3.7975313153611364`*^9, 3.7975313263488636`*^9}, 3.7975314018620143`*^9, 
   3.797531586168334*^9, {3.7975316400481744`*^9, 3.797531640420173*^9}, {
   3.8053764817999015`*^9, 3.805376491207013*^9}, {3.806081331516345*^9, 
   3.8060813556591034`*^9}, {3.8060815431510487`*^9, 
   3.8060815869720993`*^9}, {3.80608171856907*^9, 3.806081724080686*^9}, {
   3.806081809691527*^9, 3.8060818354887557`*^9}, {3.806082190825488*^9, 
   3.806082192276868*^9}, {3.8060822392284813`*^9, 3.8060822426595125`*^9}, {
   3.8060823121641035`*^9, 3.806082313229678*^9}, {3.806082394996955*^9, 
   3.806082395979672*^9}, {3.806082567745762*^9, 3.806082569887993*^9}, {
   3.8060826235428796`*^9, 3.8060826254125977`*^9}, {3.806082740767905*^9, 
   3.806082747819192*^9}, {3.806082824008416*^9, 3.80608283233418*^9}, {
   3.806082890549318*^9, 3.806082893913828*^9}, {3.806082941054096*^9, 
   3.806082941453827*^9}, {3.8060830383842115`*^9, 3.8060830719485855`*^9}, {
   3.8060831454674587`*^9, 3.8060831594661236`*^9}, {3.806083243055464*^9, 
   3.80608327106021*^9}, {3.8060833304085426`*^9, 3.8060833307461853`*^9}, {
   3.806083451497547*^9, 3.806083453354207*^9}, {3.806083625671534*^9, 
   3.80608362931491*^9}, {3.8060838976539335`*^9, 3.806083899573346*^9}, 
   3.8065019122557755`*^9},
 CellLabel->"In[193]:=",
 CellID->174420735,ExpressionUUID->"c8138c09-d974-4b09-a46b-f14d536e4da2"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"duplicate", " ", "of", " ", "above"}], " ", "-", " ", 
   RowBox[{"added", " ", "to", " ", "specify", " ", "output", " ", "type"}]}],
   " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8053764649873624`*^9, 3.8053764768646374`*^9}, {
  3.8061474509973307`*^9, 3.8061474712873387`*^9}},
 CellLabel->"In[194]:=",
 CellID->67748573,ExpressionUUID->"895e2433-7c10-4a1d-9e09-8b0d723e026a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IBMRxn", "[", 
   RowBox[{
   "req_String", ",", "projID_String", ",", "prod_List", ",", "prec_String", 
    ",", "outType_String"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "prodSMILE", ",", "createRet", ",", "retID", ",", "getRet", ",", 
      "seqMolecList", ",", "seqSMILES", ",", "molecPlots", ",", "stepsImgs", 
      ",", "stepDescs", ",", "retTable", ",", "retConf", ",", "retOptScore", 
      ",", "retImg", ",", "rClass", ",", "seqConf", ",", 
      RowBox[{"arrow", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"Text", "@", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\[DoubleRightArrow]\>\"", ",", "60"}], "]"}]}], ",", 
         RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}]}], ",", "out", ",", 
      "seqs", ",", "childsNumb", ",", "cImgs", ",", "childs", ",", "product", 
      ",", "cols", ",", "cSMILES", ",", "retroID"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{"(*", " ", 
      RowBox[{
      "this", " ", "code", " ", "block", " ", "runs", " ", "to", " ", "make", 
       " ", "and", " ", "get", " ", "a", " ", "new", " ", "retrosynthesis"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"req", "\[Equal]", "\"\<new retrosynthesis\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ImageQ", "[", 
          RowBox[{"prod", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"prodSMILE", "=", 
          RowBox[{
           RowBox[{"MoleculeRecognize", "[", 
            RowBox[{"prod", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", "\"\<SMILES\>\"", 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"StringQ", "[", 
          RowBox[{"prod", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"prodSMILE", "=", 
          RowBox[{"prod", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"createRet", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", 
             "\"\</rxn/api/api/v1/retrosynthesis/rs?projectId=\>\"", "<>", 
             "projID"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<POST\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<Body\>\"", "\[Rule]", 
              RowBox[{"ExportString", "[", 
               RowBox[{
                RowBox[{"<|", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                  "\"\<isInteractive\>\"", "\[Rule]", "\"\<false\>\""}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"\"\<parameters\>\"", "\[Rule]", 
                   RowBox[{"<|", 
                    RowBox[{
                    RowBox[{
                    "\"\<availability_pricing_threshold\>\"", "\[Rule]", 
                    "0"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<available_smiles\>\"", "\[Rule]", "prec"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<exclude_smiles\>\"", "\[Rule]", "\"\<\>\""}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "\"\<exclude_substructures\>\"", "\[Rule]", "\"\<\>\""}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "\"\<exclude_target_molecule\>\"", "\[Rule]", 
                    "\"\<true\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<fap\>\"", "\[Rule]", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<max_steps\>\"", "\[Rule]", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<nbeams\>\"", "\[Rule]", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<pruning_steps\>\"", "\[Rule]", "0"}]}], 
                    "|>"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"\"\<product\>\"", "\[Rule]", "prodSMILE"}]}], 
                 "\[IndentingNewLine]", "|>"}], ",", "\"\<JSON\>\""}], 
               "]"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"retID", "=", 
        RowBox[{"createRet", "[", 
         RowBox[{"\"\<payload\>\"", ",", "\"\<id\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Pause", "[", "10", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"getRet", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", "\"\</rxn/api/api/v1/retrosynthesis/\>\"", "<>", 
             "retID"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Loops", " ", "until", " ", "the", " ", "get", " ", "request", " ", 
          "says", " ", "the", " ", "task", " ", "status", " ", "is", " ", 
          "\"\<DONE\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"getRet", "[", 
           RowBox[{
           "\"\<payload\>\"", ",", "\"\<task\>\"", ",", "\"\<status\>\""}], 
           "]"}], "\[NotEqual]", "\"\<DONE\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Pause", "[", "10", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"getRet", "=", 
           RowBox[{
            RowBox[{"HTTPRequest", "[", 
             RowBox[{
              RowBox[{"URL", "[", 
               RowBox[{
               "baseURL", "<>", "\"\</rxn/api/api/v1/retrosynthesis/\>\"", "<>",
                 "retID"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"\"\<Headers\>\"", "\[Rule]", 
                 RowBox[{"<|", 
                  RowBox[{
                   RowBox[{
                   "\"\<Content-Type\>\"", "\[Rule]", 
                    "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                   RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
                  "|>"}]}]}], "|>"}]}], "]"}], "//", 
            RowBox[{
             RowBox[{"URLExecute", "[", 
              RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], 
          ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"retConf", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"getRet", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
            "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"seqConf", "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"getRet", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "[", "\"\<reactions\>\"", 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"retOptScore", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"getRet", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
            "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<optimizationScore\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"molecPlots", "=", 
          RowBox[{"MoleculePlot", "[", 
           RowBox[{
            RowBox[{"Molecule", "[", 
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], 
                    "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                  "\"\<reactions\>\"", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<smiles\>\"", "]"}],
                ",", 
               RowBox[{"\"\<~\>\"", "\[Rule]", "\"\<.\>\""}]}], "]"}], "]"}], 
            ",", 
            RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"retImg", "=", 
          RowBox[{"GraphicsRow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"MoleculePlot", "[", 
              RowBox[{"Molecule", "[", "prodSMILE", "]"}], "]"}], ",", 
             "arrow", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"StringReplace", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                    "\"\<reactions\>\"", "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<smiles\>\"", 
                  "]"}], ",", 
                 RowBox[{"\"\<~\>\"", "\[Rule]", "\"\<.\>\""}]}], "]"}], "//",
                "Molecule"}], "//", "MoleculePlot"}]}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rClass", "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"getRet", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "[", "\"\<reactions\>\"", 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<rclass\>\"", "]"}]}], 
         ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"outType", "\[Equal]", "\"\<\>\""}], "||", 
          RowBox[{"StringMatchQ", "[", 
           RowBox[{
            RowBox[{"ToString", "@", "outType"}], ",", "\"\<default\>\"", ",", 
            RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"seqs", "=", 
           RowBox[{"Length", "@", 
            RowBox[{"getRet", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}]}]}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"retImg", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"product", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                    "]"}], "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"\"\<tree\>\"", ",", "\"\<smiles\>\""}], "]"}], "//",
                  "Molecule"}], "//", "MoleculePlot"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rClass", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"\"\<tree\>\"", ",", "\"\<rclass\>\""}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"retOptScore", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                "\"\<optimizationScore\>\"", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"retConf", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<confidence\>\"", 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"childsNumb", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"getRet", "[", 
                   RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                   "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"\"\<tree\>\"", ",", "\"\<children\>\""}], "]"}], "//",
                 "Length"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"out", "=", 
               RowBox[{"Reap", "[", 
                RowBox[{"Do", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"childs", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"\"\<tree\>\"", ",", "\"\<children\>\""}], "]"}], 
                    "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<smiles\>\"", 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"Sow", "[", "childs", "]"}], ";"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"n", ",", "1", ",", "childsNumb"}], "}"}]}], "]"}],
                 "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"cImgs", "=", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"MoleculePlot", "[", "#", "]"}], "&"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Molecule", "[", "#", "]"}], "&"}], "/@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"Rest", "@", "out"}]}]}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"retImg", "=", 
               RowBox[{"GraphicsRow", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"product", ",", "arrow", ",", "cImgs"}], "}"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"retTable", "=", 
               RowBox[{"TableForm", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{
                   "projID", ",", "retID", ",", "retConf", ",", "retOptScore",
                     ",", "rClass"}], "}"}], "}"}], ",", 
                 RowBox[{"TableHeadings", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"None", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Project ID\>\"", ",", "\"\<Retrosynthesis ID\>\"", 
                    ",", "\"\<Retrosynthesis Confidence\>\"", ",", 
                    "\"\<Retrosynthesis Optimization Score\>\"", ",", 
                    "\"\<Reaction Class\>\""}], "}"}]}], "}"}]}]}], "]"}]}], 
              ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"Column", "[", 
               RowBox[{"{", 
                RowBox[{"retImg", ",", "retTable"}], "}"}], "]"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "seqs"}], "}"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"StringMatchQ", "[", 
          RowBox[{
           RowBox[{"ToString", "@", "outType"}], ",", "\"\<dataset\>\"", ",", 
           RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"seqs", "=", 
           RowBox[{"Length", "@", 
            RowBox[{"getRet", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}]}]}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"cols", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"product", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"\"\<tree\>\"", ",", "\"\<smiles\>\""}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"retroID", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                "\"\<retrosynthesisId\>\"", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rClass", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"\"\<tree\>\"", ",", "\"\<rclass\>\""}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"retOptScore", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                "\"\<optimizationScore\>\"", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"retConf", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<confidence\>\"", 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"childsNumb", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"getRet", "[", 
                   RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                   "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"\"\<tree\>\"", ",", "\"\<children\>\""}], "]"}], "//",
                 "Length"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"out", "=", 
               RowBox[{"Reap", "[", 
                RowBox[{"Do", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"childs", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"\"\<tree\>\"", ",", "\"\<children\>\""}], "]"}], 
                    "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<smiles\>\"", 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"Sow", "[", "childs", "]"}], ";"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"n", ",", "1", ",", "childsNumb"}], "}"}]}], "]"}],
                 "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"cSMILES", "=", 
               RowBox[{"Flatten", "@", 
                RowBox[{"Rest", "@", "out"}]}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "rClass", ",", "projID", ",", "retroID", ",", "cSMILES", ",", 
                "product", ",", "retConf", ",", "retOptScore"}], "}"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "seqs"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<rclass\>\"", "\[Rule]", "#1"}], ",", 
                RowBox[{"\"\<projID\>\"", "\[Rule]", "#2"}], ",", 
                RowBox[{"\"\<retroID\>\"", "\[Rule]", "#3"}], ",", 
                RowBox[{"\"\<rreac\>\"", "\[Rule]", 
                 RowBox[{"StringRiffle", "[", 
                  RowBox[{"#4", ",", "\"\<.\>\""}], "]"}]}], ",", 
                RowBox[{"\"\<prod\>\"", "\[Rule]", "#5"}], ",", 
                RowBox[{"\"\<conf\>\"", "\[Rule]", "#6"}], ",", 
                RowBox[{"\"\<opt\>\"", "\[Rule]", "#7"}]}], "|>"}], "&"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"cols", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"cols", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"cols", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", 
               RowBox[{"cols", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
               RowBox[{"cols", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "5"}], "]"}], "]"}], ",", 
               RowBox[{"cols", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "6"}], "]"}], "]"}], ",", 
               RowBox[{"cols", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "7"}], "]"}], "]"}]}], "}"}]}], "]"}], "//",
            "Dataset"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"retTable", "=", 
        RowBox[{"TableForm", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
            "projID", ",", "retID", ",", "retConf", ",", "retOptScore", ",", 
             "rClass", ",", "seqConf"}], "}"}], "}"}], ",", 
          RowBox[{"TableHeadings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Project ID\>\"", ",", "\"\<Retrosynthesis ID\>\"", ",", 
               "\"\<Retrosynthesis Confidence\>\"", ",", 
               "\"\<Retrosynthesis Optimization Score\>\"", ",", 
               "\"\<Reaction Class\>\"", ",", "\"\<Sequence Confidence\>\""}],
               "}"}]}], "}"}]}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7968358170879173`*^9, 3.796835832594433*^9}, {
   3.7968358708819685`*^9, 3.7968359333312864`*^9}, {3.796835981705023*^9, 
   3.7968359899559493`*^9}, {3.7968360907562523`*^9, 3.796836330750431*^9}, {
   3.7969463321985445`*^9, 3.7969463325917516`*^9}, {3.796946774505316*^9, 
   3.796946798875902*^9}, {3.7969468621359167`*^9, 3.796946918320947*^9}, {
   3.796946967680171*^9, 3.7969469735056067`*^9}, 3.7969481634850407`*^9, {
   3.796948676364235*^9, 3.7969487596128445`*^9}, {3.7969487914512095`*^9, 
   3.796948817690533*^9}, {3.7969490458071623`*^9, 3.7969490502357745`*^9}, {
   3.7969492493509307`*^9, 3.7969492496864824`*^9}, {3.7969494290927463`*^9, 
   3.796949433755413*^9}, {3.796949492663494*^9, 3.796949495289606*^9}, 
   3.7969608163776503`*^9, {3.7969608470639677`*^9, 3.79696086071033*^9}, 
   3.796960968674287*^9, {3.7969610243767815`*^9, 3.796961057049614*^9}, {
   3.7969611618098745`*^9, 3.796961163675684*^9}, {3.797037269805193*^9, 
   3.7970372700082693`*^9}, {3.797037311016004*^9, 3.7970373166552944`*^9}, {
   3.797037365329776*^9, 3.797037381757304*^9}, {3.7970374542248287`*^9, 
   3.7970374904676356`*^9}, {3.7970891003406334`*^9, 3.797089101668478*^9}, {
   3.797089138714279*^9, 3.7970891769808683`*^9}, {3.797089261737235*^9, 
   3.797089265095817*^9}, {3.797089501087719*^9, 3.797089517913377*^9}, {
   3.7970896705811777`*^9, 3.7970896882456274`*^9}, {3.7970898761181417`*^9, 
   3.7970898976997557`*^9}, {3.7971062033152676`*^9, 
   3.7971062471140313`*^9}, {3.797108458728712*^9, 3.797108530180871*^9}, {
   3.797108593559558*^9, 3.7971086067378592`*^9}, 3.7971087073158603`*^9, {
   3.797108950095908*^9, 3.7971090337805576`*^9}, 3.7971093026067343`*^9, {
   3.7971096967377987`*^9, 3.7971097345961294`*^9}, {3.797109807797903*^9, 
   3.797109835355569*^9}, 3.7971099112833257`*^9, {3.797110114152934*^9, 
   3.79711013922266*^9}, {3.7971101886148252`*^9, 3.797110226729886*^9}, {
   3.7975313153611364`*^9, 3.7975313263488636`*^9}, 3.7975314018620143`*^9, 
   3.797531586168334*^9, {3.7975316400481744`*^9, 3.797531640420173*^9}, {
   3.8053764817999015`*^9, 3.805376491207013*^9}, {3.806081331516345*^9, 
   3.8060813556591034`*^9}, {3.8060815431510487`*^9, 
   3.8060815869720993`*^9}, {3.80608171856907*^9, 3.806081724080686*^9}, {
   3.806081809691527*^9, 3.8060818354887557`*^9}, {3.806082190825488*^9, 
   3.806082192276868*^9}, {3.8060822392284813`*^9, 3.8060822426595125`*^9}, {
   3.8060823121641035`*^9, 3.806082313229678*^9}, {3.806082394996955*^9, 
   3.806082395979672*^9}, {3.806082567745762*^9, 3.806082569887993*^9}, {
   3.8060826235428796`*^9, 3.8060826254125977`*^9}, {3.806082740767905*^9, 
   3.806082747819192*^9}, {3.806082824008416*^9, 3.80608283233418*^9}, {
   3.806082890549318*^9, 3.806082893913828*^9}, {3.806082941054096*^9, 
   3.806082941453827*^9}, {3.8060830383842115`*^9, 3.8060830719485855`*^9}, {
   3.8060831454674587`*^9, 3.8060831594661236`*^9}, {3.806083243055464*^9, 
   3.80608327106021*^9}, {3.8060833304085426`*^9, 3.8060833307461853`*^9}, {
   3.806083451497547*^9, 3.806083453354207*^9}, {3.806083625671534*^9, 
   3.80608362931491*^9}, {3.8060838976539335`*^9, 3.806083899573346*^9}, {
   3.8061474743644056`*^9, 3.8061474833449636`*^9}, {3.806147521371009*^9, 
   3.806147555392482*^9}, {3.806147625475113*^9, 3.806147639409897*^9}, {
   3.806147671059506*^9, 3.8061477175182395`*^9}, {3.806148559113831*^9, 
   3.806148579910155*^9}, {3.8061486262487917`*^9, 3.8061486364626856`*^9}, 
   3.806148767681605*^9, 3.8064324272494245`*^9, {3.8064631217864676`*^9, 
   3.80646312378524*^9}, 3.8065019162720394`*^9},
 CellLabel->"In[195]:=",
 CellID->40943685,ExpressionUUID->"81f7275d-7a4f-4f48-89f1-7c89911b9250"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"for", " ", "making", " ", "a", " ", "new", " ", "project"}], ",", 
   " ", 
   RowBox[{"listing", " ", "all", " ", "project", " ", "attempts"}], ",", " ", 
   RowBox[{
   "or", " ", "recovering", " ", "a", " ", "past", " ", "prediction", " ", 
    "or", " ", "retrosynthesis"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.796442782754593*^9, 3.796442802856778*^9}, {
  3.7968364636169467`*^9, 3.796836465559746*^9}},
 CellLabel->"In[196]:=",
 CellID->173720227,ExpressionUUID->"ddf290d2-95e3-4fab-828a-9ac6db708c95"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IBMRxn", "[", 
   RowBox[{"req_String", ",", "IDorName_String"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myProjects", ",", "myProjNames", ",", "myProjIDs", ",", "nameRule", ",",
       "idRule", ",", "myProjectsData", ",", "allProjAs", ",", "getPred", ",",
       "projName", ",", "rxnImg", ",", "rxnConf", ",", "predID", ",", 
      "projID", ",", "createProj", ",", "projectID", ",", "getRet", ",", 
      "seqMolecList", ",", "seqSMILES", ",", "retConf", ",", "retOptScore", 
      ",", "molecPlots", ",", "retTable", ",", "stepsImgs", ",", 
      RowBox[{"arrow", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"Text", "@", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\[DoubleRightArrow]\>\"", ",", "60"}], "]"}]}], ",", 
         RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}]}], ",", "stepDescs",
       ",", "retImg", ",", "prodSMILES", ",", "rClass", ",", "seqConf", ",", 
      "seqs", ",", "prod", ",", "childsNumb", ",", "out", ",", "cImgs", ",", 
      "childs"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Which", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"req", "\[Equal]", "\"\<new project\>\""}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"for", " ", "a", " ", "\"\<new project\>\""}], ",", " ", 
        RowBox[{"following", " ", "code", " ", "block", " ", "runs"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"createProj", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{"baseURL", "<>", "\"\</rxn/api/api/v1/projects\>\""}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<POST\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<Body\>\"", "\[Rule]", 
              RowBox[{"ExportString", "[", 
               RowBox[{
                RowBox[{"<|", 
                 RowBox[{
                  RowBox[{"\"\<name\>\"", "\[Rule]", 
                   RowBox[{"ToString", "[", "IDorName", "]"}]}], ",", 
                  RowBox[{"\"\<invitations\>\"", "\[Rule]", 
                   RowBox[{"{", "}"}]}]}], "|>"}], ",", "\"\<JSON\>\""}], 
               "]"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"projectID", "=", 
        RowBox[{"createProj", "[", 
         RowBox[{"\"\<payload\>\"", ",", "\"\<id\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"TableForm", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"IDorName", ",", "projectID"}], "}"}], "}"}], ",", 
         RowBox[{"TableHeadings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"None", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Project Name\>\"", ",", "\"\<Project ID\>\""}], 
             "}"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"req", "\[Equal]", " ", "\"\<all project attempts\>\""}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"for", " ", "getting", " ", "\"\<all project attempts\>\""}], 
        ",", " ", 
        RowBox[{"following", " ", "code", " ", "block", " ", "runs"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"allProjAs", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", "\"\</rxn/api/api/v1/projects/\>\"", "<>", 
             "IDorName", "<>", "\"\</attempts?raw={}\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "\[IndentingNewLine]", "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", "allProjAs"}], ",", "\[IndentingNewLine]", 
      RowBox[{"req", "\[Equal]", "\"\<recover prediction\>\""}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"to", " ", "\"\<recover prediction\>\""}], ",", " ", 
        RowBox[{"following", " ", "code", " ", "block", " ", "runs"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"getPred", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", "\"\</rxn/api/api/v1/predictions/\>\"", "<>", 
             "IDorName"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"projName", "=", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"getPred", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<name\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"\"\<_\>\"", "~~", "___"}], "\[Rule]", "\"\<\>\""}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"projID", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"getPred", "[", 
           RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<projectId\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"predID", "=", 
        RowBox[{"getPred", "[", 
         RowBox[{"\"\<payload\>\"", ",", "\"\<id\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rxnImg", "=", 
        RowBox[{
         RowBox[{"ResourceFunction", "[", "\"\<SVGImport\>\"", "]"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"getPred", "[", 
            RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<reactionImage\>\"", 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rxnConf", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"getPred", "[", 
           RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"rxnImg", "\[IndentingNewLine]", 
        RowBox[{"TableForm", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
            "projName", ",", "projID", ",", "predID", ",", "rxnConf"}], "}"}],
            "}"}], ",", 
          RowBox[{"TableHeadings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Project Name\>\"", ",", "\"\<Project ID\>\"", ",", 
               "\"\<Prediction ID\>\"", ",", 
               "\"\<Prediction Confidence\>\""}], "}"}]}], "}"}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{"req", "\[Equal]", "\"\<recover retrosynthesis\>\""}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{
       "recover", " ", "a", " ", "previously", " ", "made", " ", 
        "retrosynthesis"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"getRet", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", "\"\</rxn/api/api/v1/retrosynthesis/\>\"", "<>", 
             "IDorName"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"While", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"getRet", "[", 
           RowBox[{
           "\"\<payload\>\"", ",", "\"\<task\>\"", ",", "\"\<status\>\""}], 
           "]"}], "\[NotEqual]", "\"\<DONE\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Pause", "[", "10", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"getRet", "=", 
           RowBox[{
            RowBox[{"HTTPRequest", "[", 
             RowBox[{
              RowBox[{"URL", "[", 
               RowBox[{
               "baseURL", "<>", "\"\</rxn/api/api/v1/retrosynthesis/\>\"", "<>",
                 "IDorName"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"\"\<Headers\>\"", "\[Rule]", 
                 RowBox[{"<|", 
                  RowBox[{
                   RowBox[{
                   "\"\<Content-Type\>\"", "\[Rule]", 
                    "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                   RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
                  "|>"}]}]}], "|>"}]}], "]"}], "//", 
            RowBox[{
             RowBox[{"URLExecute", "[", 
              RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], 
          ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"projID", "=", 
        RowBox[{"getRet", "[", 
         RowBox[{"\"\<payload\>\"", ",", "\"\<projectId\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"retConf", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"getRet", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
            "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"seqConf", "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"getRet", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "[", "\"\<reactions\>\"", 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"retOptScore", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"getRet", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
            "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<optimizationScore\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"prodSMILES", "=", 
          RowBox[{
           RowBox[{"getRet", "[", 
            RowBox[{
            "\"\<payload\>\"", ",", "\"\<wizardParameters\>\"", ",", 
             "\"\<exclude_smiles\>\""}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"molecPlots", "=", 
          RowBox[{"MoleculePlot", "[", 
           RowBox[{
            RowBox[{"Molecule", "[", 
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], 
                    "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                  "\"\<reactions\>\"", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<smiles\>\"", "]"}],
                ",", 
               RowBox[{"\"\<~\>\"", "\[Rule]", "\"\<.\>\""}]}], "]"}], "]"}], 
            ",", 
            RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rClass", "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"getRet", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "[", "\"\<reactions\>\"", 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<rclass\>\"", "]"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"retImg", "=", 
          RowBox[{"GraphicsRow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"MoleculePlot", "[", 
              RowBox[{"Molecule", "[", "prodSMILES", "]"}], "]"}], ",", 
             "arrow", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"StringReplace", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                    "\"\<reactions\>\"", "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<smiles\>\"", 
                  "]"}], ",", 
                 RowBox[{"\"\<~\>\"", "\[Rule]", "\"\<.\>\""}]}], "]"}], "//",
                "Molecule"}], "//", "MoleculePlot"}]}], "}"}], "]"}]}], ";"}],
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"seqs", "=", 
        RowBox[{"Length", "@", 
         RowBox[{"getRet", "[", 
          RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"retImg", "=", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"prod", "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"getRet", "[", 
                 RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}],
                 "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"\"\<tree\>\"", ",", "\"\<smiles\>\""}], "]"}], "//", 
              "Molecule"}], "//", "MoleculePlot"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"rClass", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"getRet", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
              "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"\"\<tree\>\"", ",", "\"\<rclass\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"retOptScore", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"getRet", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
              "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             "\"\<optimizationScore\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"retConf", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"getRet", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
              "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<confidence\>\"", 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"childsNumb", "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"getRet", "[", 
                RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
               "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"\"\<tree\>\"", ",", "\"\<children\>\""}], "]"}], "//", 
             "Length"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"out", "=", 
            RowBox[{"Reap", "[", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"childs", "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"\"\<tree\>\"", ",", "\"\<children\>\""}], "]"}], 
                   "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<smiles\>\"", 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"Sow", "[", "childs", "]"}], ";"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", "childsNumb"}], "}"}]}], "]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"cImgs", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MoleculePlot", "[", "#", "]"}], "&"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Molecule", "[", "#", "]"}], "&"}], "/@", 
               RowBox[{"Flatten", "@", 
                RowBox[{"Rest", "@", "out"}]}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"retImg", "=", 
            RowBox[{"GraphicsRow", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"prod", ",", "arrow", ",", "cImgs"}], "}"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"retTable", "=", 
            RowBox[{"TableForm", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                "projID", ",", "IDorName", ",", "retConf", ",", "retOptScore",
                  ",", "rClass"}], "}"}], "}"}], ",", 
              RowBox[{"TableHeadings", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"None", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<Project ID\>\"", ",", "\"\<Retrosynthesis ID\>\"", 
                   ",", "\"\<Retrosynthesis Confidence\>\"", ",", 
                   "\"\<Retrosynthesis Optimization Score\>\"", ",", 
                   "\"\<Reaction Class\>\""}], "}"}]}], "}"}]}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{"retImg", ",", "retTable"}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "seqs"}], "}"}]}], "]"}]}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"retImg", "=", 
        RowBox[{"GraphicsRow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"MoleculePlot", "[", 
            RowBox[{"Molecule", "[", "prodSMILES", "]"}], "]"}], ",", "arrow",
            ",", 
           RowBox[{
            RowBox[{
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], 
                    "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                  "\"\<reactions\>\"", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<smiles\>\"", "]"}],
                ",", 
               RowBox[{"\"\<~\>\"", "\[Rule]", "\"\<.\>\""}]}], "]"}], "//", 
             "Molecule"}], "//", "MoleculePlot"}]}], "}"}], "]"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7961886018753357`*^9, 3.7961888205000277`*^9}, {
   3.796188885318499*^9, 3.796188936784027*^9}, 3.796271078183524*^9, {
   3.796271209800908*^9, 3.796271212112862*^9}, {3.7962713083668165`*^9, 
   3.7962714958330097`*^9}, {3.796271560031309*^9, 3.7962715863778257`*^9}, {
   3.7962717563812046`*^9, 3.796271759474927*^9}, {3.7962719956975336`*^9, 
   3.7962720189483604`*^9}, {3.796273560933216*^9, 3.796273586646286*^9}, {
   3.796431201311642*^9, 3.7964312817185106`*^9}, {3.796431395889043*^9, 
   3.796431397366127*^9}, {3.7964314487965236`*^9, 3.796431449862635*^9}, {
   3.796431565267864*^9, 3.79643156585034*^9}, {3.796431625357093*^9, 
   3.7964316516358175`*^9}, {3.796431700089176*^9, 3.796431707985059*^9}, {
   3.7964317731885676`*^9, 3.7964318593111444`*^9}, {3.7964318992294903`*^9, 
   3.7964319036898017`*^9}, {3.7964319891937084`*^9, 3.79643200111182*^9}, {
   3.7964320319890194`*^9, 3.7964320414775987`*^9}, {3.796432081466604*^9, 
   3.7964321034627514`*^9}, {3.7964322802187324`*^9, 3.796432280319461*^9}, {
   3.7964324201345887`*^9, 3.7964324511964817`*^9}, {3.7964427227884703`*^9, 
   3.796442757009947*^9}, {3.7964428252937784`*^9, 3.796442903793745*^9}, {
   3.7964430608690977`*^9, 3.796443062590459*^9}, {3.7965000025563145`*^9, 
   3.7965000369823575`*^9}, {3.7965002041035323`*^9, 
   3.7965002086020823`*^9}, {3.796500251620185*^9, 3.7965002560741997`*^9}, {
   3.7966054344408035`*^9, 3.796605505940777*^9}, 3.796605576889983*^9, {
   3.7966056827607822`*^9, 3.7966056891064367`*^9}, {3.7968357013785777`*^9, 
   3.796835744299666*^9}, {3.796836345439131*^9, 3.796836379328459*^9}, {
   3.79683641756715*^9, 3.7968364247329764`*^9}, {3.7968365024640055`*^9, 
   3.7968365597799644`*^9}, {3.7968366078124514`*^9, 
   3.7968366843257356`*^9}, {3.7968367209774957`*^9, 
   3.7968368017873173`*^9}, {3.7968368541334515`*^9, 
   3.7968369601787214`*^9}, {3.7968519749076033`*^9, 3.796852076360164*^9}, {
   3.7968522872866755`*^9, 3.7968522910336504`*^9}, {3.796853071231309*^9, 
   3.7968531217088013`*^9}, {3.7968531645904317`*^9, 3.796853190945084*^9}, {
   3.796946303322296*^9, 3.79694633584308*^9}, {3.796947186029535*^9, 
   3.796947189722643*^9}, {3.7969477224248657`*^9, 3.796947722512745*^9}, {
   3.7969492420194883`*^9, 3.7969492424349613`*^9}, {3.7969603181813536`*^9, 
   3.796960320134017*^9}, {3.796961550644066*^9, 3.796961579606391*^9}, {
   3.7969623905764155`*^9, 3.79696240612227*^9}, {3.7970375005801706`*^9, 
   3.7970375181236205`*^9}, {3.7970889103051744`*^9, 3.797088922772221*^9}, {
   3.7970890330058975`*^9, 3.797089083000984*^9}, {3.797089460205601*^9, 
   3.7970894915278425`*^9}, {3.79708963554467*^9, 3.7970896611948147`*^9}, {
   3.7970898338293567`*^9, 3.7970898582411275`*^9}, {3.7975304179520903`*^9, 
   3.797530443698201*^9}, 3.797531333154784*^9, {3.806079167875844*^9, 
   3.806079184291152*^9}, {3.8060805200153813`*^9, 3.80608053233501*^9}, {
   3.8060809159966*^9, 3.806080981346188*^9}, {3.8060810208883185`*^9, 
   3.806081060710944*^9}, {3.8060812420959125`*^9, 3.806081254541865*^9}, {
   3.806081474167759*^9, 3.80608151162724*^9}, {3.8060816562383223`*^9, 
   3.8060816712096786`*^9}, {3.8060824155695877`*^9, 
   3.8060824167806053`*^9}, {3.8060834371985054`*^9, 3.806083440343844*^9}, 
   3.8060835001403933`*^9, {3.8060836098622656`*^9, 3.8060836127995267`*^9}, {
   3.8060836600822144`*^9, 3.8060836607371817`*^9}, {3.8060838523582597`*^9, 
   3.806083888861022*^9}, 3.8065019225486546`*^9, 3.806505911920782*^9},
 CellLabel->"In[197]:=",
 CellID->325435022,ExpressionUUID->"4d04322e-fbb4-47fb-986e-14b97b2aeecd"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"duplicate", " ", "of", " ", "above"}], " ", "-", " ", 
   RowBox[{
   "added", " ", "to", " ", "allow", " ", "for", " ", "specifying", " ", 
    "ouput", " ", "type"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.796442782754593*^9, 3.796442802856778*^9}, {
  3.7968364636169467`*^9, 3.796836465559746*^9}, {3.8061488933592014`*^9, 
  3.8061489012165346`*^9}},
 CellLabel->"In[198]:=",
 CellID->58602291,ExpressionUUID->"406fb1d5-b494-4499-9dcd-f9461498e16c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IBMRxn", "[", 
   RowBox[{"req_String", ",", "IDorName_String", ",", "outType_String"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myProjects", ",", "myProjNames", ",", "myProjIDs", ",", "nameRule", ",",
       "idRule", ",", "myProjectsData", ",", "allProjAs", ",", "getPred", ",",
       "projName", ",", "rxnImg", ",", "rxnConf", ",", "predID", ",", 
      "projID", ",", "createProj", ",", "projectID", ",", "getRet", ",", 
      "seqMolecList", ",", "seqSMILES", ",", "retConf", ",", "retOptScore", 
      ",", "molecPlots", ",", "retTable", ",", "stepsImgs", ",", 
      RowBox[{"arrow", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"Text", "@", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\[DoubleRightArrow]\>\"", ",", "60"}], "]"}]}], ",", 
         RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}]}], ",", "stepDescs",
       ",", "retImg", ",", "prodSMILES", ",", "rClass", ",", "seqConf", ",", 
      "seqs", ",", "prod", ",", "childsNumb", ",", "out", ",", "cImgs", ",", 
      "childs", ",", "retroID", ",", "product", ",", "cols", ",", "cSMILES", 
      ",", "rsmiles"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Which", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"req", "\[Equal]", "\"\<new project\>\""}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"for", " ", "a", " ", "\"\<new project\>\""}], ",", " ", 
        RowBox[{"following", " ", "code", " ", "block", " ", "runs"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"createProj", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{"baseURL", "<>", "\"\</rxn/api/api/v1/projects\>\""}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<POST\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<Body\>\"", "\[Rule]", 
              RowBox[{"ExportString", "[", 
               RowBox[{
                RowBox[{"<|", 
                 RowBox[{
                  RowBox[{"\"\<name\>\"", "\[Rule]", 
                   RowBox[{"ToString", "[", "IDorName", "]"}]}], ",", 
                  RowBox[{"\"\<invitations\>\"", "\[Rule]", 
                   RowBox[{"{", "}"}]}]}], "|>"}], ",", "\"\<JSON\>\""}], 
               "]"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"projectID", "=", 
        RowBox[{"createProj", "[", 
         RowBox[{"\"\<payload\>\"", ",", "\"\<id\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"TableForm", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"IDorName", ",", "projectID"}], "}"}], "}"}], ",", 
         RowBox[{"TableHeadings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"None", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Project Name\>\"", ",", "\"\<Project ID\>\""}], 
             "}"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"req", "\[Equal]", " ", "\"\<all project attempts\>\""}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"for", " ", "getting", " ", "\"\<all project attempts\>\""}], 
        ",", " ", 
        RowBox[{"following", " ", "code", " ", "block", " ", "runs"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"allProjAs", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", "\"\</rxn/api/api/v1/projects/\>\"", "<>", 
             "IDorName", "<>", "\"\</attempts?raw={}\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "\[IndentingNewLine]", "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", "allProjAs"}], ",", "\[IndentingNewLine]", 
      RowBox[{"req", "\[Equal]", "\"\<recover prediction\>\""}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"to", " ", "\"\<recover prediction\>\""}], ",", " ", 
        RowBox[{"following", " ", "code", " ", "block", " ", "runs"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"getPred", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", "\"\</rxn/api/api/v1/predictions/\>\"", "<>", 
             "IDorName"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"outType", "\[Equal]", "\"\<\>\""}], "||", 
          RowBox[{"StringMatchQ", "[", 
           RowBox[{
            RowBox[{"ToString", "@", "outType"}], ",", "\"\<default\>\"", ",", 
            RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"projName", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"getPred", "[", 
                RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
               "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<name\>\"", "]"}], 
             ",", 
             RowBox[{
              RowBox[{"\"\<_\>\"", "~~", "___"}], "\[Rule]", "\"\<\>\""}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"projID", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"getPred", "[", 
              RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<projectId\>\"", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"predID", "=", 
           RowBox[{"getPred", "[", 
            RowBox[{"\"\<payload\>\"", ",", "\"\<id\>\""}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rxnImg", "=", 
           RowBox[{
            RowBox[{"ResourceFunction", "[", "\"\<SVGImport\>\"", "]"}], "[", 
            RowBox[{
             RowBox[{
              RowBox[{"getPred", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
              "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<reactionImage\>\"", 
             "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rxnConf", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"getPred", "[", 
              RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"rxnImg", "\[IndentingNewLine]", 
           RowBox[{"TableForm", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{
               "projName", ",", "projID", ",", "predID", ",", "rxnConf"}], 
               "}"}], "}"}], ",", 
             RowBox[{"TableHeadings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Project Name\>\"", ",", "\"\<Project ID\>\"", ",", 
                  "\"\<Prediction ID\>\"", ",", 
                  "\"\<Prediction Confidence\>\""}], "}"}]}], "}"}]}]}], 
            "]"}]}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"StringMatchQ", "[", 
          RowBox[{
           RowBox[{"ToString", "@", "outType"}], ",", "\"\<dataset\>\"", ",", 
           RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"projName", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"getPred", "[", 
                RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
               "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<name\>\"", "]"}], 
             ",", 
             RowBox[{
              RowBox[{"\"\<_\>\"", "~~", "___"}], "\[Rule]", "\"\<\>\""}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"projID", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"getPred", "[", 
              RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<projectId\>\"", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"predID", "=", 
           RowBox[{"getPred", "[", 
            RowBox[{"\"\<payload\>\"", ",", "\"\<id\>\""}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rxnImg", "=", 
           RowBox[{
            RowBox[{"ResourceFunction", "[", "\"\<SVGImport\>\"", "]"}], "[", 
            RowBox[{
             RowBox[{
              RowBox[{"getPred", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
              "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<reactionImage\>\"", 
             "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rxnConf", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"getPred", "[", 
              RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rsmiles", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"getPred", "[", 
              RowBox[{"\"\<payload\>\"", ",", "\"\<attempts\>\""}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<smiles\>\"", "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<project name\>\"", "\[Rule]", "projName"}], ",", 
             RowBox[{"\"\<projID\>\"", "\[Rule]", "projID"}], ",", 
             RowBox[{"\"\<predID\>\"", "\[Rule]", "predID"}], ",", 
             RowBox[{"\"\<rreac\>\"", "\[Rule]", 
              RowBox[{
               RowBox[{"reacSplit", "[", "rsmiles", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<rprod\>\"", "\[Rule]", 
              RowBox[{
               RowBox[{"reacSplit", "[", "rsmiles", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<conf\>\"", "\[Rule]", "rxnConf"}], ",", 
             RowBox[{"\"\<reaction image\>\"", "\[Rule]", "rxnImg"}]}], 
            "|>"}], "//", "Dataset"}]}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{"req", "\[Equal]", "\"\<recover retrosynthesis\>\""}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{
       "recover", " ", "a", " ", "previously", " ", "made", " ", 
        "retrosynthesis"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"getRet", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", "\"\</rxn/api/api/v1/retrosynthesis/\>\"", "<>", 
             "IDorName"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"While", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"getRet", "[", 
           RowBox[{
           "\"\<payload\>\"", ",", "\"\<task\>\"", ",", "\"\<status\>\""}], 
           "]"}], "\[NotEqual]", "\"\<DONE\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Pause", "[", "10", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"getRet", "=", 
           RowBox[{
            RowBox[{"HTTPRequest", "[", 
             RowBox[{
              RowBox[{"URL", "[", 
               RowBox[{
               "baseURL", "<>", "\"\</rxn/api/api/v1/retrosynthesis/\>\"", "<>",
                 "IDorName"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"\"\<Headers\>\"", "\[Rule]", 
                 RowBox[{"<|", 
                  RowBox[{
                   RowBox[{
                   "\"\<Content-Type\>\"", "\[Rule]", 
                    "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                   RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
                  "|>"}]}]}], "|>"}]}], "]"}], "//", 
            RowBox[{
             RowBox[{"URLExecute", "[", 
              RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], 
          ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"projID", "=", 
        RowBox[{"getRet", "[", 
         RowBox[{"\"\<payload\>\"", ",", "\"\<projectId\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"retConf", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"getRet", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
            "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"seqConf", "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"getRet", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "[", "\"\<reactions\>\"", 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<confidence\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"retOptScore", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"getRet", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}], 
            "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<optimizationScore\>\"", 
           "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"prodSMILES", "=", 
          RowBox[{
           RowBox[{"getRet", "[", 
            RowBox[{
            "\"\<payload\>\"", ",", "\"\<wizardParameters\>\"", ",", 
             "\"\<exclude_smiles\>\""}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"molecPlots", "=", 
          RowBox[{"MoleculePlot", "[", 
           RowBox[{
            RowBox[{"Molecule", "[", 
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], 
                    "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                  "\"\<reactions\>\"", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<smiles\>\"", "]"}],
                ",", 
               RowBox[{"\"\<~\>\"", "\[Rule]", "\"\<.\>\""}]}], "]"}], "]"}], 
            ",", 
            RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rClass", "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"getRet", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "[", "\"\<reactions\>\"", 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<rclass\>\"", "]"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"retImg", "=", 
          RowBox[{"GraphicsRow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"MoleculePlot", "[", 
              RowBox[{"Molecule", "[", "prodSMILES", "]"}], "]"}], ",", 
             "arrow", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"StringReplace", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                    "\"\<reactions\>\"", "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<smiles\>\"", 
                  "]"}], ",", 
                 RowBox[{"\"\<~\>\"", "\[Rule]", "\"\<.\>\""}]}], "]"}], "//",
                "Molecule"}], "//", "MoleculePlot"}]}], "}"}], "]"}]}], ";"}],
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"outType", "\[Equal]", "\"\<\>\""}], "||", 
          RowBox[{"StringMatchQ", "[", 
           RowBox[{
            RowBox[{"ToString", "@", "outType"}], ",", "\"\<default\>\"", ",", 
            RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"seqs", "=", 
           RowBox[{"Length", "@", 
            RowBox[{"getRet", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}]}]}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"retImg", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"prod", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                    "]"}], "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"\"\<tree\>\"", ",", "\"\<smiles\>\""}], "]"}], "//",
                  "Molecule"}], "//", "MoleculePlot"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rClass", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"\"\<tree\>\"", ",", "\"\<rclass\>\""}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"retOptScore", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                "\"\<optimizationScore\>\"", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"retConf", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<confidence\>\"", 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"childsNumb", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"getRet", "[", 
                   RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                   "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"\"\<tree\>\"", ",", "\"\<children\>\""}], "]"}], "//",
                 "Length"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"out", "=", 
               RowBox[{"Reap", "[", 
                RowBox[{"Do", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"childs", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"\"\<tree\>\"", ",", "\"\<children\>\""}], "]"}], 
                    "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<smiles\>\"", 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"Sow", "[", "childs", "]"}], ";"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"n", ",", "1", ",", "childsNumb"}], "}"}]}], "]"}],
                 "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"cImgs", "=", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"MoleculePlot", "[", "#", "]"}], "&"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Molecule", "[", "#", "]"}], "&"}], "/@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"Rest", "@", "out"}]}]}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"retImg", "=", 
               RowBox[{"GraphicsRow", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"prod", ",", "arrow", ",", "cImgs"}], "}"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"retTable", "=", 
               RowBox[{"TableForm", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{
                   "projID", ",", "IDorName", ",", "retConf", ",", 
                    "retOptScore", ",", "rClass"}], "}"}], "}"}], ",", 
                 RowBox[{"TableHeadings", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"None", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Project ID\>\"", ",", "\"\<Retrosynthesis ID\>\"", 
                    ",", "\"\<Retrosynthesis Confidence\>\"", ",", 
                    "\"\<Retrosynthesis Optimization Score\>\"", ",", 
                    "\"\<Reaction Class\>\""}], "}"}]}], "}"}]}]}], "]"}]}], 
              ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"Column", "[", 
               RowBox[{"{", 
                RowBox[{"retImg", ",", "retTable"}], "}"}], "]"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "seqs"}], "}"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"StringMatchQ", "[", 
          RowBox[{
           RowBox[{"ToString", "@", "outType"}], ",", "\"\<dataset\>\"", ",", 
           RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"seqs", "=", 
           RowBox[{"Length", "@", 
            RowBox[{"getRet", "[", 
             RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], "]"}]}]}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"cols", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"product", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"\"\<tree\>\"", ",", "\"\<smiles\>\""}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"retroID", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                "\"\<retrosynthesisId\>\"", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rClass", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"\"\<tree\>\"", ",", "\"\<rclass\>\""}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"retOptScore", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                "\"\<optimizationScore\>\"", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"retConf", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"getRet", "[", 
                  RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<confidence\>\"", 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"childsNumb", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"getRet", "[", 
                   RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                   "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"\"\<tree\>\"", ",", "\"\<children\>\""}], "]"}], "//",
                 "Length"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"out", "=", 
               RowBox[{"Reap", "[", 
                RowBox[{"Do", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"childs", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<sequences\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"\"\<tree\>\"", ",", "\"\<children\>\""}], "]"}], 
                    "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "[", "\"\<smiles\>\"", 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"Sow", "[", "childs", "]"}], ";"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"n", ",", "1", ",", "childsNumb"}], "}"}]}], "]"}],
                 "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"cSMILES", "=", 
               RowBox[{"Flatten", "@", 
                RowBox[{"Rest", "@", "out"}]}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "rClass", ",", "projID", ",", "retroID", ",", "cSMILES", ",", 
                "product", ",", "retConf", ",", "retOptScore"}], "}"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "seqs"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<rclass\>\"", "\[Rule]", "#1"}], ",", 
                RowBox[{"\"\<projID\>\"", "\[Rule]", "#2"}], ",", 
                RowBox[{"\"\<retroID\>\"", "\[Rule]", "#3"}], ",", 
                RowBox[{"\"\<rreac\>\"", "\[Rule]", 
                 RowBox[{"StringRiffle", "[", 
                  RowBox[{"#4", ",", "\"\<.\>\""}], "]"}]}], ",", 
                RowBox[{"\"\<prod\>\"", "\[Rule]", "#5"}], ",", 
                RowBox[{"\"\<conf\>\"", "\[Rule]", "#6"}], ",", 
                RowBox[{"\"\<opt\>\"", "\[Rule]", "#7"}]}], "|>"}], "&"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"cols", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"cols", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"cols", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", 
               RowBox[{"cols", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
               RowBox[{"cols", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "5"}], "]"}], "]"}], ",", 
               RowBox[{"cols", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "6"}], "]"}], "]"}], ",", 
               RowBox[{"cols", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "7"}], "]"}], "]"}]}], "}"}]}], "]"}], "//",
            "Dataset"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"retImg", "=", 
        RowBox[{"GraphicsRow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"MoleculePlot", "[", 
            RowBox[{"Molecule", "[", "prodSMILES", "]"}], "]"}], ",", "arrow",
            ",", 
           RowBox[{
            RowBox[{
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"getRet", "[", 
                    RowBox[{"\"\<payload\>\"", ",", "\"\<siblings\>\""}], 
                    "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                  "\"\<reactions\>\"", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<smiles\>\"", "]"}],
                ",", 
               RowBox[{"\"\<~\>\"", "\[Rule]", "\"\<.\>\""}]}], "]"}], "//", 
             "Molecule"}], "//", "MoleculePlot"}]}], "}"}], "]"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7961886018753357`*^9, 3.7961888205000277`*^9}, {
   3.796188885318499*^9, 3.796188936784027*^9}, 3.796271078183524*^9, {
   3.796271209800908*^9, 3.796271212112862*^9}, {3.7962713083668165`*^9, 
   3.7962714958330097`*^9}, {3.796271560031309*^9, 3.7962715863778257`*^9}, {
   3.7962717563812046`*^9, 3.796271759474927*^9}, {3.7962719956975336`*^9, 
   3.7962720189483604`*^9}, {3.796273560933216*^9, 3.796273586646286*^9}, {
   3.796431201311642*^9, 3.7964312817185106`*^9}, {3.796431395889043*^9, 
   3.796431397366127*^9}, {3.7964314487965236`*^9, 3.796431449862635*^9}, {
   3.796431565267864*^9, 3.79643156585034*^9}, {3.796431625357093*^9, 
   3.7964316516358175`*^9}, {3.796431700089176*^9, 3.796431707985059*^9}, {
   3.7964317731885676`*^9, 3.7964318593111444`*^9}, {3.7964318992294903`*^9, 
   3.7964319036898017`*^9}, {3.7964319891937084`*^9, 3.79643200111182*^9}, {
   3.7964320319890194`*^9, 3.7964320414775987`*^9}, {3.796432081466604*^9, 
   3.7964321034627514`*^9}, {3.7964322802187324`*^9, 3.796432280319461*^9}, {
   3.7964324201345887`*^9, 3.7964324511964817`*^9}, {3.7964427227884703`*^9, 
   3.796442757009947*^9}, {3.7964428252937784`*^9, 3.796442903793745*^9}, {
   3.7964430608690977`*^9, 3.796443062590459*^9}, {3.7965000025563145`*^9, 
   3.7965000369823575`*^9}, {3.7965002041035323`*^9, 
   3.7965002086020823`*^9}, {3.796500251620185*^9, 3.7965002560741997`*^9}, {
   3.7966054344408035`*^9, 3.796605505940777*^9}, 3.796605576889983*^9, {
   3.7966056827607822`*^9, 3.7966056891064367`*^9}, {3.7968357013785777`*^9, 
   3.796835744299666*^9}, {3.796836345439131*^9, 3.796836379328459*^9}, {
   3.79683641756715*^9, 3.7968364247329764`*^9}, {3.7968365024640055`*^9, 
   3.7968365597799644`*^9}, {3.7968366078124514`*^9, 
   3.7968366843257356`*^9}, {3.7968367209774957`*^9, 
   3.7968368017873173`*^9}, {3.7968368541334515`*^9, 
   3.7968369601787214`*^9}, {3.7968519749076033`*^9, 3.796852076360164*^9}, {
   3.7968522872866755`*^9, 3.7968522910336504`*^9}, {3.796853071231309*^9, 
   3.7968531217088013`*^9}, {3.7968531645904317`*^9, 3.796853190945084*^9}, {
   3.796946303322296*^9, 3.79694633584308*^9}, {3.796947186029535*^9, 
   3.796947189722643*^9}, {3.7969477224248657`*^9, 3.796947722512745*^9}, {
   3.7969492420194883`*^9, 3.7969492424349613`*^9}, {3.7969603181813536`*^9, 
   3.796960320134017*^9}, {3.796961550644066*^9, 3.796961579606391*^9}, {
   3.7969623905764155`*^9, 3.79696240612227*^9}, {3.7970375005801706`*^9, 
   3.7970375181236205`*^9}, {3.7970889103051744`*^9, 3.797088922772221*^9}, {
   3.7970890330058975`*^9, 3.797089083000984*^9}, {3.797089460205601*^9, 
   3.7970894915278425`*^9}, {3.79708963554467*^9, 3.7970896611948147`*^9}, {
   3.7970898338293567`*^9, 3.7970898582411275`*^9}, {3.7975304179520903`*^9, 
   3.797530443698201*^9}, 3.797531333154784*^9, {3.806079167875844*^9, 
   3.806079184291152*^9}, {3.8060805200153813`*^9, 3.80608053233501*^9}, {
   3.8060809159966*^9, 3.806080981346188*^9}, {3.8060810208883185`*^9, 
   3.806081060710944*^9}, {3.8060812420959125`*^9, 3.806081254541865*^9}, {
   3.806081474167759*^9, 3.80608151162724*^9}, {3.8060816562383223`*^9, 
   3.8060816712096786`*^9}, {3.8060824155695877`*^9, 
   3.8060824167806053`*^9}, {3.8060834371985054`*^9, 3.806083440343844*^9}, 
   3.8060835001403933`*^9, {3.8060836098622656`*^9, 3.8060836127995267`*^9}, {
   3.8060836600822144`*^9, 3.8060836607371817`*^9}, {3.8060838523582597`*^9, 
   3.806083888861022*^9}, {3.806148919781847*^9, 3.8061489686185718`*^9}, {
   3.8061489996447678`*^9, 3.806149034631206*^9}, {3.806432268554349*^9, 
   3.806432279761194*^9}, {3.806466060134368*^9, 3.8064660625203424`*^9}, {
   3.806466333445788*^9, 3.8064663788398438`*^9}, {3.8064664129377236`*^9, 
   3.806466438016433*^9}, {3.806466473096823*^9, 3.806466479673922*^9}, {
   3.8064665385191264`*^9, 3.806466539601683*^9}, {3.8064667157076893`*^9, 
   3.8064667182790875`*^9}, 3.806501926448946*^9, {3.8065059663880415`*^9, 
   3.8065059667530413`*^9}},
 CellLabel->"In[199]:=",
 CellID->71984446,ExpressionUUID->"0f2a8065-1217-48d1-b9db-d54ad828dd91"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"just", " ", "for", " ", "getting", " ", "all", " ", "stored", " ", 
    RowBox[{"projects", ".", " ", "if"}], " ", "\"\<stored projects\>\"", " ",
     "is", " ", "given", " ", "as", " ", "input"}], ",", " ", 
   RowBox[{
   "outputs", " ", "a", " ", "dataset", " ", "of", " ", "all", " ", "stored", 
    " ", "projects", " ", "as", " ", "well", " ", "as", " ", "the", " ", 
    "total", " ", "number", " ", "of", " ", "projects", " ", "stored"}]}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7964326597797985`*^9, 3.796432675801933*^9}, {
  3.796434189802215*^9, 3.7964342021950493`*^9}},
 CellLabel->"In[200]:=",
 CellID->594281687,ExpressionUUID->"8a4809fe-d799-4d6f-a1b0-066713bd8d2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IBMRxn", "[", "req_String", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myProjects", ",", "myProjNames", ",", "myProjIDs", ",", "nameRule", ",",
       "idRule", ",", "myProjectsData", ",", "queueState"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Which", "[", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", "]"}], " ", "you", " ", "want", " ", "to", " ", 
        "get", " ", "all", " ", "\"\<stored projects\>\""}], ",", " ", 
       RowBox[{"this", " ", "code", " ", "block", " ", "runs"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"req", "\[Equal]", "\"\<stored projects\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"myProjects", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{"baseURL", "<>", "\"\</rxn/api/api/v1/projects\>\""}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "\[IndentingNewLine]", "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"myProjNames", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", "\"\<name\>\"", "]"}], "&"}], "/@", 
         RowBox[{"myProjects", "[", 
          RowBox[{"\"\<payload\>\"", ",", "\"\<content\>\""}], "]"}]}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"myProjIDs", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", "\"\<id\>\"", "]"}], "&"}], "/@", 
         RowBox[{"myProjects", "[", 
          RowBox[{"\"\<payload\>\"", ",", "\"\<content\>\""}], "]"}]}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"nameRule", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<Project Name\>\"", "\[Rule]", "#"}], "&"}], "/@", 
          "myProjNames"}], ")"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"idRule", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<Project ID\>\"", "\[Rule]", "#"}], "&"}], "/@", 
          "myProjIDs"}], ")"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"myProjectsData", "=", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Association", "[", "#", "]"}], "&"}], "/@", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"nameRule", ",", "idRule"}], "}"}], "]"}]}], "]"}], 
         "\[IndentingNewLine]", 
         RowBox[{"TableForm", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"ToString", "[", 
              RowBox[{"myProjects", "[", 
               RowBox[{"\"\<payload\>\"", ",", "\"\<totalElements\>\""}], 
               "]"}], "]"}], "}"}], "}"}], ",", 
           RowBox[{"TableHeadings", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", "\"\<Total Stored Projects\>\"", "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{"req", "\[Equal]", "\"\<queue status\>\""}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{
       "get", " ", "the", " ", "status", " ", "of", " ", "the", " ", 
        "retrosynthesis", " ", "queue"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"queueState", "=", 
        RowBox[{
         RowBox[{"HTTPRequest", "[", 
          RowBox[{
           RowBox[{"URL", "[", 
            RowBox[{
            "baseURL", "<>", 
             "\"\</rxn/api/api/v1/retrosynthesis/queue-state\>\""}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<GET\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Headers\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{
                "\"\<Content-Type\>\"", "\[Rule]", 
                 "\"\<application/json\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"\"\<Authorization\>\"", "\[Rule]", "authKey"}]}], 
               "|>"}]}]}], "\[IndentingNewLine]", "|>"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"URLExecute", "[", 
           RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "queueState"}]}], 
     "\[IndentingNewLine]", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7964324574527473`*^9, 3.7964325129662495`*^9}, {
   3.7964339692973137`*^9, 3.7964340095246134`*^9}, {3.796434066547052*^9, 
   3.79643410377837*^9}, {3.7965000813344293`*^9, 3.796500093710231*^9}, {
   3.7965010286288023`*^9, 3.7965010324264927`*^9}, {3.7969463391102934`*^9, 
   3.7969463395263495`*^9}, {3.797104147691636*^9, 3.797104220772623*^9}, {
   3.797106287196723*^9, 3.7971062940239244`*^9}, 3.8065019321165323`*^9},
 CellLabel->"In[201]:=",
 CellID->430480012,ExpressionUUID->"341045f0-58c9-40c8-9a10-ae753cbe4d34"]
}, Closed]],

Cell[CellGroupData[{

Cell["Helper Fxns", "Subsection",
 CellChangeTimes->{{3.8061501385581427`*^9, 
  3.806150140650551*^9}},ExpressionUUID->"113cc1a0-b160-487a-9530-\
67e78c6750fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pcComp", "[", "molec_String", "]"}], ":=", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"ServiceExecute", "[", 
     RowBox[{"\"\<PubChem\>\"", ",", "\"\<CompoundProperties\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<SMILES\>\"", "\[Rule]", "molec"}], ",", 
        RowBox[{"\"\<Property\>\"", "\[Rule]", "\"\<Complexity\>\""}]}], 
       "}"}]}], "]"}], "]"}], "[", "\"\<Complexity\>\"", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.806761469378539*^9, 3.806761479281603*^9}, {
  3.8067615381901464`*^9, 3.80676165223485*^9}, {3.8067724279983835`*^9, 
  3.806772434230919*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"e4241583-6d2c-4ac6-93f2-2f2366515f86"],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{"pcComp", ",", "Listable"}], "]"}]], "Input",
 CellChangeTimes->{{3.8067617298334985`*^9, 3.806761734381711*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"3433b3d0-010f-4434-a50c-acff6c317ae4"],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{"compDiffPC", ",", "Listable"}], "]"}]], "Input",
 CellChangeTimes->{{3.806761744347783*^9, 3.806761750756891*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"80e8ea68-ffae-4000-85c2-bd2048b67571"],

Cell[BoxData[
 RowBox[{
  RowBox[{"compDiffPC", "[", "rSmiles_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"reactants", ",", "product", ",", "rComp", ",", "pComp"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"reactants", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"reacSplit", "[", "rSmiles", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<.\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"product", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"reacSplit", "[", "rSmiles", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<.\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"rComp", "=", 
      RowBox[{"Total", "[", 
       RowBox[{"pcComp", "[", "reactants", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pComp", "=", 
      RowBox[{"Total", "[", 
       RowBox[{"pcComp", "[", "product", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pComp", "-", "rComp"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8067614019132113`*^9, 3.806761418057604*^9}, {
  3.8067618499965305`*^9, 3.806761864806038*^9}, {3.8067726072932544`*^9, 
  3.8067726133112555`*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"ab1a1b80-fdff-4f84-82cf-e866f6da9d25"],

Cell[BoxData[
 RowBox[{
  RowBox[{"compDiff", "[", "rSmiles_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"reactants", ",", "prod", ",", "rComp", ",", "pComp"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"reactants", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"reacSplit", "[", "rSmiles", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<.\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prod", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"reacSplit", "[", "rSmiles", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<.\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"rComp", "=", 
      RowBox[{"Total", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"Quiet", "@", 
               RowBox[{"MolecularComplexity", "[", 
                RowBox[{"reactants", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
             "Real"}], "]"}], ",", 
           RowBox[{"MolecularComplexity", "[", 
            RowBox[{"reactants", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "reactants"}]}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pComp", "=", 
      RowBox[{"Total", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"Quiet", "@", 
               RowBox[{"MolecularComplexity", "[", 
                RowBox[{"prod", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
             "Real"}], "]"}], ",", 
           RowBox[{"MolecularComplexity", "[", 
            RowBox[{"prod", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "prod"}]}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"pComp", "-", "rComp"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.806425057950637*^9, 3.8064251091987286`*^9}, {
  3.8064252475519476`*^9, 3.806425381643216*^9}, {3.8064254184521255`*^9, 
  3.806425553029954*^9}, {3.8064256017195683`*^9, 3.8064256091995835`*^9}, {
  3.8064256648914013`*^9, 3.8064256692085295`*^9}, {3.806425726851833*^9, 
  3.806425734311534*^9}, {3.8064268960056505`*^9, 3.806426899531687*^9}, {
  3.8064275192457952`*^9, 3.806427536648755*^9}, {3.8064276829367356`*^9, 
  3.806427683499325*^9}, {3.8064277150444365`*^9, 3.8064278577900047`*^9}, {
  3.8064278902587814`*^9, 3.8064279508162537`*^9}, {3.806428359920651*^9, 
  3.806428370536293*^9}, {3.8067613882479563`*^9, 3.8067613971057167`*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"5fd5c98b-fd51-4eef-bdbc-e3aa04d5d74d"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"builds", " ", "dataset", " ", "from", " ", "csv", " ", "of", " ", 
    RowBox[{"{", 
     RowBox[{"rnumber", ",", "tclass", ",", "rsmiles", ",", "notes"}], 
     "}"}]}], " ", "\[Rule]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"reaction", " ", "number"}], ",", 
     RowBox[{"true", " ", "class"}], ",", "rsmiles", ",", 
     RowBox[{"true", " ", "reactants"}], ",", "product", ",", 
     RowBox[{"tComplexity", " ", "Difference"}], ",", "crsmiles", ",", 
     "ctreac", ",", "cprod", ",", "notes"}], "}"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8062519005744443`*^9, 3.806251958624585*^9}, {
  3.8064288322901354`*^9, 3.806428837975543*^9}, {3.8064288695060205`*^9, 
  3.806428890059128*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"353ce7e0-26a5-4e05-ac80-09aabe931770"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeDat", "[", "dat_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"reactants", ",", "prod"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"dat", "[", 
     RowBox[{"All", ",", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<reaction number\>\"", "\[Rule]", "#rnumber"}], ",", 
         RowBox[{"\"\<true rclass\>\"", "\[Rule]", "#tclass"}], ",", 
         RowBox[{"\"\<rsmiles\>\"", "\[Rule]", "#rsmiles"}], ",", 
         RowBox[{"\"\<treacs\>\"", "\[Rule]", 
          RowBox[{
           RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"\"\<tprod\>\"", "\[Rule]", 
          RowBox[{
           RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<true complexity difference\>\"", "\[Rule]", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{"compDiff", "[", "#rsmiles", "]"}], "\[IndentingNewLine]", 
           ")"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<canonical rsmiles\>\"", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"reactants", "=", 
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<.\>\""}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Molecule", "[", 
                   RowBox[{"reactants", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  "\"\<CanonicalSMILES\>\"", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", 
                   RowBox[{"Length", "@", "reactants"}]}], "}"}]}], "]"}], 
               ",", "\"\<.\>\""}], "]"}], "<>", "\"\<>>\>\"", "<>", 
             RowBox[{
              RowBox[{"Molecule", "[", 
               RowBox[{
                RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
              "\"\<CanonicalSMILES\>\"", "]"}]}]}], "\[IndentingNewLine]", 
           ")"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<canonical treacs\>\"", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"reactants", "=", 
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<.\>\""}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"StringRiffle", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Molecule", "[", 
                  RowBox[{"reactants", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                 "\"\<CanonicalSMILES\>\"", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "@", "reactants"}]}], "}"}]}], "]"}], 
              ",", "\"\<.\>\""}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<canonical tprod\>\"", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Molecule", "[", 
             RowBox[{
              RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
            "\"\<CanonicalSMILES\>\"", "]"}], "\[IndentingNewLine]", ")"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"\"\<notes\>\"", "\[Rule]", "#notes"}]}], "|>"}], "&"}]}], 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.806250001682485*^9, 3.8062500407171144`*^9}, {
   3.8062510669253592`*^9, 3.806251088730965*^9}, 3.806251201707714*^9, {
   3.8062512834911995`*^9, 3.8062516267799892`*^9}, {3.8062517260759015`*^9, 
   3.806251727196712*^9}, {3.806424983742144*^9, 3.8064250218030825`*^9}, {
   3.8064285313549*^9, 3.8064285367832704`*^9}, {3.8064289084873123`*^9, 
   3.8064289573186255`*^9}, {3.80642906688562*^9, 3.806429122832699*^9}, {
   3.806465737088691*^9, 3.8064657406550083`*^9}, {3.8066704420801926`*^9, 
   3.8066704721817217`*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"221420ff-1cea-4a66-8be9-687f066d9bbb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeDatNoCm", "[", "dat_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"reactants", ",", "prod"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"dat", "[", 
     RowBox[{"All", ",", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<reaction number\>\"", "\[Rule]", "#rnumber"}], ",", 
         RowBox[{"\"\<true rclass\>\"", "\[Rule]", "#tclass"}], ",", 
         RowBox[{"\"\<rsmiles\>\"", "\[Rule]", "#rsmiles"}], ",", 
         RowBox[{"\"\<treacs\>\"", "\[Rule]", 
          RowBox[{
           RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"\"\<tprod\>\"", "\[Rule]", 
          RowBox[{
           RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
         "\"\<canonical rsmiles\>\"", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"reactants", "=", 
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<.\>\""}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Molecule", "[", 
                   RowBox[{"reactants", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  "\"\<CanonicalSMILES\>\"", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", 
                   RowBox[{"Length", "@", "reactants"}]}], "}"}]}], "]"}], 
               ",", "\"\<.\>\""}], "]"}], "<>", "\"\<>>\>\"", "<>", 
             RowBox[{
              RowBox[{"Molecule", "[", 
               RowBox[{
                RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
              "\"\<CanonicalSMILES\>\"", "]"}]}]}], "\[IndentingNewLine]", 
           ")"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<canonical treacs\>\"", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"reactants", "=", 
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<.\>\""}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"StringRiffle", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Molecule", "[", 
                  RowBox[{"reactants", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                 "\"\<CanonicalSMILES\>\"", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "@", "reactants"}]}], "}"}]}], "]"}], 
              ",", "\"\<.\>\""}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<canonical tprod\>\"", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Molecule", "[", 
             RowBox[{
              RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
            "\"\<CanonicalSMILES\>\"", "]"}], "\[IndentingNewLine]", ")"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"\"\<notes\>\"", "\[Rule]", "#notes"}]}], "|>"}], "&"}]}], 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.806250001682485*^9, 3.8062500407171144`*^9}, {
   3.8062510669253592`*^9, 3.806251088730965*^9}, 3.806251201707714*^9, {
   3.8062512834911995`*^9, 3.8062516267799892`*^9}, {3.8062517260759015`*^9, 
   3.806251727196712*^9}, {3.806424983742144*^9, 3.8064250218030825`*^9}, {
   3.8064285313549*^9, 3.8064285367832704`*^9}, {3.8064289084873123`*^9, 
   3.8064289573186255`*^9}, {3.80642906688562*^9, 3.806429122832699*^9}, {
   3.806465737088691*^9, 3.8064657406550083`*^9}, {3.8066704420801926`*^9, 
   3.8066704721817217`*^9}, {3.806773826884158*^9, 3.8067738345726743`*^9}, {
   3.806777585327119*^9, 3.8067775881364098`*^9}, {3.806847805901263*^9, 
   3.8068478062145863`*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"7aba4e2a-f235-4946-9bb7-bc881b3d2a6e"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "same", " ", "as", " ", "above", " ", "but", " ", "uses", " ", "PubChem", 
   " ", "complexity"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8067619146404295`*^9, 3.80676192191372*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"788d2295-bb9e-434d-962a-2ebbe36a5810"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeDatPC", "[", "dat_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"reactants", ",", "prod"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"dat", "[", 
     RowBox[{"All", ",", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<reaction number\>\"", "\[Rule]", "#rnumber"}], ",", 
         RowBox[{"\"\<true rclass\>\"", "\[Rule]", "#tclass"}], ",", 
         RowBox[{"\"\<rsmiles\>\"", "\[Rule]", "#rsmiles"}], ",", 
         RowBox[{"\"\<treacs\>\"", "\[Rule]", 
          RowBox[{
           RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"\"\<tprod\>\"", "\[Rule]", 
          RowBox[{
           RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<true complexity difference\>\"", "\[Rule]", 
          "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{"If", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"FailureQ", "[", 
               RowBox[{"compDiffPC", "[", "#rsmiles", "]"}], "]"}], "||", 
              RowBox[{
               RowBox[{"Head", "[", 
                RowBox[{"compDiffPC", "[", "#rsmiles", "]"}], "]"}], 
               "\[Equal]", "Missing"}]}], ",", "\"\<Failed\>\"", ",", 
             RowBox[{"compDiffPC", "[", "#rsmiles", "]"}]}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ")"}]}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<canonical rsmiles\>\"", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"reactants", "=", 
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<.\>\""}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Molecule", "[", 
                   RowBox[{"reactants", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                  "\"\<CanonicalSMILES\>\"", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", 
                   RowBox[{"Length", "@", "reactants"}]}], "}"}]}], "]"}], 
               ",", "\"\<.\>\""}], "]"}], "<>", "\"\<>>\>\"", "<>", 
             RowBox[{
              RowBox[{"Molecule", "[", 
               RowBox[{
                RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
              "\"\<CanonicalSMILES\>\"", "]"}]}]}], "\[IndentingNewLine]", 
           ")"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<canonical treacs\>\"", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"reactants", "=", 
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<.\>\""}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"StringRiffle", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Molecule", "[", 
                  RowBox[{"reactants", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                 "\"\<CanonicalSMILES\>\"", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "@", "reactants"}]}], "}"}]}], "]"}], 
              ",", "\"\<.\>\""}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<canonical tprod\>\"", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Molecule", "[", 
             RowBox[{
              RowBox[{"reacSplit", "[", "#rsmiles", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
            "\"\<CanonicalSMILES\>\"", "]"}], "\[IndentingNewLine]", ")"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"\"\<notes\>\"", "\[Rule]", "#notes"}]}], "|>"}], "&"}]}], 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.806250001682485*^9, 3.8062500407171144`*^9}, {
   3.8062510669253592`*^9, 3.806251088730965*^9}, 3.806251201707714*^9, {
   3.8062512834911995`*^9, 3.8062516267799892`*^9}, {3.8062517260759015`*^9, 
   3.806251727196712*^9}, {3.806424983742144*^9, 3.8064250218030825`*^9}, {
   3.8064285313549*^9, 3.8064285367832704`*^9}, {3.8064289084873123`*^9, 
   3.8064289573186255`*^9}, {3.80642906688562*^9, 3.806429122832699*^9}, {
   3.806465737088691*^9, 3.8064657406550083`*^9}, {3.8066704420801926`*^9, 
   3.8066704721817217`*^9}, {3.8067619295731*^9, 3.8067619432560534`*^9}, {
   3.80677309362116*^9, 3.80677312005368*^9}, {3.8067734627708464`*^9, 
   3.8067734858118906`*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"9749155a-4486-470f-9d40-e5ca8d70dc35"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "following", " ", "two", " ", "from", " ", "Mathematica", " ", 
   "Topological", " ", "Similarity", " ", 
   RowBox[{"Searching", ":", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"https", ":"}], "//", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"www", ".", "wolfram", ".", "com"}], "/", "language"}], 
          "/", "12"}], "/", "molecular"}], "-", "structure", "-", "and", "-", 
        RowBox[{"computation", "/", "topological"}], "-", "similarity", "-", 
        RowBox[{"searching", ".", "html", ".", 
         RowBox[{"en", "?", "footer"}]}]}]}], "=", "lang"}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8061682158552628`*^9, 3.806168237606518*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"f0800f2a-135b-44fe-9ed7-5e23073a750d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"atomPairs", "[", "mol_", "]"}], ":=", 
  RowBox[{
   RowBox[{"atomPairs", "[", "mol", "]"}], "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "distMat", ",", "pairIndices", ",", "atomData", ",", "atomPair", ",", 
       "counts", ",", "reorder"}], "}"}], ",", 
     RowBox[{
      RowBox[{"atomData", "=", 
       RowBox[{"AtomList", "[", 
        RowBox[{"mol", ",", "_", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<AtomicSymbol\>\"", ",", "\"\<PiElectronCount\>\"", ",", 
           "\"\<HeavyAtomCoordinationNumber\>\""}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"distMat", "=", 
       RowBox[{"MoleculeValue", "[", 
        RowBox[{"mol", ",", "\"\<GraphDistanceMatrix\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pairIndices", "=", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"AtomList", "[", 
          RowBox[{"mol", ",", 
           RowBox[{"Except", "@", "\"\<H\>\""}], ",", "\"\<AtomIndex\>\""}], 
          "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"atomPair", "=", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j"}], "}"}], ",", 
         RowBox[{"Sort", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"atomData", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"distMat", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
            RowBox[{"atomData", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Counts", "[", 
       RowBox[{"atomPair", "@@@", "pairIndices"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8061673691894493`*^9, 3.806167517467831*^9}, {
  3.8061676020827856`*^9, 3.806167626262045*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"b3c092d8-d747-468e-a8b8-b22c2dafd604"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"apDistance", "[", 
    RowBox[{"pairVector1_", ",", "pairVector2_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"A", ",", "B", ",", "AandB"}], "}"}], ",", 
     RowBox[{
      RowBox[{"A", "=", 
       RowBox[{"Total", "[", "pairVector1", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"B", "=", 
       RowBox[{"Total", "[", "pairVector2", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AandB", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"Merge", "[", 
         RowBox[{
          RowBox[{"KeyIntersection", "[", 
           RowBox[{"{", 
            RowBox[{"pairVector1", ",", "pairVector2"}], "}"}], "]"}], ",", 
          "Min"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"1", "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "*", "AandB"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"A", "+", "B"}], ")"}]}], ")"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"moleculeDistance", "[", 
   RowBox[{"mol1_", ",", "mol2_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"N", "[", 
   RowBox[{"apDistance", "[", 
    RowBox[{
     RowBox[{"atomPairs", "[", "mol1", "]"}], ",", 
     RowBox[{"atomPairs", "[", "mol2", "]"}]}], "]"}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8061676488906784`*^9, 3.806167751441387*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"5da5cb49-2cd2-43d5-9a96-2ee5363cab54"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "computes", " ", "the", " ", "topological", " ", "or", " ", "fingerprint", 
   " ", "similarity", " ", "of", " ", "the", " ", "true", " ", "and", " ", 
   "predictive", " ", "reactants", " ", "to", " ", "the", " ", "product"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8061714204796076`*^9, 3.8061714313145666`*^9}, {
  3.806248081552198*^9, 3.806248083715898*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"e2154100-9dbb-4808-84d6-a69cdc3567c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cSim", "[", 
   RowBox[{"dat_", ",", "simMethod_String"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"prod", "=", 
       RowBox[{"Molecule", "@", 
        RowBox[{"Normal", "@", 
         RowBox[{"dat", "[", "\"\<prod\>\"", "]"}]}]}]}], ",", 
      RowBox[{"treac", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Molecule", "[", "#", "]"}], "&"}], "/@", 
        RowBox[{"StringSplit", "[", 
         RowBox[{
          RowBox[{"Normal", "@", 
           RowBox[{"dat", "[", "\"\<treac\>\"", "]"}]}], ",", "\"\<.\>\""}], 
         "]"}]}]}], ",", 
      RowBox[{"rreac", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Molecule", "[", "#", "]"}], "&"}], "/@", 
        RowBox[{"StringSplit", "[", 
         RowBox[{
          RowBox[{"Normal", "@", 
           RowBox[{"dat", "[", "\"\<rreac\>\"", "]"}]}], ",", "\"\<.\>\""}], 
         "]"}]}]}], ",", "treacSim", ",", "rreacSim"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Which", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StringMatchQ", "[", 
       RowBox[{
        RowBox[{"ToString", "@", "simMethod"}], ",", "\"\<topological\>\"", 
        ",", 
        RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"treacSim", "=", 
        RowBox[{"Total", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"moleculeDistance", "[", 
            RowBox[{"prod", ",", 
             RowBox[{"treac", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "treac"}]}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rreacSim", "=", 
        RowBox[{"Total", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"moleculeDistance", "[", 
            RowBox[{"prod", ",", 
             RowBox[{"rreac", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "rreac"}]}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<treac similarity\>\"", "\[Rule]", "treacSim"}], ",", 
         RowBox[{"\"\<rreac similarity\>\"", "\[Rule]", "rreacSim"}]}], 
        "|>"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"StringMatchQ", "[", 
        RowBox[{
         RowBox[{"ToString", "@", "simMethod"}], ",", "\"\<fingerprint\>\"", 
         ",", 
         RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}], "||", 
       RowBox[{"StringMatchQ", "[", 
        RowBox[{
         RowBox[{"ToString", "@", "simMethod"}], ",", "\"\<fp\>\"", ",", 
         RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"treacSim", "=", 
        RowBox[{"Total", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "ResourceFunction", "[", "\"\<MoleculeFingerprintSimilarity\>\"", 
             "]"}], "[", 
            RowBox[{"prod", ",", 
             RowBox[{"treac", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "treac"}]}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rreacSim", "=", 
        RowBox[{"Total", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "ResourceFunction", "[", "\"\<MoleculeFingerprintSimilarity\>\"", 
             "]"}], "[", 
            RowBox[{"prod", ",", 
             RowBox[{"rreac", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "rreac"}]}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<treac similarity\>\"", "\[Rule]", "treacSim"}], ",", 
         RowBox[{"\"\<rreac similarity\>\"", "\[Rule]", "rreacSim"}]}], 
        "|>"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.806168693906474*^9, 3.8061687135057077`*^9}, {
   3.806168832960329*^9, 3.8061688744711046`*^9}, {3.806168944034832*^9, 
   3.806168957921776*^9}, {3.8061689906214857`*^9, 3.8061691100366163`*^9}, {
   3.806169246635604*^9, 3.8061694008543034`*^9}, 3.8061694976349354`*^9, {
   3.806169537229985*^9, 3.8061695390828357`*^9}, {3.8062476230369644`*^9, 
   3.806247644716689*^9}, {3.8062477803811564`*^9, 3.8062478540496664`*^9}, {
   3.8062479087941914`*^9, 3.806247980960718*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"357820bc-6bb1-4aa8-a21e-6f0cc025bfdc"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"duplicate", " ", "of", " ", "above"}], " ", "-", " ", 
   RowBox[{
   "adds", " ", "option", " ", "for", " ", "specifying", " ", "fp", " ", 
    "type", " ", "and", " ", "similarity", " ", "measure"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8061714204796076`*^9, 3.8061714313145666`*^9}, {
  3.806248081552198*^9, 3.806248083715898*^9}, {3.8062481177136908`*^9, 
  3.8062481256102777`*^9}, {3.806248163020444*^9, 3.8062481660952835`*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"791ca653-f0c0-43f4-82ec-aa2f2356626a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cSim", "[", 
   RowBox[{
   "dat_", ",", "simMethod_String", ",", "fpType_String", ",", 
    "simMeas_String"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"prod", "=", 
       RowBox[{"Molecule", "@", 
        RowBox[{"Normal", "@", 
         RowBox[{"dat", "[", "\"\<prod\>\"", "]"}]}]}]}], ",", 
      RowBox[{"treac", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Molecule", "[", "#", "]"}], "&"}], "/@", 
        RowBox[{"StringSplit", "[", 
         RowBox[{
          RowBox[{"Normal", "@", 
           RowBox[{"dat", "[", "\"\<treac\>\"", "]"}]}], ",", "\"\<.\>\""}], 
         "]"}]}]}], ",", 
      RowBox[{"rreac", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Molecule", "[", "#", "]"}], "&"}], "/@", 
        RowBox[{"StringSplit", "[", 
         RowBox[{
          RowBox[{"Normal", "@", 
           RowBox[{"dat", "[", "\"\<rreac\>\"", "]"}]}], ",", "\"\<.\>\""}], 
         "]"}]}]}], ",", "treacSim", ",", "rreacSim"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Which", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StringMatchQ", "[", 
       RowBox[{
        RowBox[{"ToString", "@", "simMethod"}], ",", "\"\<topological\>\"", 
        ",", 
        RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"treacSim", "=", 
        RowBox[{"Total", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"moleculeDistance", "[", 
            RowBox[{"prod", ",", 
             RowBox[{"treac", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "treac"}]}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rreacSim", "=", 
        RowBox[{"Total", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"moleculeDistance", "[", 
            RowBox[{"prod", ",", 
             RowBox[{"rreac", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "rreac"}]}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<treac similarity\>\"", "\[Rule]", "treacSim"}], ",", 
         RowBox[{"\"\<rreac similarity\>\"", "\[Rule]", "rreacSim"}]}], 
        "|>"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"StringMatchQ", "[", 
        RowBox[{
         RowBox[{"ToString", "@", "simMethod"}], ",", "\"\<fingerprint\>\"", 
         ",", 
         RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}], "||", 
       RowBox[{"StringMatchQ", "[", 
        RowBox[{
         RowBox[{"ToString", "@", "simMethod"}], ",", "\"\<fp\>\"", ",", 
         RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"treacSim", "=", 
        RowBox[{"Total", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "ResourceFunction", "[", "\"\<MoleculeFingerprintSimilarity\>\"", 
             "]"}], "[", 
            RowBox[{"prod", ",", 
             RowBox[{"treac", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"\"\<FingerprintType\>\"", "\[Rule]", "fpType"}], ",", 
             RowBox[{"\"\<SimilarityMeasure\>\"", "\[Rule]", "simMeas"}]}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "treac"}]}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rreacSim", "=", 
        RowBox[{"Total", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "ResourceFunction", "[", "\"\<MoleculeFingerprintSimilarity\>\"", 
             "]"}], "[", 
            RowBox[{"prod", ",", 
             RowBox[{"rreac", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"\"\<FingerprintType\>\"", "\[Rule]", "fpType"}], ",", 
             RowBox[{"\"\<SimilarityMeasure\>\"", "\[Rule]", "simMeas"}]}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "rreac"}]}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<treac similarity\>\"", "\[Rule]", "treacSim"}], ",", 
         RowBox[{"\"\<rreac similarity\>\"", "\[Rule]", "rreacSim"}]}], 
        "|>"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.806168693906474*^9, 3.8061687135057077`*^9}, {
   3.806168832960329*^9, 3.8061688744711046`*^9}, {3.806168944034832*^9, 
   3.806168957921776*^9}, {3.8061689906214857`*^9, 3.8061691100366163`*^9}, {
   3.806169246635604*^9, 3.8061694008543034`*^9}, 3.8061694976349354`*^9, {
   3.806169537229985*^9, 3.8061695390828357`*^9}, {3.8062476230369644`*^9, 
   3.806247644716689*^9}, {3.8062477803811564`*^9, 3.8062478540496664`*^9}, {
   3.8062479087941914`*^9, 3.806247980960718*^9}, {3.8062481706186323`*^9, 
   3.8062481998610344`*^9}, {3.8062482463957157`*^9, 3.806248275512957*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"f0bbe2ce-26a8-4ae7-a960-ab99d1749385"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Molecular", " ", "complexity", " ", "calculation"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.806424851458932*^9, 3.8064248851740932`*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"fac7256a-f9f1-4575-8c23-29e802b4a9a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MolecularComplexity", "[", "mol_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"molec", "=", 
       RowBox[{"Molecule", "[", "mol", "]"}]}], ",", "aInds", ",", "aSyms", 
      ",", "indTsym", ",", "symAtoms", ",", "symAtomsNoH", ",", 
      "symAtomsNoHv1", ",", "indTval", ",", "indTcon", ",", "bondPairs", ",", 
      "bondIndPairs", ",", "bondIndsNoH", ",", "bondIndPairsNoH", ",", "ind", 
      ",", "jnd", ",", "atomI", ",", "vi", ",", "bi", ",", "di", ",", "dj", 
      ",", "bondedAs", ",", "ei", ",", "eAs", ",", "si", ",", "vj", ",", "bj",
       ",", "sj", ",", "ej", ",", "out", ",", "terms", ",", "atomII", ",", 
      "atomIIpos", ",", "jnds", ",", "nonEqTerms", ",", "eqTerms", ",", 
      "allTerms", ",", "bTypes", ",", "sharedA", ",", "adjA", ",", "aIndsNoH",
       ",", "adjM"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"aInds", "=", 
      RowBox[{"MoleculeValue", "[", 
       RowBox[{"molec", ",", "\"\<AtomIndex\>\""}], "]"}]}], ";", 
     RowBox[{"(*", "  ", 
      RowBox[{"atom", " ", "indices"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"aIndsNoH", "=", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MoleculeValue", "[", 
             RowBox[{"molec", ",", "\"\<AtomicSymbol\>\""}], "]"}], ",", 
            "aInds"}], "}"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Not", "@", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"#", ",", "\"\<H\>\""}], "]"}]}], "&"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"aSyms", "=", 
      RowBox[{"MoleculeValue", "[", 
       RowBox[{"molec", ",", "\"\<AtomicSymbol\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"indTsym", "=", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{"aInds", ",", "aSyms"}], "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"atom", " ", "indicex"}], " ", "\[Rule]", " ", 
       RowBox[{"atomic", " ", "symbol"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"symAtoms", "=", 
      RowBox[{"MoleculeValue", "[", 
       RowBox[{"molec", ",", "\"\<SymmetryEquivalentAtoms\>\""}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"adjM", "=", 
      RowBox[{"Normal", "[", 
       RowBox[{"MoleculeValue", "[", 
        RowBox[{"molec", ",", "\"\<AdjacencyMatrix\>\""}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"symAtomsNoHv1", "=", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"TakeList", "[", 
             RowBox[{"aSyms", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "&"}], "/@", 
               "symAtoms"}]}], "]"}], ",", "symAtoms"}], "}"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Not", "@", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<H\>\""}], "]"}]}], 
          "&"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"symAtomsNoH", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"I", "'"}], "m", " ", "kind", " ", "of", " ", "unsure", 
            " ", "about", " ", "this", " ", "fix"}], ",", " ", 
           RowBox[{"maybe", " ", "it", " ", 
            RowBox[{"works", "?"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Which", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "m", "]"}], "\[Equal]", "1"}], ",", 
            RowBox[{"{", "m", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Length", "[", "m", "]"}], ">", "1"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"sharedA", "=", 
              RowBox[{"First", "@", 
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"First", "[", 
                  RowBox[{"Intersection", "[", 
                   RowBox[{"adjM", "[", 
                    RowBox[{"[", 
                    RowBox[{"m", ",", "aIndsNoH"}], "]"}], "]"}], "]"}], 
                  "]"}], ",", "1"}], "]"}]}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "gets", " ", "the", " ", "atom", " ", "that", " ", "the", " ", 
               "sym", " ", "atoms", " ", "share"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"adjA", "=", 
              RowBox[{"First", "@", 
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"First", "[", 
                   RowBox[{"adjM", "[", 
                    RowBox[{"[", 
                    RowBox[{"sharedA", ",", "aIndsNoH"}], "]"}], "]"}], "]"}],
                   "*", 
                  RowBox[{"Boole", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Not", "@", 
                    RowBox[{"ContainsAny", "[", 
                    RowBox[{"m", ",", 
                    RowBox[{"{", "#", "}"}]}], "]"}]}], "&"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "@", "aIndsNoH"}], "]"}]}], "]"}]}], 
                 ",", "1"}], "]"}]}]}], ";", 
             RowBox[{"(*", " ", 
              RowBox[{
              "gets", " ", "the", " ", "atoms", " ", "that", " ", "the", " ", 
               "shared", " ", "atom", " ", "is", " ", "bonded", " ", "to"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ContainsOnly", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"First", "[", 
                    RowBox[{"adjM", "[", 
                    RowBox[{"[", 
                    RowBox[{"sharedA", ",", "aIndsNoH"}], "]"}], "]"}], "]"}],
                     ",", "1"}], "]"}], "]"}], ",", "m"}], "]"}], ",", 
               RowBox[{"{", "m", "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"SameQ", "[", 
                  RowBox[{
                   RowBox[{"First", "@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"MoleculeValue", "[", 
                    RowBox[{"molec", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<AtomChirality\>\"", ",", "j"}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "adjA"}], "}"}]}], "]"}]}], ",", 
                   "None"}], "]"}], ",", 
                 RowBox[{"{", "m", "}"}], ",", 
                 RowBox[{"Split", "[", "m", "]"}]}], "]"}]}], 
              "\[IndentingNewLine]", "]"}]}]}], 
           RowBox[{"(*", " ", 
            RowBox[{
            "tests", " ", "if", " ", "those", " ", "attached", " ", "atoms", 
             " ", "are", " ", "stereocenters"}], " ", "*)"}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "symAtomsNoHv1"}], "}"}]}], "]"}], "//", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Quiet"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{
      "lists", " ", "of", " ", "symmetrically", " ", "equivalent", " ", 
       "atoms"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"indTval", "=", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"MoleculeValue", "[", 
         RowBox[{"molec", ",", "\"\<AtomIndex\>\""}], "]"}], ",", 
        RowBox[{"MoleculeValue", "[", 
         RowBox[{"molec", ",", "\"\<OuterShellElectronCount\>\""}], "]"}]}], 
       "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"atom", " ", "index"}], " ", "\[Rule]", " ", "valence"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"bondPairs", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Lookup", "[", 
         RowBox[{"indTsym", ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"MoleculeValue", "[", 
        RowBox[{"molec", ",", "\"\<BondedAtomIndices\>\""}], "]"}]}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{
      "list", " ", "of", " ", "lists", " ", "of", " ", "bonded", " ", "atom", 
       " ", "indices"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"bondIndPairs", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{"bondPairs", ",", 
         RowBox[{"MoleculeValue", "[", 
          RowBox[{"molec", ",", "\"\<BondedAtomIndices\>\""}], "]"}]}], "}"}],
        "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{"list", " ", "of", " ", "pairs", " ", "of", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"bonded", " ", "atom", " ", "symbols"}], ",", " ", 
         RowBox[{"bonded", " ", "atom", " ", "indices"}]}], "}"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"bondIndsNoH", "=", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"bondIndPairs", ",", 
         RowBox[{
          RowBox[{"Not", "@", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<H\>\""}], "]"}]}], 
          "&"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "list", " ", "of", " ", "lists", " ", "of", " ", "bonded", " ", 
       "indices", " ", "with", " ", "H", " ", "removed"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"bondIndPairsNoH", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"bondIndPairs", ",", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<H\>\""}], "]"}]}], 
         "&"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"terms", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"atomI", "=", 
          RowBox[{"symAtomsNoH", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "atomI", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{"(*", " ", 
            RowBox[{
            "if", " ", "there", " ", "are", " ", "no", " ", "equivalent", " ",
              "atoms"}], " ", "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"vi", "=", 
             RowBox[{"indTval", "[", 
              RowBox[{"First", "[", "atomI", "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"bi", "=", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"bTypes", "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{"MoleculeValue", "[", 
                   RowBox[{"molec", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<BondType\>\"", ",", "#"}], "}"}]}], "]"}], 
                  "&"}], "/@", 
                 RowBox[{
                  RowBox[{"Select", "[", 
                   RowBox[{"bondIndPairsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                   "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Total", "[", "\[IndentingNewLine]", 
                RowBox[{"Which", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"indTsym", "[", 
                    RowBox[{"First", "[", "atomI", "]"}], "]"}], "\[Equal]", 
                   "\"\<C\>\""}], ",", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", 
                    RowBox[{"Counts", "[", "bTypes", "]"}], "]"}], ",", 
                    "\"\<Aromatic\>\""}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Counts", "[", "bTypes", "]"}], "[", 
                    "\"\<Aromatic\>\"", "]"}], ">", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"DeleteDuplicates", "[", "bTypes", "]"}], ",", 
                    RowBox[{"{", "\"\<Single\>\"", "}"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}]}], "}"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MoleculeValue", "[", 
                    RowBox[{"molec", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<BondType\>\"", ",", "#"}], "}"}]}], "]"}], 
                    "&"}], "/@", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndPairsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "2"}]}], "}"}]}]}],
                    "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"indTsym", "[", 
                    RowBox[{"First", "[", "atomI", "]"}], "]"}], "\[Equal]", 
                    "\"\<O\>\""}], "||", 
                   RowBox[{
                    RowBox[{"indTsym", "[", 
                    RowBox[{"First", "[", "atomI", "]"}], "]"}], "\[Equal]", 
                    "\"\<S\>\""}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", 
                    RowBox[{"Counts", "[", "bTypes", "]"}], "]"}], ",", 
                    "\"\<Aromatic\>\""}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Counts", "[", "bTypes", "]"}], "[", 
                    "\"\<Aromatic\>\"", "]"}], ">", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"DeleteDuplicates", "[", "bTypes", "]"}], ",", 
                    RowBox[{"{", "\"\<Single\>\"", "}"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}]}], "}"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MoleculeValue", "[", 
                    RowBox[{"molec", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<BondType\>\"", ",", "#"}], "}"}]}], "]"}], 
                    "&"}], "/@", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndPairsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "1"}]}], "}"}]}]}],
                    "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"indTsym", "[", 
                    RowBox[{"First", "[", "atomI", "]"}], "]"}], "\[Equal]", 
                   "\"\<N\>\""}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", 
                    RowBox[{"Counts", "[", "bTypes", "]"}], "]"}], ",", 
                    "\"\<Aromatic\>\""}], "]"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Counts", "[", "bTypes", "]"}], "[", 
                    "\"\<Aromatic\>\"", "]"}], ">", "1"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndPairs", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[NotEqual]", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "&"}]}], "]"}], 
                    "]"}], "\[Equal]", "3"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"DeleteDuplicates", "[", "bTypes", "]"}], ",", 
                    RowBox[{"{", "\"\<Single\>\"", "}"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}]}], "}"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", 
                    RowBox[{"Counts", "[", "bTypes", "]"}], "]"}], ",", 
                    "\"\<Aromatic\>\""}], "]"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Counts", "[", "bTypes", "]"}], "[", 
                    "\"\<Aromatic\>\"", "]"}], "\[Equal]", "1"}], ")"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MoleculeValue", "[", 
                    RowBox[{"molec", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<BondType\>\"", ",", "#"}], "}"}]}], "]"}], 
                    "&"}], "/@", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndPairsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "2"}]}], "}"}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", 
                    RowBox[{"Counts", "[", "bTypes", "]"}], "]"}], ",", 
                    "\"\<Aromatic\>\""}], "]"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Counts", "[", "bTypes", "]"}], "[", 
                    "\"\<Aromatic\>\"", "]"}], ">", "1"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndPairs", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[NotEqual]", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "&"}]}], "]"}], 
                    "]"}], "\[Equal]", "2"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"DeleteDuplicates", "[", "bTypes", "]"}], ",", 
                    RowBox[{"{", "\"\<Single\>\"", "}"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}]}], "}"}]}], 
                    ",", "True", ",", "\[IndentingNewLine]", 
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MoleculeValue", "[", 
                    RowBox[{"molec", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<BondType\>\"", ",", "#"}], "}"}]}], "]"}], 
                    "&"}], "/@", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndPairsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "2"}]}], "}"}]}], 
                    "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", 
                  RowBox[{"Total", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MoleculeValue", "[", 
                    RowBox[{"molec", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<BondType\>\"", ",", "#"}], "}"}]}], "]"}], 
                    "&"}], "/@", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndPairsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "2"}]}], "}"}]}], 
                   "]"}]}], "]"}], "\[IndentingNewLine]", "]"}]}], 
              "\[IndentingNewLine]", ")"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"di", "=", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"bondedAs", "=", 
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"Select", "[", 
                    RowBox[{"bondIndsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"#", "\[NotEqual]", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "&"}]}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"Length", "@", 
                RowBox[{"DeleteDuplicates", "@", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Select", "[", 
                    RowBox[{"symAtomsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"bondedAs", "[", 
                    RowBox[{"[", "m", "]"}], "]"}]}], "]"}], "&"}]}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"m", ",", "1", ",", 
                    RowBox[{"Length", "@", "bondedAs"}]}], "}"}]}], 
                  "]"}]}]}]}], "\[IndentingNewLine]", ")"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"ei", "=", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"eAs", "=", 
                RowBox[{"Prepend", "[", 
                 RowBox[{
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[NotEqual]", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "&"}]}], "]"}], 
                  ",", 
                  RowBox[{"First", "[", "atomI", "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Length", "@", 
                RowBox[{"DeleteDuplicates", "@", 
                 RowBox[{"Lookup", "[", 
                  RowBox[{"indTsym", ",", "eAs"}], "]"}]}]}]}], 
              "\[IndentingNewLine]", ")"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"si", "=", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"MoleculeValue", "[", 
                RowBox[{"molec", ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<AtomChirality\>\"", ",", 
                   RowBox[{"First", "[", "atomI", "]"}]}], "}"}]}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<R\>\"", "\[Rule]", "2"}], ",", 
                 RowBox[{"\"\<S\>\"", "\[Rule]", "2"}], ",", 
                 RowBox[{"\"\<Unspecified\>\"", "\[Rule]", "2"}], ",", 
                 RowBox[{"None", "\[Rule]", "1"}]}], "}"}]}], 
              "\[IndentingNewLine]", ")"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"di", ",", "ei", ",", "si", ",", "vi", ",", "bi"}], 
             "}"}]}], "\[IndentingNewLine]", ",", 
           RowBox[{"(*", " ", 
            RowBox[{
            "if", " ", "there", " ", "is", " ", "more", " ", "than", " ", "1",
              " ", "equivalent", " ", "atom"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"vi", "=", 
             RowBox[{"indTval", "[", 
              RowBox[{"First", "[", "atomI", "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"bi", "=", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"bTypes", "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{"MoleculeValue", "[", 
                   RowBox[{"molec", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<BondType\>\"", ",", "#"}], "}"}]}], "]"}], 
                  "&"}], "/@", 
                 RowBox[{
                  RowBox[{"Select", "[", 
                   RowBox[{"bondIndPairsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                   "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Total", "[", "\[IndentingNewLine]", 
                RowBox[{"Which", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"indTsym", "[", 
                    RowBox[{"First", "[", "atomI", "]"}], "]"}], "\[Equal]", 
                   "\"\<C\>\""}], ",", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", 
                    RowBox[{"Counts", "[", "bTypes", "]"}], "]"}], ",", 
                    "\"\<Aromatic\>\""}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Counts", "[", "bTypes", "]"}], "[", 
                    "\"\<Aromatic\>\"", "]"}], ">", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"DeleteDuplicates", "[", "bTypes", "]"}], ",", 
                    RowBox[{"{", "\"\<Single\>\"", "}"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}]}], "}"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MoleculeValue", "[", 
                    RowBox[{"molec", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<BondType\>\"", ",", "#"}], "}"}]}], "]"}], 
                    "&"}], "/@", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndPairsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "2"}]}], "}"}]}]}],
                    "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"indTsym", "[", 
                    RowBox[{"First", "[", "atomI", "]"}], "]"}], "\[Equal]", 
                    "\"\<O\>\""}], "||", 
                   RowBox[{
                    RowBox[{"indTsym", "[", 
                    RowBox[{"First", "[", "atomI", "]"}], "]"}], "\[Equal]", 
                    "\"\<S\>\""}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", 
                    RowBox[{"Counts", "[", "bTypes", "]"}], "]"}], ",", 
                    "\"\<Aromatic\>\""}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Counts", "[", "bTypes", "]"}], "[", 
                    "\"\<Aromatic\>\"", "]"}], ">", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"DeleteDuplicates", "[", "bTypes", "]"}], ",", 
                    RowBox[{"{", "\"\<Single\>\"", "}"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}]}], "}"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MoleculeValue", "[", 
                    RowBox[{"molec", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<BondType\>\"", ",", "#"}], "}"}]}], "]"}], 
                    "&"}], "/@", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndPairsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "1"}]}], "}"}]}]}],
                    "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"indTsym", "[", 
                    RowBox[{"First", "[", "atomI", "]"}], "]"}], "\[Equal]", 
                   "\"\<N\>\""}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", 
                    RowBox[{"Counts", "[", "bTypes", "]"}], "]"}], ",", 
                    "\"\<Aromatic\>\""}], "]"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Counts", "[", "bTypes", "]"}], "[", 
                    "\"\<Aromatic\>\"", "]"}], ">", "1"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndPairs", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[NotEqual]", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "&"}]}], "]"}], 
                    "]"}], "\[Equal]", "3"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"DeleteDuplicates", "[", "bTypes", "]"}], ",", 
                    RowBox[{"{", "\"\<Single\>\"", "}"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}]}], "}"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", 
                    RowBox[{"Counts", "[", "bTypes", "]"}], "]"}], ",", 
                    "\"\<Aromatic\>\""}], "]"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Counts", "[", "bTypes", "]"}], "[", 
                    "\"\<Aromatic\>\"", "]"}], "\[Equal]", "1"}], ")"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MoleculeValue", "[", 
                    RowBox[{"molec", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<BondType\>\"", ",", "#"}], "}"}]}], "]"}], 
                    "&"}], "/@", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndPairsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "2"}]}], "}"}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", 
                    RowBox[{"Counts", "[", "bTypes", "]"}], "]"}], ",", 
                    "\"\<Aromatic\>\""}], "]"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Counts", "[", "bTypes", "]"}], "[", 
                    "\"\<Aromatic\>\"", "]"}], ">", "1"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndPairs", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[NotEqual]", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "&"}]}], "]"}], 
                    "]"}], "\[Equal]", "2"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"DeleteDuplicates", "[", "bTypes", "]"}], ",", 
                    RowBox[{"{", "\"\<Single\>\"", "}"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}]}], "}"}]}], 
                    ",", "True", ",", "\[IndentingNewLine]", 
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MoleculeValue", "[", 
                    RowBox[{"molec", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<BondType\>\"", ",", "#"}], "}"}]}], "]"}], 
                    "&"}], "/@", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndPairsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "2"}]}], "}"}]}], 
                    "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", 
                  RowBox[{"Total", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MoleculeValue", "[", 
                    RowBox[{"molec", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<BondType\>\"", ",", "#"}], "}"}]}], "]"}], 
                    "&"}], "/@", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndPairsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Single\>\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"\<Double\>\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"\<Triple\>\"", "\[Rule]", "3"}], ",", 
                    RowBox[{"\"\<Aromatic\>\"", "\[Rule]", "2"}]}], "}"}]}], 
                   "]"}]}], "]"}], "\[IndentingNewLine]", "]"}]}], 
              "\[IndentingNewLine]", ")"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"di", "=", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"bondedAs", "=", 
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"Select", "[", 
                    RowBox[{"bondIndsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"#", "\[NotEqual]", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "&"}]}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"Length", "@", 
                RowBox[{"DeleteDuplicates", "@", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Select", "[", 
                    RowBox[{"symAtomsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"bondedAs", "[", 
                    RowBox[{"[", "m", "]"}], "]"}]}], "]"}], "&"}]}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"m", ",", "1", ",", 
                    RowBox[{"Length", "@", "bondedAs"}]}], "}"}]}], 
                  "]"}]}]}]}], "\[IndentingNewLine]", ")"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"ei", "=", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"eAs", "=", 
                RowBox[{"Prepend", "[", 
                 RowBox[{
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{"bondIndsNoH", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "]"}], "&"}]}], 
                    "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[NotEqual]", 
                    RowBox[{"First", "[", "atomI", "]"}]}], "&"}]}], "]"}], 
                  ",", 
                  RowBox[{"First", "[", "atomI", "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Length", "@", 
                RowBox[{"DeleteDuplicates", "@", 
                 RowBox[{"Lookup", "[", 
                  RowBox[{"indTsym", ",", "eAs"}], "]"}]}]}]}], 
              "\[IndentingNewLine]", ")"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"si", "=", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"MoleculeValue", "[", 
                RowBox[{"molec", ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<AtomChirality\>\"", ",", 
                   RowBox[{"First", "[", "atomI", "]"}]}], "}"}]}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<R\>\"", "\[Rule]", "2"}], ",", 
                 RowBox[{"\"\<S\>\"", "\[Rule]", "2"}], ",", 
                 RowBox[{"\"\<Unspecified\>\"", "\[Rule]", "2"}], ",", 
                 RowBox[{"None", "\[Rule]", "1"}]}], "}"}]}], 
              "\[IndentingNewLine]", ")"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"di", ",", "ei", ",", "si", ",", "vi", ",", "bi"}], 
               "}"}], ",", 
              RowBox[{"Length", "@", "atomI"}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "symAtomsNoH"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"nonEqTerms", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"terms", ",", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"MatrixQ", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"eqTerms", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"terms", ",", 
          RowBox[{
           RowBox[{"MatrixQ", "[", "#", "]"}], "&"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"allTerms", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"nonEqTerms", ",", "eqTerms"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "eqTerms", "]"}], ">", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"(", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"allTerms", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "s1", "]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"allTerms", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
              RowBox[{"[", "s1", "]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"allTerms", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}], "[", 
              RowBox[{"[", "s1", "]"}], "]"}], "*", 
             RowBox[{"Log2", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"allTerms", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "4"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "s1", "]"}], "]"}], "*", 
                RowBox[{
                 RowBox[{"allTerms", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "5"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "s1", "]"}], "]"}]}], ")"}], "]"}]}], ")"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"s1", ",", "1", ",", 
             RowBox[{"Length", "@", "allTerms"}]}], "}"}]}], "]"}], "-", 
         RowBox[{"0.5", "*", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"eqTerms", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"eqTerms", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j1", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"eqTerms", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "3"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j1", "]"}], "]"}], "*", 
              RowBox[{"Log2", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"eqTerms", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "4"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "j1", "]"}], "]"}], "*", 
                 RowBox[{
                  RowBox[{"eqTerms", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "5"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "j1", "]"}], "]"}]}], ")"}], "]"}]}], ")"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"j1", ",", "1", ",", 
              RowBox[{"Length", "@", "eqTerms"}]}], "}"}]}], "]"}]}]}], "]"}],
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"N", "[", 
        RowBox[{"Sum", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"allTerms", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", "s2", "]"}], "]"}], "*", 
           RowBox[{
            RowBox[{"allTerms", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
            RowBox[{"[", "s2", "]"}], "]"}], "*", 
           RowBox[{
            RowBox[{"allTerms", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "3"}], "]"}], "]"}], "[", 
            RowBox[{"[", "s2", "]"}], "]"}], "*", 
           RowBox[{"Log2", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"allTerms", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "4"}], "]"}], "]"}], "[", 
              RowBox[{"[", "s2", "]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"allTerms", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "5"}], "]"}], "]"}], "[", 
              RowBox[{"[", "s2", "]"}], "]"}]}], "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"s2", ",", "1", ",", 
            RowBox[{"Length", "@", "allTerms"}]}], "}"}]}], "]"}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8084201099868317`*^9, 3.808420215439434*^9}, {
  3.8084202597778883`*^9, 3.8084202782964144`*^9}, {3.8084250640288363`*^9, 
  3.8084250652388477`*^9}, {3.808425395567339*^9, 3.8084254061309605`*^9}, {
  3.8084256223563194`*^9, 3.8084256233694324`*^9}, {3.808426090914304*^9, 
  3.808426095548932*^9}, {3.8084261277110353`*^9, 3.8084261311583138`*^9}, {
  3.8084261970448556`*^9, 3.808426215446269*^9}, {3.8084262584954233`*^9, 
  3.8084262613446755`*^9}},
 CellLabel->"In[220]:=",
 CellID->481268602,ExpressionUUID->"e79be9e4-45e8-49ea-8a83-90bf33cb6ac1"],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{"MolecularComplexity", ",", "Listable"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.808426287804298*^9, 3.808426293715251*^9}},
 CellLabel->"In[221]:=",
 CellID->21379190,ExpressionUUID->"fb8af63a-4443-424f-a154-7e7eaea8b674"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prodSel", "[", 
   RowBox[{"dat_Dataset", ",", "prod_String"}], "]"}], ":=", 
  RowBox[{"dat", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#prod", "\[Equal]", "prod"}], "&"}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8061501437590556`*^9, 3.8061501641569576`*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"1b9108b9-f177-42cf-82cc-9cb8fadcb4ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cSmiles", "[", "smiles_", "]"}], ":=", 
  RowBox[{
   RowBox[{"smiles", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<.\>\"", "<>", 
   RowBox[{"smiles", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8061513512634764`*^9, 3.8061513794752817`*^9}, {
  3.806151451590102*^9, 3.8061514583245735`*^9}, {3.8061514981040125`*^9, 
  3.8061515287439*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"2da767e3-3967-469d-bd61-04230d104b23"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"reacSplit", "[", "reacs_String", "]"}], ":=", 
   RowBox[{"StringSplit", "[", 
    RowBox[{"reacs", ",", "\"\<>>\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.80537616905692*^9, 3.8053761729549017`*^9}, {
  3.805376512671505*^9, 3.8053765176817093`*^9}, {3.805377047715582*^9, 
  3.805377052387032*^9}, {3.8061627093728647`*^9, 3.806162723761508*^9}},
 NumberMarks->False,
 CellLabel->
  "In[224]:=",ExpressionUUID->"da136b31-5f25-4c4d-a148-b2aa9a948668"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Helper Functions", "Section",
 CellChangeTimes->{{3.8099093475356126`*^9, 
  3.809909350317613*^9}},ExpressionUUID->"67bf2f1a-764c-4894-977f-\
f1e253e5df1e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rxnPlt", "[", "rsmiles_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"plus", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"Text", "@", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<+\>\"", ",", "20"}], "]"}]}], ",", 
         RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}]}], ",", 
      RowBox[{"arrow", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"Text", "@", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\[RightArrow]\>\"", ",", "20"}], "]"}]}], ",", 
         RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}]}], ",", "reacsplit",
       ",", "reacs", ",", "prods", ",", "reacPlots", ",", "prodPlots"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"reacsplit", "=", 
      RowBox[{"reacSplit", "[", "rsmiles", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"reacs", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"reacsplit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<.\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prods", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"reacsplit", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<.\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"reacPlots", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"MoleculePlot", "[", 
         RowBox[{
          RowBox[{"Molecule", "[", "i", "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "reacs"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prodPlots", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"MoleculePlot", "[", 
         RowBox[{
          RowBox[{"Molecule", "[", "j", "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "prods"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"GraphicsRow", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Riffle", "[", 
            RowBox[{"reacPlots", ",", "plus"}], "]"}], ",", "arrow", ",", 
           RowBox[{"Riffle", "[", 
            RowBox[{"prodPlots", ",", "plus"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.807023607640238*^9, 3.807023644204119*^9}, {
  3.8070240005089912`*^9, 3.8070240024770627`*^9}, {3.8070240469429655`*^9, 
  3.8070240895043364`*^9}, {3.807024474092442*^9, 3.8070245861125097`*^9}, {
  3.807024616671784*^9, 3.8070249202210555`*^9}, {3.8070253790811996`*^9, 
  3.807025416146223*^9}, {3.809909396305602*^9, 3.80990941023062*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"1f03ba5d-15ea-40a7-9a21-63b2f50e3af0"],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{"rxnPlt", ",", "Listable"}], "]"}]], "Input",
 CellChangeTimes->{{3.8099094714936047`*^9, 3.8099094756478367`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"266e92ab-6923-44eb-a922-d8fdc426fa6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getFwd", "[", "dat_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "fwdPred", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fwdPred", "=", 
      RowBox[{"IBMRxn", "[", 
       RowBox[{"\"\<new prediction\>\"", ",", 
        RowBox[{"StringSplit", "[", 
         RowBox[{
          RowBox[{"dat", "[", "\"\<ret pred reacs\>\"", "]"}], ",", 
          "\"\<.\>\""}], "]"}], ",", 
        RowBox[{"dat", "[", "\"\<project ID\>\"", "]"}], ",", 
        "\"\<dataset\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Dataset", "[", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<reaction number\>\"", "\[Rule]", 
         RowBox[{"Normal", "[", 
          RowBox[{"dat", "[", "\"\<reaction number\>\"", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<true rsmiles\>\"", "\[Rule]", 
         RowBox[{"Normal", "[", 
          RowBox[{"dat", "[", "\"\<true rsmiles\>\"", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<true reacs\>\"", "\[Rule]", 
         RowBox[{"Normal", "[", 
          RowBox[{"dat", "[", "\"\<true reacs\>\"", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<tprod\>\"", "\[Rule]", 
         RowBox[{"Normal", "[", 
          RowBox[{"dat", "[", "\"\<true prod\>\"", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<retroID\>\"", "\[Rule]", 
         RowBox[{"Normal", "[", 
          RowBox[{"dat", "[", "\"\<ret ID\>\"", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<ret rreac\>\"", "\[Rule]", 
         RowBox[{"Normal", "[", 
          RowBox[{"dat", "[", "\"\<ret pred reacs\>\"", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<ret pred rsmiles\>\"", "\[Rule]", 
         RowBox[{"Normal", "[", 
          RowBox[{"dat", "[", "\"\<ret pred rsmiles\>\"", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<ret confidence\>\"", "\[Rule]", 
         RowBox[{"Normal", "[", 
          RowBox[{"dat", "[", "\"\<ret confidence\>\"", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<ret optimization\>\"", "\[Rule]", 
         RowBox[{"Normal", "[", 
          RowBox[{"dat", "[", "\"\<ret optimization\>\"", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<project name\>\"", "\[Rule]", 
         RowBox[{"Normal", "[", 
          RowBox[{"fwdPred", "[", "\"\<project name\>\"", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<projID\>\"", "\[Rule]", 
         RowBox[{"Normal", "[", 
          RowBox[{"fwdPred", "[", "\"\<projID\>\"", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<fwd pred rsmiles\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Normal", "[", 
            RowBox[{"fwdPred", "[", "\"\<rreac\>\"", "]"}], "]"}], "<>", 
           "\"\<>>\>\"", "<>", 
           RowBox[{"Normal", "[", 
            RowBox[{"fwdPred", "[", "\"\<rprod\>\"", "]"}], "]"}]}], ")"}]}], 
        ",", 
        RowBox[{"\"\<fwd pred reacs\>\"", "\[Rule]", 
         RowBox[{"Normal", "[", 
          RowBox[{"fwdPred", "[", "\"\<rreac\>\"", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<fwd pred prod\>\"", "\[Rule]", 
         RowBox[{"Normal", "[", 
          RowBox[{"fwdPred", "[", "\"\<rprod\>\"", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<fwd pred conf\>\"", "\[Rule]", 
         RowBox[{"Normal", "[", 
          RowBox[{"fwdPred", "[", "\"\<conf\>\"", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<fwd pred rxn img\>\"", "\[Rule]", 
         RowBox[{"Normal", "[", 
          RowBox[{"fwdPred", "[", "\"\<reaction image\>\"", "]"}], "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQXfCA170q4Y3jGhEufxC94lNjMIheOYk5FERnbFoe
CaKT3afFgOhjJme1qoE0o+g0bRBdkpRkDKI5jNNNQfTcM03OIJrpTjeYNprh
kgCif4R4gWmNlurjIHrD5VowvXeXS0EDkO5b87wGRPtv7JoIotXfbJ8Gov12
nWuYC6RDLDsbQXRGU+g0EN22NXIBiN5dsW4TiO7tvHYeRF9bEnANRN9//O0m
iI449eLqq6Q3jmfO2T4C0Uo6IcyvgfSioEmsIHrPMkc+EJ3RrcEPor8dvSkM
on2284uA6KhbEw1A9AOJ+WDaZXXqnN9AWi57/XwQLXAhYQ+I1jt/cR+IbstJ
OQqipWYtOweie/Yc+ACi3SQYP4FoAGfixAU=
  "],
 CellLabel->
  "In[271]:=",ExpressionUUID->"69453c47-b98a-47ce-9aeb-59af9f6e2f05"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"addColumnToDataset", "[", 
      RowBox[{"dataset_Dataset", ",", 
       RowBox[{"column", ":", "_List"}], ",", 
       RowBox[{"columnName", ":", "_String"}]}], "]"}], "/;", 
     RowBox[{
      RowBox[{"Length", "[", "column", "]"}], "===", 
      RowBox[{"Length", "[", "dataset", "]"}]}]}], ":=", 
    RowBox[{"addColumnToDataset", "[", 
     RowBox[{"dataset", ",", 
      RowBox[{"{", "column", "}"}], ",", 
      RowBox[{"{", "columnName", "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"addColumnToDataset", "[", 
     RowBox[{"dataset_Dataset", ",", 
      RowBox[{"columns", ":", 
       RowBox[{"{", "__List", "}"}]}], ",", 
      RowBox[{"columnNames", ":", 
       RowBox[{"{", "__String", "}"}]}]}], "]"}], "/;", 
    RowBox[{"And", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "columnNames", "]"}], "===", 
       RowBox[{"Length", "[", "columns", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Length", "[", "dataset", "]"}], "===", 
       RowBox[{
        RowBox[{"Dimensions", "[", "columns", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ":=", 
   RowBox[{"Dataset", "@", 
    RowBox[{"Transpose", "@", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "dataset", "]"}], ",", 
       RowBox[{"Dataset", "[", 
        RowBox[{"AssociationThread", "[", 
         RowBox[{"columnNames", ",", "columns"}], "]"}], "]"}]}], "]"}]}]}]}],
   ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8099933312003736`*^9, 3.8099933312183743`*^9}},
 CellLabel->
  "In[290]:=",ExpressionUUID->"efa7a630-0850-472b-97d0-b1a354f2f556"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Figures", "Section",
 CellChangeTimes->{{3.809909248883939*^9, 
  3.809909249341937*^9}},ExpressionUUID->"53247596-243b-4538-be3b-\
2683fcc1a80e"],

Cell[CellGroupData[{

Cell["Low Confidence and Positive \[CapitalDelta]SA/\[CapitalDelta]Cm \
Reactions", "Subsection",
 CellChangeTimes->{{3.809909257070238*^9, 
  3.8099092759246926`*^9}},ExpressionUUID->"47945496-c49b-4b2a-8eda-\
684f5e7336f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "16", ",", " ", "19", ",", " ", "23", ",", " ", "68", ",", " ", "71", ",", 
    " ", "72", ",", " ", "78", ",", " ", "96", ",", " ", "98"}], " ", "*)"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.8099093075728436`*^9, 
  3.809909341009611*^9}},ExpressionUUID->"0e7d8299-bc9b-4f22-9e8a-\
c2b94c107c3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lcDat", "=", 
   RowBox[{"dat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "16", ",", "19", ",", "23", ",", "68", ",", "71", ",", "72", ",", "78", 
       ",", "96", ",", "98"}], "}"}], ",", "All"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8099094132726727`*^9, 3.809909461891588*^9}, {
   3.8099099104162903`*^9, 3.809909923685862*^9}, {3.8099101099797354`*^9, 
   3.809910110873685*^9}, 3.8099579910588646`*^9},
 CellLabel->
  "In[235]:=",ExpressionUUID->"ebb0ed23-3e30-41fa-95a3-06666701fa6f"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"get", " ", "the", " ", "forward", " ", "predictions"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.809957476984344*^9, 
  3.8099574825245895`*^9}},ExpressionUUID->"6c891aad-8e8e-48cc-afc5-\
e1fe21d7af55"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lcFwds", "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<MapBatched\>\"", "]"}], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getFwd", "[", "#", "]"}], "&"}], ",", 
     RowBox[{"lcDat", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"StringSplit", "[", 
           RowBox[{"#\"ret pred reacs\"", ",", "\"\<.\>\""}], "]"}], "]"}], 
         ">", "1"}], "&"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Pause", "[", "15", "]"}], ";"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8099574865353804`*^9, 3.809957496713118*^9}, {
   3.8099576604777637`*^9, 3.809957661098744*^9}, 3.8099577816658716`*^9, {
   3.809958272458371*^9, 3.809958274823388*^9}},
 CellLabel->
  "In[272]:=",ExpressionUUID->"c0e771cb-c0b4-47ee-8777-ca19227fa2bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lcFwdsFlat", "=", 
   RowBox[{"Dataset", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Normal", "@", 
      RowBox[{"Normal", "@", "lcFwds"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8099576567147675`*^9, 3.8099576576497746`*^9}, {
   3.8099584637171507`*^9, 3.8099584802609043`*^9}, 3.809992496119543*^9},
 CellLabel->
  "In[273]:=",ExpressionUUID->"db1db74d-96e0-480f-959f-39d6e25f8a48"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lcFwdsFlat", "//", "First"}], "//", "Keys"}], "//", 
  "Normal"}]], "Input",
 CellChangeTimes->{{3.809992523475631*^9, 3.809992528326518*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"b0f785de-1624-4394-99e6-834485443054"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"reaction number\"\>", ",", "\<\"true rsmiles\"\>", 
   ",", "\<\"true reacs\"\>", ",", "\<\"tprod\"\>", ",", "\<\"retroID\"\>", 
   ",", "\<\"ret rreac\"\>", ",", "\<\"ret pred rsmiles\"\>", 
   ",", "\<\"ret confidence\"\>", ",", "\<\"ret optimization\"\>", 
   ",", "\<\"project name\"\>", ",", "\<\"projID\"\>", 
   ",", "\<\"fwd pred rsmiles\"\>", ",", "\<\"fwd pred reacs\"\>", 
   ",", "\<\"fwd pred prod\"\>", ",", "\<\"fwd pred conf\"\>", 
   ",", "\<\"fwd pred rxn img\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8099925287471905`*^9, 3.8099927629666767`*^9, 
  3.8099933995753574`*^9, 3.809993731246913*^9},
 CellLabel->
  "Out[303]=",ExpressionUUID->"34bd69ea-838b-4bc1-853a-30d0a5b559d8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lcFwdsFlat", "=", 
   RowBox[{"addColumnToDataset", "[", 
    RowBox[{"lcFwdsFlat", ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"Normal", "[", 
            RowBox[{"allDatAnaly", "[", 
             RowBox[{"All", ",", "\"\<ret pred rsmiles\>\""}], "]"}], "]"}], 
           ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Normal", "[", 
         RowBox[{"lcFwdsFlat", "[", 
          RowBox[{"All", ",", "\"\<ret pred rsmiles\>\""}], "]"}], "]"}]}], 
       "]"}], "]"}], ",", "\"\<reaction number\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.809993334854397*^9, 3.8099933691821547`*^9}},
 CellLabel->
  "In[293]:=",ExpressionUUID->"49c2f25d-e269-4164-addf-bcc288a9f2a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"StringSplit", "[", 
      RowBox[{"#", ",", "\"\<>>\>\""}], "]"}], "&"}], ",", 
    RowBox[{"Normal", "@", 
     RowBox[{"lcFwdsFlat", "[", 
      RowBox[{"All", ",", "\"\<ret pred rsmiles\>\""}], "]"}]}]}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.810032885636682*^9, 3.810032938637683*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"7dd03d5b-ad77-4bc9-aaa4-cefac69c4dc5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CC(=O)/C=C/c1ccccc1.CCO.Nc1ccccc1.O=Cc1ccccc1.[Pd+2]\"\>", 
   ",", "\<\"O=C(/C=C/c1ccccc1)Cc1ccccc1.BrBr.ClC(Cl)Cl\"\>", 
   ",", "\<\"C1=CC(C2CCCCC2)C=CC1.Cc1ccccc1.ClCl\"\>", 
   ",", "\<\"C1=CC2C3C=CC(C3)C2C1.CC1=CCCCC1\"\>", 
   ",", "\<\"C1=CCCCC1.O=S(=O)(O)O\"\>", ",", "\<\"C#CCCCCCCC.N.[Na]\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.810032898330682*^9, 3.810032939519684*^9}},
 CellLabel->
  "Out[318]=",ExpressionUUID->"dfa0e617-cb42-4950-89fa-e2abfa2548ef"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"retRxns", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{
         RowBox[{"lcFwdsFlat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<reaction number\>\"", 
         "]"}], "]"}], ",", 
       RowBox[{"rxnPlt", "[", 
        RowBox[{"Normal", "[", 
         RowBox[{
          RowBox[{"lcFwdsFlat", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<ret pred rsmiles\>\"", 
          "]"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "@", "lcFwdsFlat"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.809909927719675*^9, 3.809910049906279*^9}, {
  3.809992511335148*^9, 3.8099925337580233`*^9}, {3.809992821418363*^9, 
  3.8099928249762683`*^9}, {3.8099934464846816`*^9, 3.8099934761885805`*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"ea8ba4f4-8497-4251-918e-6501a7f5880c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<retRxn\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"i", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<.pdf\>\""}], ",", 
      RowBox[{"i", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "retRxns"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.809993486682243*^9, 3.809993564088298*^9}, {
  3.809993616237044*^9, 
  3.809993616365921*^9}},ExpressionUUID->"37a86894-6212-410f-aa11-\
f4ea27ad426f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"retRxn16.pdf\"\>", ",", "\<\"retRxn23.pdf\"\>", 
   ",", "\<\"retRxn68.pdf\"\>", ",", "\<\"retRxn71.pdf\"\>", 
   ",", "\<\"retRxn72.pdf\"\>", ",", "\<\"retRxn98.pdf\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.809993568971693*^9},
 CellLabel->
  "Out[298]=",ExpressionUUID->"e5e20cb9-87e6-4970-9c47-7a7621f4d8f7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fwdProds", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{
         RowBox[{"lcFwdsFlat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<reaction number\>\"", 
         "]"}], "]"}], ",", 
       RowBox[{"MoleculePlot", "@", 
        RowBox[{"Molecule", "[", 
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{"lcFwdsFlat", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<fwd pred prod\>\"", 
           "]"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "@", "lcFwdsFlat"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.809909927719675*^9, 3.809910049906279*^9}, {
  3.809992511335148*^9, 3.8099925337580233`*^9}, {3.809992821418363*^9, 
  3.8099928249762683`*^9}, {3.8099934464846816`*^9, 3.8099934761885805`*^9}, {
  3.8099936198023996`*^9, 3.8099936309427524`*^9}, {3.809993985076447*^9, 
  3.809994018657562*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"27953b45-45c5-4aa7-87e6-6c6c40d579f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<fwdProd\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"i", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<.pdf\>\""}], ",", 
      RowBox[{"i", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "fwdProds"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.809993486682243*^9, 3.809993564088298*^9}, {
  3.809993649250396*^9, 3.8099936619830003`*^9}, {3.809993996585144*^9, 
  3.8099940052603664`*^9}, {3.809994061832775*^9, 
  3.8099940619452295`*^9}},ExpressionUUID->"1ac83971-6e5f-440c-9eec-\
1ea16aa48fb8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"fwdProd16.pdf\"\>", ",", "\<\"fwdProd23.pdf\"\>", 
   ",", "\<\"fwdProd68.pdf\"\>", ",", "\<\"fwdProd71.pdf\"\>", 
   ",", "\<\"fwdProd72.pdf\"\>", ",", "\<\"fwdProd98.pdf\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8099936600330887`*^9, 3.8099940241866517`*^9},
 CellLabel->
  "Out[313]=",ExpressionUUID->"5cff584b-4e23-4e57-a83e-36b06293cb75"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trueProds", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{
         RowBox[{"lcFwdsFlat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<reaction number\>\"", 
         "]"}], "]"}], ",", 
       RowBox[{"MoleculePlot", "@", 
        RowBox[{"Molecule", "[", 
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{"lcFwdsFlat", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<tprod\>\"", "]"}], 
          "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "@", "lcFwdsFlat"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.809909927719675*^9, 3.809910049906279*^9}, {
  3.809992511335148*^9, 3.8099925337580233`*^9}, {3.809992821418363*^9, 
  3.8099928249762683`*^9}, {3.8099934464846816`*^9, 3.8099934761885805`*^9}, {
  3.8099936198023996`*^9, 3.8099936309427524`*^9}, {3.809993681317855*^9, 
  3.8099936990061703`*^9}, {3.8099937688263197`*^9, 3.8099937781770363`*^9}},
 CellLabel->
  "In[308]:=",ExpressionUUID->"85a62e51-3ac5-4b9e-b2a9-aa59011cb986"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<tprod\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"i", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<.pdf\>\""}], ",", 
      RowBox[{"i", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "trueProds"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.809993486682243*^9, 3.809993564088298*^9}, {
  3.809993649250396*^9, 3.8099936792538347`*^9}, {3.8099937813400335`*^9, 
  3.809993794452033*^9}},ExpressionUUID->"964be7c0-fd48-49c8-913c-\
12c262157d24"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"tprod16.pdf\"\>", ",", "\<\"tprod23.pdf\"\>", 
   ",", "\<\"tprod68.pdf\"\>", ",", "\<\"tprod71.pdf\"\>", 
   ",", "\<\"tprod72.pdf\"\>", ",", "\<\"tprod98.pdf\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8099937922650356`*^9},
 CellLabel->
  "Out[309]=",ExpressionUUID->"2c6b0216-6196-47fc-a0bb-e48dcc1ec3d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rclass Bar Chart", "Subsubsection",
 CellChangeTimes->{{3.810051343979882*^9, 
  3.810051347391971*^9}},ExpressionUUID->"1d798f63-e131-46f4-a09d-\
3833aa280e2c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tclasses", "=", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{"Normal", "[", 
    RowBox[{"dat", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "\"\<true rclass\>\""}], "]"}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.809033668203476*^9, 3.80903368875537*^9}, {
  3.8100513515269732`*^9, 3.810051351786972*^9}},
 CellLabel->
  "In[338]:=",ExpressionUUID->"7b5588c7-cb3c-43b3-82bb-9a469b245708"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"electrophilic aromatic substitution\"\>", 
   ",", "\<\"amide formation\"\>", ",", "\<\"epoxide opening\"\>", 
   ",", "\<\"conjugate addition\"\>", ",", "\<\"dielsalder\"\>", 
   ",", "\<\"robinson\"\>", ",", "\<\"cyclisation\"\>", 
   ",", "\<\"elimination\"\>", ",", "\<\"substitution\"\>", 
   ",", "\<\"friedelcrafts\"\>", 
   ",", "\<\"nucleophilic aromatic substitution\"\>", ",", "\<\"grignard\"\>",
    ",", "\<\"organocopper\"\>", ",", "\<\"acetylide\"\>", 
   ",", "\<\"e-sub\"\>", ",", "\<\"amine\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.809033682281333*^9, 3.809033689123562*^9}, 
   3.8092192012416277`*^9, 3.809304527188518*^9, 3.8100513604859905`*^9},
 CellLabel->
  "Out[338]=",ExpressionUUID->"77b3f609-ffdd-4f8a-b816-ec57b89d676f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rGroups", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"dat", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#\"true rclass\"", "\[Equal]", 
         RowBox[{"tclasses", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "&"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "@", "tclasses"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8090337058477163`*^9, 3.809033718148182*^9}, {
  3.8090337578929815`*^9, 3.8090337865338306`*^9}, {3.809033826652271*^9, 
  3.809033841038204*^9}, {3.810051354501972*^9, 3.8100513547169733`*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"d44416e9-c011-4166-8501-7dd15afd0a3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"confs", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"First", "[", "#", "]"}], "[", "\"\<ret confidence\>\"", "]"}],
       ",", 
      RowBox[{"Mean", "@", 
       RowBox[{"Normal", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "\"\<ret confidence\>\""}], "]"}], "]"}], 
        "]"}]}]}], "]"}], "&"}], "/@", "rGroups"}]}]], "Input",
 CellChangeTimes->{{3.809034234257925*^9, 3.8090342957384787`*^9}, {
  3.80903432876271*^9, 3.80903432915471*^9}},
 CellLabel->
  "In[340]:=",ExpressionUUID->"7d52ec37-f110-42fa-8c27-02681da97d4e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.982`", ",", "0.929`", ",", "0.946`", ",", "0.936`", ",", 
   "0.6602882727272726`", ",", "0.8402499999999999`", ",", 
   "0.6457829999999999`", ",", "0.588225`", ",", "0.7888799999999999`", ",", 
   "0.922090909090909`", ",", "0.9006666666666666`", ",", 
   "0.9128000000000001`", ",", "0.996`", ",", "0.83614975`", ",", "0.794`", 
   ",", "0.6602350555555554`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8090342750888677`*^9, 3.8090342963563128`*^9}, 
   3.80903433051589*^9, 3.809219201322625*^9, 3.809304527263521*^9, 
   3.8100513608699913`*^9},
 CellLabel->
  "Out[340]=",ExpressionUUID->"ce5ac31c-eced-4612-9720-6f04ba68da88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"barDat", "=", 
  RowBox[{
   RowBox[{"AssociationThread", "[", 
    RowBox[{"tclasses", ",", "confs"}], "]"}], "//", "Sort"}]}]], "Input",
 CellChangeTimes->{{3.809034616991494*^9, 3.809034638330949*^9}, {
  3.810051610950472*^9, 3.8100516120604715`*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"68ba79f4-2e71-44ff-abdc-4248c82406c3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"elimination\"\>", "\[Rule]", "0.588225`"}], ",", 
   RowBox[{"\<\"cyclisation\"\>", "\[Rule]", "0.6457829999999999`"}], ",", 
   RowBox[{"\<\"amine\"\>", "\[Rule]", "0.6602350555555554`"}], ",", 
   RowBox[{"\<\"dielsalder\"\>", "\[Rule]", "0.6602882727272726`"}], ",", 
   RowBox[{"\<\"substitution\"\>", "\[Rule]", "0.7888799999999999`"}], ",", 
   RowBox[{"\<\"e-sub\"\>", "\[Rule]", "0.794`"}], ",", 
   RowBox[{"\<\"acetylide\"\>", "\[Rule]", "0.83614975`"}], ",", 
   RowBox[{"\<\"robinson\"\>", "\[Rule]", "0.8402499999999999`"}], ",", 
   RowBox[{"\<\"nucleophilic aromatic substitution\"\>", "\[Rule]", 
    "0.9006666666666666`"}], ",", 
   RowBox[{"\<\"grignard\"\>", "\[Rule]", "0.9128000000000001`"}], ",", 
   RowBox[{"\<\"friedelcrafts\"\>", "\[Rule]", "0.922090909090909`"}], ",", 
   RowBox[{"\<\"amide formation\"\>", "\[Rule]", "0.929`"}], ",", 
   RowBox[{"\<\"conjugate addition\"\>", "\[Rule]", "0.936`"}], ",", 
   RowBox[{"\<\"epoxide opening\"\>", "\[Rule]", "0.946`"}], ",", 
   RowBox[{"\<\"electrophilic aromatic substitution\"\>", "\[Rule]", 
    "0.982`"}], ",", 
   RowBox[{"\<\"organocopper\"\>", "\[Rule]", "0.996`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8090346331998835`*^9, 3.809034638611297*^9}, 
   3.8092192013756266`*^9, 3.80930452730652*^9, 3.810051360996991*^9, 
   3.810051613270477*^9},
 CellLabel->
  "Out[350]=",ExpressionUUID->"371945b2-8ba5-4fd1-b930-d53760a85f7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rclassBar", "=", 
  RowBox[{"BarChart", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Values", "[", "barDat", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "3"}]}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"ChartStyle", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
    RowBox[{"ChartLegends", "\[Rule]", 
     RowBox[{"Keys", "@", 
      RowBox[{"barDat", "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", 
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", "3"}]}], "}"}], "]"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8090343076075306`*^9, 3.8090343395626154`*^9}, {
   3.809034389338896*^9, 3.8090343907268915`*^9}, {3.809034504849551*^9, 
   3.8090345943875737`*^9}, 3.8100514236905637`*^9, {3.810051494817101*^9, 
   3.810051523110314*^9}, {3.8100515598840427`*^9, 3.8100515623790426`*^9}, {
   3.810051621571491*^9, 3.810051640454156*^9}, {3.810051786188182*^9, 
   3.810051876313717*^9}, {3.810051916787162*^9, 3.810051918697181*^9}, {
   3.8100519556155987`*^9, 3.8100519571295996`*^9}, {3.810051992533199*^9, 
   3.810052005006056*^9}, {3.810052039462799*^9, 3.8100520648265533`*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"ddcec322-5b3e-4012-b833-9abba4f44198"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.4107501820830298, 0.}, {7.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.651]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.651]]], 
          RGBColor[0.178927, 0.305394, 0.933501]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                0.588225}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.588225]& , 
            TagBoxNote -> "0.588225"], 
           StyleBox["0.588225`", {}, StripOnInput -> False]], Annotation[#, 
           Style[0.588225, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.651]]], 
          RGBColor[0.453318, 0.567063, 0.950106]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                0.6457829999999999}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.6457829999999999]& , 
            TagBoxNote -> "0.6457829999999999"], 
           StyleBox["0.6457829999999999`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.6457829999999999, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.651]]], 
          RGBColor[0.819984, 0.859297, 0.982692]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                0.6602350555555554}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.6602350555555554]& , 
            TagBoxNote -> "0.6602350555555554"], 
           StyleBox["0.6602350555555554`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.6602350555555554, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.651]]], 
          RGBColor[0.984192, 0.987731, 0.911643]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                0.6602882727272726}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.6602882727272726]& , 
            TagBoxNote -> "0.6602882727272726"], 
           StyleBox["0.6602882727272726`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.6602882727272726, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.651]]], 
          RGBColor[0.992503, 0.986373, 0.425376]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                0.996}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 0.996]& , TagBoxNote -> "0.996"], 
           StyleBox["0.996`", {}, StripOnInput -> False]], Annotation[#, 
           Style[0.996, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.651]]], 
          RGBColor[0.904227, 0.657999, 0.241797]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                0.982}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 0.982]& , TagBoxNote -> "0.982"], 
           StyleBox["0.982`", {}, StripOnInput -> False]], Annotation[#, 
           Style[0.982, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.651]]], 
          RGBColor[0.817319, 0.134127, 0.164218]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
                0.946}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 0.946]& , TagBoxNote -> "0.946"], 
           StyleBox["0.946`", {}, StripOnInput -> False]], Annotation[#, 
           Style[0.946, {}], "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.4107501820830298, 0.}, {7.592010779315368, 0.}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{7.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {7.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, {
         "GraphicsTicks"}, StripOnInput -> False]}, {"GraphicsAxes"}, 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.4107501820830298, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"elimination\"", "\"cyclisation\"", "\"amine\"", "\"dielsalder\"", 
       "\"organocopper\"", "\"electrophilic aromatic substitution\"", 
       "\"epoxide opening\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[0.178927, 0.305394, 0.933501]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[0.453318, 0.567063, 0.950106]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[0.819984, 0.859297, 0.982692]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[0.984192, 0.987731, 0.911643]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[0.992503, 0.986373, 0.425376]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[0.904227, 0.657999, 0.241797]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[0.817319, 0.134127, 0.164218]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.11928466666666668`, 0.203596, 0.622334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.453318, 0.567063, 0.950106], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.30221200000000004`, 0.378042, 0.6334040000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.453318`", ",", "0.567063`", ",", "0.950106`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.453318, 0.567063, 0.950106]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.453318, 0.567063, 0.950106], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.546656, 0.5728646666666667, 0.655128], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.984192, 0.987731, 0.911643], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.656128, 0.6584873333333334, 0.607762], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.984192`", ",", "0.987731`", ",", "0.911643`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.984192, 0.987731, 0.911643]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.984192, 0.987731, 0.911643], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.904227, 0.657999, 0.241797], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6028180000000001, 0.438666, 0.161198], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.904227`", ",", "0.657999`", ",", "0.241797`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.904227, 0.657999, 0.241797]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.904227, 0.657999, 0.241797], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8100513615599937`*^9, 3.810051424977562*^9, {3.8100515034870777`*^9, 
   3.8100515141448107`*^9}, 3.8100515631410427`*^9, 3.8100516371363087`*^9, {
   3.810051812204855*^9, 3.810051847079712*^9}, 3.810051877882718*^9, 
   3.810051919174185*^9, 3.810051957942851*^9, {3.8100519979727917`*^9, 
   3.8100520059606752`*^9}, {3.810052047959673*^9, 3.8100520655575547`*^9}},
 CellLabel->
  "Out[367]=",ExpressionUUID->"0643f6b3-e14d-4281-b06e-d4f7a8df5d9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<rclassBar.pdf\>\"", ",", "rclassBar"}], "]"}]], "Input",
 CellChangeTimes->{{3.810052066984226*^9, 3.8100520739129467`*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"ea4fdacd-a83f-4bc4-95a1-5d93ce2f6bfd"],

Cell[BoxData["\<\"rclassBar.pdf\"\>"], "Output",
 CellChangeTimes->{3.8100520791766853`*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"9602182c-1dc5-4ec4-982b-66d0f5a07c64"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"94170bb4-2ee6-4cbc-be2e-1749636e22ef"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 182, 3, 97, "Title",ExpressionUUID->"a80f126e-2e9f-4e88-a004-16ac514463dc"],
Cell[CellGroupData[{
Cell[787, 29, 156, 3, 67, "Section",ExpressionUUID->"e7a40034-5309-42e1-9c68-45725d119c78"],
Cell[946, 34, 369, 9, 28, "Input",ExpressionUUID->"d83c8e00-4229-4928-9af3-3203f7aa20cf"]
}, Closed]],
Cell[CellGroupData[{
Cell[1352, 48, 225, 5, 53, "Section",ExpressionUUID->"00cc5b15-c659-4af7-a722-78a5925aa4e9"],
Cell[CellGroupData[{
Cell[1602, 57, 208, 3, 48, "Subsection",ExpressionUUID->"5bca2357-55ec-4004-85f5-fc86f9dcb7a6"],
Cell[1813, 62, 671, 13, 44, "Input",ExpressionUUID->"21555b03-a397-4fae-9204-b7ca24cbc6f1"],
Cell[2487, 77, 654, 14, 40, "Input",ExpressionUUID->"ac30f7c2-ef96-4db3-b649-ab8d5a876d54",
 InitializationCell->True],
Cell[3144, 93, 416, 10, 40, "Input",ExpressionUUID->"c4504123-0251-4e58-8480-0a786f710fbb",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[3597, 108, 164, 3, 48, "Subsection",ExpressionUUID->"85cdf90f-a97a-4f3d-8fd1-eace89c017aa"],
Cell[3764, 113, 205, 5, 40, "Input",ExpressionUUID->"b41dd2b9-6947-430e-8b6a-88c0eb7bc88b",
 InitializationCell->True],
Cell[3972, 120, 9905, 208, 690, "Input",ExpressionUUID->"caaaff2a-a235-44af-8a07-685698a83de2",
 InitializationCell->True,
 CellID->82462656],
Cell[13880, 330, 407, 9, 25, "Input",ExpressionUUID->"95a8071c-4ad8-4042-9cea-ffd4dda94d90",
 CellID->710133259],
Cell[14290, 341, 14011, 299, 918, "Input",ExpressionUUID->"6ee6498a-9ff8-486d-b595-abe405d7187b",
 InitializationCell->True,
 CellID->456565911],
Cell[28304, 642, 573, 11, 25, "Input",ExpressionUUID->"abff4f5c-591c-4a5d-aebe-126778f4cc16",
 CellID->302969558],
Cell[28880, 655, 9474, 215, 795, "Input",ExpressionUUID->"a27db0f2-af40-4ba8-9885-df8da16ed5b0",
 InitializationCell->True,
 CellID->546080698],
Cell[38357, 872, 587, 11, 25, "Input",ExpressionUUID->"c3f600ea-d486-4b97-b506-3b57a3ffe244",
 CellID->835366906],
Cell[38947, 885, 15636, 347, 1163, "Input",ExpressionUUID->"dc385188-4371-4380-b4d1-7887e8acb49d",
 InitializationCell->True,
 CellID->198058059],
Cell[54586, 1234, 304, 6, 25, "Input",ExpressionUUID->"be6fd3f3-327a-4ccd-b01b-5e3e56588c59",
 CellID->214503912],
Cell[54893, 1242, 14787, 317, 1128, "Input",ExpressionUUID->"3a06d4d7-6bfd-4184-8d97-1a619c124e90",
 InitializationCell->True,
 CellID->764205725],
Cell[69683, 1561, 438, 9, 25, "Input",ExpressionUUID->"08799579-0974-49d0-88ee-cd64b73805a0",
 CellID->410988145],
Cell[70124, 1572, 21512, 462, 1497, "Input",ExpressionUUID->"c8138c09-d974-4b09-a46b-f14d536e4da2",
 InitializationCell->True,
 CellID->174420735],
Cell[91639, 2036, 439, 9, 25, "Input",ExpressionUUID->"895e2433-7c10-4a1d-9e09-8b0d723e026a",
 CellID->67748573],
Cell[92081, 2047, 29280, 624, 1900, "Input",ExpressionUUID->"81f7275d-7a4f-4f48-89f1-7c89911b9250",
 InitializationCell->True,
 CellID->40943685],
Cell[121364, 2673, 578, 12, 25, "Input",ExpressionUUID->"ddf290d2-95e3-4fab-828a-9ac6db708c95",
 CellID->173720227],
Cell[121945, 2687, 25998, 569, 1638, "Input",ExpressionUUID->"4d04322e-fbb4-47fb-986e-14b97b2aeecd",
 InitializationCell->True,
 CellID->325435022],
Cell[147946, 3258, 520, 11, 25, "Input",ExpressionUUID->"406fb1d5-b494-4499-9dcd-f9461498e16c",
 CellID->58602291],
Cell[148469, 3271, 37886, 825, 2269, "Input",ExpressionUUID->"0f2a8065-1217-48d1-b9db-d54ad828dd91",
 InitializationCell->True,
 CellID->71984446],
Cell[186358, 4098, 752, 14, 44, "Input",ExpressionUUID->"8a4809fe-d799-4d6f-a1b0-066713bd8d2e",
 CellID->594281687],
Cell[187113, 4114, 5953, 137, 567, "Input",ExpressionUUID->"341045f0-58c9-40c8-9a10-ae753cbe4d34",
 InitializationCell->True,
 CellID->430480012]
}, Closed]],
Cell[CellGroupData[{
Cell[193103, 4256, 161, 3, 34, "Subsection",ExpressionUUID->"113cc1a0-b160-487a-9530-67e78c6750fa"],
Cell[193267, 4261, 749, 17, 40, "Input",ExpressionUUID->"e4241583-6d2c-4ac6-93f2-2f2366515f86",
 InitializationCell->True],
Cell[194019, 4280, 252, 5, 25, "Input",ExpressionUUID->"3433b3d0-010f-4434-a50c-acff6c317ae4"],
Cell[194274, 4287, 254, 5, 25, "Input",ExpressionUUID->"80e8ea68-ffae-4000-85c2-bd2048b67571"],
Cell[194531, 4294, 1485, 38, 163, "Input",ExpressionUUID->"ab1a1b80-fdff-4f84-82cf-e866f6da9d25",
 InitializationCell->True],
Cell[196019, 4334, 3313, 78, 198, "Input",ExpressionUUID->"5fd5c98b-fd51-4eef-bdbc-e3aa04d5d74d",
 InitializationCell->True],
Cell[199335, 4414, 852, 18, 44, "Input",ExpressionUUID->"353ce7e0-26a5-4e05-ac80-09aabe931770"],
Cell[200190, 4434, 5005, 106, 497, "Input",ExpressionUUID->"221420ff-1cea-4a66-8be9-687f066d9bbb",
 InitializationCell->True],
Cell[205198, 4542, 4885, 103, 427, "Input",ExpressionUUID->"7aba4e2a-f235-4946-9bb7-bc881b3d2a6e",
 InitializationCell->True],
Cell[210086, 4647, 319, 7, 25, "Input",ExpressionUUID->"788d2295-bb9e-434d-962a-2ebbe36a5810"],
Cell[210408, 4656, 5615, 118, 532, "Input",ExpressionUUID->"9749155a-4486-470f-9d40-e5ca8d70dc35",
 InitializationCell->True],
Cell[216026, 4776, 861, 22, 44, "Input",ExpressionUUID->"f0800f2a-135b-44fe-9ed7-5e23073a750d"],
Cell[216890, 4800, 2098, 55, 146, "Input",ExpressionUUID->"b3c092d8-d747-468e-a8b8-b22c2dafd604",
 InitializationCell->True],
Cell[218991, 4857, 1584, 44, 146, "Input",ExpressionUUID->"5da5cb49-2cd2-43d5-9a96-2ee5363cab54",
 InitializationCell->True],
Cell[220578, 4903, 503, 10, 25, "Input",ExpressionUUID->"e2154100-9dbb-4808-84d6-a69cdc3567c4"],
Cell[221084, 4915, 5127, 126, 339, "Input",ExpressionUUID->"357820bc-6bb1-4aa8-a21e-6f0cc025bfdc",
 InitializationCell->True],
Cell[226214, 5043, 590, 12, 25, "Input",ExpressionUUID->"791ca653-f0c0-43f4-82ec-aa2f2356626a"],
Cell[226807, 5057, 5623, 135, 409, "Input",ExpressionUUID->"f0bbe2ce-26a8-4ae7-a960-ab99d1749385",
 InitializationCell->True],
Cell[232433, 5194, 275, 6, 25, "Input",ExpressionUUID->"fac7256a-f9f1-4575-8c23-29e802b4a9a9"],
Cell[232711, 5202, 57453, 1274, 2726, "Input",ExpressionUUID->"e79be9e4-45e8-49ea-8a83-90bf33cb6ac1",
 InitializationCell->True,
 CellID->481268602],
Cell[290167, 6478, 306, 6, 40, "Input",ExpressionUUID->"fb8af63a-4443-424f-a154-7e7eaea8b674",
 InitializationCell->True,
 CellID->21379190],
Cell[290476, 6486, 432, 11, 40, "Input",ExpressionUUID->"1b9108b9-f177-42cf-82cc-9cb8fadcb4ff",
 InitializationCell->True],
Cell[290911, 6499, 531, 13, 40, "Input",ExpressionUUID->"2da767e3-3967-469d-bd61-04230d104b23",
 InitializationCell->True],
Cell[291445, 6514, 539, 12, 40, "Input",ExpressionUUID->"da136b31-5f25-4c4d-a148-b2aa9a948668",
 InitializationCell->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[292033, 6532, 163, 3, 53, "Section",ExpressionUUID->"67bf2f1a-764c-4894-977f-f1e253e5df1e"],
Cell[292199, 6537, 3232, 80, 221, "Input",ExpressionUUID->"1f03ba5d-15ea-40a7-9a21-63b2f50e3af0",
 InitializationCell->True],
Cell[295434, 6619, 254, 5, 28, "Input",ExpressionUUID->"266e92ab-6923-44eb-a922-d8fdc426fa6c"],
Cell[295691, 6626, 4104, 86, 279, "Input",ExpressionUUID->"69453c47-b98a-47ce-9aeb-59af9f6e2f05",
 InitializationCell->True],
Cell[299798, 6714, 1749, 48, 143, "Input",ExpressionUUID->"efa7a630-0850-472b-97d0-b1a354f2f556",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[301584, 6767, 152, 3, 67, "Section",ExpressionUUID->"53247596-243b-4538-be3b-2683fcc1a80e"],
Cell[CellGroupData[{
Cell[301761, 6774, 225, 4, 54, "Subsection",ExpressionUUID->"47945496-c49b-4b2a-8eda-684f5e7336f8"],
Cell[301989, 6780, 362, 9, 28, "Input",ExpressionUUID->"0e7d8299-bc9b-4f22-9e8a-c2b94c107c3c"],
Cell[302354, 6791, 555, 13, 28, "Input",ExpressionUUID->"ebb0ed23-3e30-41fa-95a3-06666701fa6f"],
Cell[302912, 6806, 255, 6, 28, "Input",ExpressionUUID->"6c891aad-8e8e-48cc-afc5-e1fe21d7af55"],
Cell[303170, 6814, 882, 23, 28, "Input",ExpressionUUID->"c0e771cb-c0b4-47ee-8777-ca19227fa2bb"],
Cell[304055, 6839, 439, 10, 28, "Input",ExpressionUUID->"db1db74d-96e0-480f-959f-39d6e25f8a48"],
Cell[CellGroupData[{
Cell[304519, 6853, 272, 7, 28, "Input",ExpressionUUID->"b0f785de-1624-4394-99e6-834485443054"],
Cell[304794, 6862, 747, 13, 53, "Output",ExpressionUUID->"34bd69ea-838b-4bc1-853a-30d0a5b559d8"]
}, Open  ]],
Cell[305556, 6878, 846, 22, 49, "Input",ExpressionUUID->"49c2f25d-e269-4164-addf-bcc288a9f2a7"],
Cell[CellGroupData[{
Cell[306427, 6904, 525, 14, 28, "Input",ExpressionUUID->"7dd03d5b-ad77-4bc9-aaa4-cefac69c4dc5"],
Cell[306955, 6920, 521, 10, 53, "Output",ExpressionUUID->"dfa0e617-cb42-4950-89fa-e2abfa2548ef"]
}, Open  ]],
Cell[307491, 6933, 995, 26, 28, "Input",ExpressionUUID->"ea8ba4f4-8497-4251-918e-6501a7f5880c"],
Cell[CellGroupData[{
Cell[308511, 6963, 621, 17, 28, "Input",ExpressionUUID->"37a86894-6212-410f-aa11-f4ea27ad426f"],
Cell[309135, 6982, 363, 8, 32, "Output",ExpressionUUID->"e5e20cb9-87e6-4970-9c47-7a7621f4d8f7"]
}, Open  ]],
Cell[309513, 6993, 1142, 29, 49, "Input",ExpressionUUID->"27953b45-45c5-4aa7-87e6-6c6c40d579f1"],
Cell[CellGroupData[{
Cell[310680, 7026, 724, 18, 28, "Input",ExpressionUUID->"1ac83971-6e5f-440c-9eec-1ea16aa48fb8"],
Cell[311407, 7046, 395, 8, 32, "Output",ExpressionUUID->"5cff584b-4e23-4e57-a83e-36b06293cb75"]
}, Open  ]],
Cell[311817, 7057, 1186, 29, 49, "Input",ExpressionUUID->"85a62e51-3ac5-4b9e-b2a9-aa59011cb986"],
Cell[CellGroupData[{
Cell[313028, 7090, 672, 17, 28, "Input",ExpressionUUID->"964be7c0-fd48-49c8-913c-12c262157d24"],
Cell[313703, 7109, 356, 7, 32, "Output",ExpressionUUID->"2c6b0216-6196-47fc-a0bb-e48dcc1ec3d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314096, 7121, 167, 3, 45, "Subsubsection",ExpressionUUID->"1d798f63-e131-46f4-a09d-3833aa280e2c"],
Cell[CellGroupData[{
Cell[314288, 7128, 441, 11, 28, "Input",ExpressionUUID->"7b5588c7-cb3c-43b3-82bb-9a469b245708"],
Cell[314732, 7141, 801, 14, 53, "Output",ExpressionUUID->"77b3f609-ffdd-4f8a-b816-ec57b89d676f"]
}, Open  ]],
Cell[315548, 7158, 755, 19, 28, "Input",ExpressionUUID->"d44416e9-c011-4166-8501-7dd15afd0a3c"],
Cell[CellGroupData[{
Cell[316328, 7181, 731, 20, 28, "Input",ExpressionUUID->"7d52ec37-f110-42fa-8c27-02681da97d4e"],
Cell[317062, 7203, 677, 13, 32, "Output",ExpressionUUID->"ce5ac31c-eced-4612-9720-6f04ba68da88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317776, 7221, 362, 8, 28, "Input",ExpressionUUID->"68ba79f4-2e71-44ff-abdc-4248c82406c3"],
Cell[318141, 7231, 1513, 26, 92, "Output",ExpressionUUID->"371945b2-8ba5-4fd1-b930-d53760a85f7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319691, 7262, 1463, 31, 49, "Input",ExpressionUUID->"ddcec322-5b3e-4012-b833-9abba4f44198"],
Cell[321157, 7295, 35401, 747, 238, "Output",ExpressionUUID->"0643f6b3-e14d-4281-b06e-d4f7a8df5d9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356595, 8047, 261, 5, 28, "Input",ExpressionUUID->"ea4fdacd-a83f-4bc4-95a1-5d93ce2f6bfd"],
Cell[356859, 8054, 175, 3, 81, "Output",ExpressionUUID->"9602182c-1dc5-4ec4-982b-66d0f5a07c64"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

